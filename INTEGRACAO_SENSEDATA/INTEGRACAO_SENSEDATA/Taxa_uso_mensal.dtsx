<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="6/5/2020 3:16:25 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="2WNP172"
  DTS:CreatorName="VAGASTEC\fiama.cristi"
  DTS:DTSID="{169CEF70-5772-43F4-B394-E7B3EF55AFF8}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="14.0.3026.27"
  DTS:LocaleID="1046"
  DTS:ObjectName="Taxa_uso_mensal"
  DTS:PackageType="5"
  DTS:ProtectionLevel="2"
  DTS:VersionBuild="56"
  DTS:VersionGUID="{A27C6BF3-4ECE-4BDA-A11C-532C94877057}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[CSV Taxa de uso mensal]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{DAE5E7DF-5165-4A61-8F7E-360C30E4DD20}"
      DTS:ObjectName="CSV Taxa de uso mensal">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[$Project::CSV_DIR] + "\\" + REPLACE(SUBSTRING((DT_STR,30,1252)GETDATE(),1,10),"-","_") +  "\\" + @[$Package::CSV_NAME]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1046"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x0022_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\Users\fiama.cristi\Documents\integracao_sensedata\ftp\2021_03_09\taxa_de_uso_mensal.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x007C_"
              DTS:MaximumWidth="100"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Cliente_VAGAS"
              DTS:DTSID="{EDFAA4F2-D05F-4066-9647-366076A825C5}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x007C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="Cod_cli"
              DTS:DTSID="{41946A83-7771-4EE6-BB60-EE6C90E152F1}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x007C_"
              DTS:MaximumWidth="100"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Id_ContaCRM"
              DTS:DTSID="{10EFEB39-3CD4-47B7-8A94-382307F48516}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x007C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Minimo"
              DTS:DTSID="{A17A8F05-F2E9-47EB-8A18-321DA4231F30}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x007C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Maximo"
              DTS:DTSID="{A91BC765-D1BA-43B5-B1EC-51A85C770F43}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x007C_"
              DTS:DataType="133"
              DTS:TextQualified="True"
              DTS:ObjectName="Mes"
              DTS:DTSID="{CBA9E934-5987-4E79-9E52-6A17415D0E8C}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x007C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="Qtd_vagas_criadas"
              DTS:DTSID="{36C61903-CA6C-42AA-8999-BD308381A445}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x007C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Qtd_extracoes_bcc"
              DTS:DTSID="{C21459B8-897F-4D43-A95A-C2BE1819DD27}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="100"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Base_taxa_uso"
              DTS:DTSID="{BD0551E4-FAB9-4A87-A422-3B7C7E32C4B7}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Desktop]"
      DTS:CreationName="FILE"
      DTS:DTSID="{06AEBF27-5384-498D-B59E-1F750F8FD810}"
      DTS:ObjectName="Desktop">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[$Project::CSV_DIR] + "\\" + REPLACE(SUBSTRING((DT_STR,30,1252)GETDATE(),1,10),"-","_")</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:FileUsageType="3"
          DTS:ConnectionString="C:\Users\fiama.cristi\Documents\integracao_sensedata\ftp\2021_03_09" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{E4A5999B-CB9A-4D7E-A20A-6404495CD64A}"
      DTS:ObjectName="CSV_NAME">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">taxa_de_uso_mensal.csv</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Criar tabelas temporárias - VAGAS_DW"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Tarefa Executar SQL"
      DTS:DTSID="{cde4d588-7d42-4436-8508-6f0c10afcff0}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Criar tabelas temporárias - VAGAS_DW"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{C9C5C2E3-4F23-4A32-8949-107BB2A1C923}"
          SQLTask:SqlStatementSource="------------------------------------------------------------&#xA;-- Query com as consultas da taxa de uso mensal da sensedata:&#xA;------------------------------------------------------------&#xA;&#xA;-- Tabela de datas:&#xA;drop table if exists Sensedata.Datas_TaxaUsoMensal ;&#xA;&#xA;with cte_datas as (&#xA;&#x9;select&#x9;convert(date, '20190101') as [Data]&#xA;&#x9;union all&#xA;&#x9;select&#x9;dateadd(day, 1, [Data]) &#xA;&#x9;from&#x9;cte_datas&#xA;&#x9;where&#x9;dateadd(day, 1, [Data]) &lt;=  eomonth(getdate())&#xA;&#x9;&#x9;&#x9;&#xA;)&#xA;select&#x9;A.[Data]&#xA;into&#x9;Sensedata.Datas_TaxaUsoMensal&#xA;from&#x9;cte_datas as A&#xA;where&#x9;day(A.[Data]) = 1&#xA;option (maxrecursion 32767)&#xA;&#xA;&#xA;-- Lista de clientes elegíveis pra base de cálculo da Taxa de uso da sensedata (FIT, Aviso prévio, bloqueado, bloqueado inadimplência):&#xA;DROP TABLE IF EXISTS [Sensedata].[Clientes_TaxaUso_Sensedata] ;&#xA;GO&#xA;&#xA;SELECT&#x9;A.Cod_cli&#xA;INTO&#x9;[Sensedata].[Clientes_TaxaUso_Sensedata]&#xA;FROM&#x9;[VAGAS_DW].[TMP_CLIENTES_SENSEDATA] AS A&#xA;WHERE&#x9;(A.Tipo_conta = 'cliente_fit' AND A.Categoria_conta = 'cliente_fit'&#xA;&#x9; OR A.Tipo_conta = 'cliente_vagas_redes' AND A.Categoria_conta = 'cliente_vagas_redes')&#xA;UNION ALL&#xA;SELECT&#x9;A.Cod_cli&#xA;FROM&#x9;[VAGAS_DW].[TMP_CLIENTES_SENSEDATA] AS A&#x9;&#x9;&#x9;CROSS APPLY (SELECT&#x9;TOP 1 A1.PRODUTO_GRUPO&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; FROM&#x9;[VAGAS_DW].[VAGAS_DW].[OPORTUNIDADES] AS A1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHERE&#x9;A.Id_ClienteCRM = A1.CONTAID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND A1.RECORRENTE = 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND A1.OportunidadeCategoria &lt;&gt; 'rescisão'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; ORDER BY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;A1.DataFechamento DESC) AS B&#xA;WHERE&#x9;A.TIPO_CONTA  IN ('cliente_em_aviso_previo', 'cliente_bloqueado', 'cliente_bloqueado_inadimplencia')&#xA;&#x9;&#x9;AND A.CATEGORIA_CONTA  IN ('cliente_em_aviso_previo', 'cliente_bloqueado', 'cliente_bloqueado_inadimplencia')&#xA;&#x9;&#x9;AND B.PRODUTO_GRUPO = 'FIT' ; &#xA;&#xA;&#xA;-- Query da taxa de uso mensal:&#xA;WITH VagasRE AS&#xA;&#x9;  (&#xA;&#x9;  SELECT A1.CodCliente_vaga AS Cod_cli ,&#xA;&#x9;&#x9;&#x9; DATEADD(DAY, 1, DATEADD(DAY, DAY(A1.DtCriacao_vaga) *-1, CONVERT(DATE, A1.DtCriacao_vaga))) AS Mes_criacao_vagaRE,&#xA;&#x9;&#x9;&#x9; CONVERT(DATE, A1.DtCriacao_vaga) AS DataCriacao_vagaRE,&#xA;&#x9;&#x9;&#x9; COUNT(*) AS Qtd_vagas_criadas&#x9;&#x9; &#xA;&#x9;  FROM&#x9; [hrh-data].[dbo].[Vagas] AS A1&#x9;  INNER JOIN [hrh-data].[dbo].[Divisoes] AS A2   ON A1.CodDivVeic_vaga = A2.Cod_div&#xA;&#x9;  WHERE  A1.ColetaCur_vaga = 0&#xA;&#x9;&#x9;     AND A1.VagaComExt_Vaga = 0&#xA;&#x9;&#x9;&#x9; AND A1.TipoProcesso_vaga = 0&#xA;&#x9;&#x9;&#x9; AND A1.VagaModelo_vaga = 0 &#xA;&#x9;&#x9;&#x9; AND LEFT(A1.Cargo_vaga,5) &lt;&gt; 'demo '  &#xA;&#x9;&#x9;&#x9; AND LEFT(A1.Cargo_vaga,5) &lt;&gt; 'demo-' -- &#xA;&#x9;&#x9;&#x9; AND A2.CodNavEx_div &lt;&gt; 300 -- Excluir RI&#xA;&#x9;&#x9;&#x9; AND A1.DtCriacao_vaga &gt;= '20190101'&#xA;&#x9;&#x9;&#x9; AND A1.DtCriacao_vaga &lt; dateadd(day, 1, eomonth(getdate()))&#xA;&#x9;  GROUP BY &#xA;&#x9;&#x9;&#x9; A1.CodCliente_vaga ,&#xA;&#x9;&#x9;&#x9; DATEADD(DAY, 1, DATEADD(DAY, DAY(A1.DtCriacao_vaga) *-1, CONVERT(DATE, A1.DtCriacao_vaga))),&#xA;&#x9;&#x9;&#x9; CONVERT(DATE, A1.DtCriacao_vaga)&#xA;&#x9; ) ,&#xA;&#x9; Extracoes_BCC AS&#xA;&#x9; (&#xA;&#x9; SELECT A1.CodCliente_pedido AS Cod_cli ,&#xA;&#x9;&#x9;&#x9;DATEADD(DAY, 1, DATEADD(DAY, DAY(A1.Dt_pedido) *-1, CONVERT(DATE, A1.Dt_pedido))) AS Mes_extracao_bcc,&#xA;&#x9;        ROUND(CONVERT(REAL,COUNT(DISTINCT A2.CodCand_itemPed))/20., 1) AS Qtd_extracoes_bcc&#xA;&#x9; FROM   [hrh-data].[dbo].[Pedidos] AS A1  INNER JOIN [hrh-data].[dbo].[Pedidos-itens] AS A2  ON A1.Cod_pedido = A2.CodPed_itemPed&#xA;&#x9; WHERE&#x9;A2.EstadoCand_itemPed &gt;= 2 &#xA;&#x9;&#x9;&#x9;AND A1.Dt_pedido &gt;= '20190101'&#xA;&#x9;&#x9;&#x9;AND A1.Dt_pedido &lt; dateadd(day, 1, eomonth(getdate()))&#xA;&#x9; GROUP BY&#xA;&#x9;&#x9;&#x9;A1.CodCliente_pedido ,&#xA;&#x9;&#x9;&#x9;DATEADD(DAY, 1, DATEADD(DAY, DAY(A1.Dt_pedido) *-1, CONVERT(DATE, A1.Dt_pedido)))&#xA;&#x9; ) ,&#xA;&#x9; VagasRI AS&#xA;&#x9; (&#xA;&#x9; SELECT A1.CodCliente_vaga AS Cod_cli ,&#xA;&#x9;&#x9;&#x9; DATEADD(DAY, 1, DATEADD(DAY, DAY(A1.DtCriacao_vaga) *-1, CONVERT(DATE, A1.DtCriacao_vaga))) AS Mes_criacao_vagaRI,&#xA;&#x9;&#x9;&#x9; CONVERT(DATE, A1.DtCriacao_vaga) AS DataCriacao_vagaRI,&#xA;&#x9;&#x9;&#x9; COUNT(*) AS Qtd_vagas_criadas&#x9;&#x9; &#xA;&#x9;  FROM&#x9; [hrh-data].[dbo].[Vagas] AS A1&#x9; INNER JOIN [hrh-data].[dbo].[Divisoes] AS A2  ON A1.CodDivVeic_vaga = A2.Cod_div&#xA;&#x9;  WHERE  A1.ColetaCur_vaga = 0&#xA;&#x9;&#x9;     AND A1.VagaComExt_Vaga = 0&#xA;&#x9;&#x9;&#x9; AND A1.TipoProcesso_vaga = 0&#xA;&#x9;&#x9;&#x9; AND A1.VagaModelo_vaga = 0 &#xA;&#x9;&#x9;&#x9; AND LEFT(A1.Cargo_vaga,5) &lt;&gt; 'demo '  &#xA;&#x9;&#x9;&#x9; AND LEFT(A1.Cargo_vaga,5) &lt;&gt; 'demo-' -- &#xA;&#x9;&#x9;&#x9; AND A2.CodNavEx_div = 300 -- Excluir RI&#xA;&#x9;&#x9;&#x9; AND A1.DtCriacao_vaga &gt;= '20190101'&#xA;&#x9;&#x9;&#x9; AND A1.DtCriacao_vaga &lt; dateadd(day, 1, eomonth(getdate()))&#xA;&#x9;  GROUP BY &#xA;&#x9;&#x9;&#x9; A1.CodCliente_vaga ,&#xA;&#x9;&#x9;&#x9; DATEADD(DAY, 1, DATEADD(DAY, DAY(A1.DtCriacao_vaga) *-1, CONVERT(DATE, A1.DtCriacao_vaga))),&#xA;&#x9;&#x9;&#x9; CONVERT(DATE, A1.DtCriacao_vaga)&#xA;&#xA;&#x9; ),&#xA;&#x9;VagasRE_consolidado AS&#xA;&#x9;(&#xA;&#x9;SELECT&#x9;A1.Cod_cli,&#xA;&#x9;&#x9;&#x9;A1.Mes_criacao_vagaRE,&#xA;&#x9;&#x9;&#x9;SUM(A1.Qtd_vagas_criadas) AS Qtd_vagas_criadas&#xA;&#x9;FROM&#x9;VagasRE AS A1&#xA;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;A1.Cod_cli,&#xA;&#x9;&#x9;&#x9;A1.Mes_criacao_vagaRE&#xA;&#x9;),&#xA;&#x9;Extracoes_BCC_consolidado AS&#xA;&#x9;(&#xA;&#x9;SELECT&#x9;A1.Cod_cli,&#x9;&#xA;&#x9;&#x9;&#x9;A1.Mes_extracao_bcc,&#xA;&#x9;&#x9;&#x9;SUM(A1.Qtd_extracoes_bcc) AS Qtd_extracoes_bcc&#xA;&#x9;FROM&#x9;Extracoes_BCC AS A1&#xA;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;A1.Cod_cli,&#x9;&#xA;&#x9;&#x9;&#x9;A1.Mes_extracao_bcc&#xA;&#x9;),&#xA;&#x9;VagasRI_consolidado AS&#xA;&#x9;(&#xA;&#x9;SELECT&#x9;A1.Cod_cli,&#xA;&#x9;&#x9;&#x9;A1.Mes_criacao_vagaRI,&#xA;&#x9;&#x9;&#x9;SUM(A1.Qtd_vagas_criadas) AS Qtd_vagas_criadas&#xA;&#x9;FROM&#x9;VagasRI AS A1&#xA;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;A1.Cod_cli,&#xA;&#x9;&#x9;&#x9;A1.Mes_criacao_vagaRI&#xA;&#x9;)&#xA;INSERT INTO [Sensedata].[TAXA_USO_MENSAL_SENSEDATA]&#xA;SELECT&#x9;C.Cliente_VAGAS,&#xA;&#x9;&#x9;Subquery.Cod_cli,&#xA;&#x9;&#x9;CONTA_ID AS Id_ContaCRM,&#xA;&#x9;&#x9;B.QtdeMinVagas_cliPerfUso AS Minimo,&#xA;&#x9;&#x9;B.QtdeMaxVagas_cliPerfUso AS Maximo,&#xA;&#x9;&#x9;Subquery.Data AS Mes,&#xA;&#x9;&#x9;ISNULL(D.Qtd_vagas_criadas, 0) AS Qtd_vagas_criadas,&#xA;&#x9;&#x9;CONVERT(VARCHAR, ISNULL(E.Qtd_extracoes_bcc, 0)) AS Qtd_extracoes_bcc,&#xA;&#x9;&#x9;'RE' AS Base_taxa_uso&#xA;FROM&#x9;(&#xA;SELECT&#x9;CodCli_cliPerfUso AS Cod_cli,&#xA;&#x9;&#x9;Data,&#xA;&#x9;&#x9;MAX(Cod_cliPerfUso) AS Cod_cliPerfUso&#xA;FROM&#x9;[hrh-data].[dbo].[Clientes-PerfilUso] AS A&#x9;&#x9;CROSS JOIN [Sensedata].[Datas_TaxaUsoMensal]&#xA;WHERE&#x9;convert(datetime, convert(nvarchar,Year(DataAtualPerfil_cliPerfUso)) + '/' +  convert(nvarchar,Month(DataAtualPerfil_cliPerfUso)) + '/01', 111) &lt;= Data&#xA;GROUP BY&#xA;&#x9;&#x9;CodCli_cliPerfUso,&#xA;&#x9;&#x9;Data ) AS Subquery&#x9;&#x9;INNER JOIN [hrh-data].[dbo].[Clientes-PerfilUso] AS B ON Subquery.Cod_cliPerfUso = B.Cod_cliPerfUso&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN [VAGAS_DW].[VAGAS_DW].[CLIENTES] AS C ON B.CodCli_cliPerfUso = C.COD_CLI&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN VagasRE_consolidado AS D ON Subquery.Cod_cli = D.Cod_cli&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; AND Subquery.[Data] = D.Mes_criacao_vagaRE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN Extracoes_BCC_consolidado AS E ON Subquery.Cod_cli = E.Cod_cli&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; AND Subquery.[Data]  = E.Mes_extracao_BCC&#xA;WHERE&#x9;EXISTS (SELECT *&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#x9;[VAGAS_DW].[TMP_CLIENTES_SENSEDATA] AS A1&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#x9;Subquery.Cod_cli = A1.Cod_cli)&#xA;&#x9;&#x9;AND EXISTS (SELECT *&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#x9;[Sensedata].[Clientes_TaxaUso_Sensedata] AS A1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE&#x9;Subquery.cod_cli = A1.Cod_cli)&#xA;&#x9;&#x9;AND NOT (B.QtdeMinVagas_cliPerfUso IS NULL&#xA;&#x9;&#x9;&#x9;&#x9; OR B.QtdeMaxVagas_cliPerfUso IS NULL)&#xA;&#x9;&#x9;AND NOT (B.QtdeMinVagas_cliPerfUso = 0&#xA;&#x9;&#x9;&#x9;&#x9; AND B.QtdeMaxVagas_cliPerfUso = 0)&#xA;&#xA;UNION ALL&#xA;SELECT&#x9;C.Cliente_VAGAS,&#xA;&#x9;&#x9;Subquery.Cod_cli,&#xA;&#x9;&#x9;CONTA_ID AS Id_ContaCRM,&#xA;&#x9;&#x9;B.QtdeMinVagasRI_cliPerfUso AS Minimo,&#xA;&#x9;&#x9;B.QtdeMaxVagasRI_cliPerfUso AS Maximo,&#xA;&#x9;&#x9;Subquery.Data AS Mes,&#xA;&#x9;&#x9;ISNULL(D.Qtd_vagas_criadas, 0) AS Qtd_vagas_criadas,&#xA;&#x9;&#x9;'' AS Qtd_extracoes_bcc,&#xA;&#x9;&#x9;'RI' AS Base_taxa_uso&#xA;FROM&#x9;(&#xA;SELECT&#x9;CodCli_cliPerfUso AS Cod_cli,&#xA;&#x9;&#x9;Data,&#xA;&#x9;&#x9;MAX(Cod_cliPerfUso) AS Cod_cliPerfUso&#xA;FROM&#x9;[hrh-data].[dbo].[Clientes-PerfilUso] AS A&#x9;&#x9;CROSS JOIN [Sensedata].[Datas_TaxaUsoMensal]&#xA;WHERE&#x9;convert(datetime, convert(nvarchar,Year(DataAtualPerfil_cliPerfUso)) + '/' +  convert(nvarchar,Month(DataAtualPerfil_cliPerfUso)) + '/01', 111) &lt;= Data&#xA;GROUP BY&#xA;&#x9;&#x9;CodCli_cliPerfUso,&#xA;&#x9;&#x9;Data ) AS Subquery&#x9;&#x9;INNER JOIN [hrh-data].[dbo].[Clientes-PerfilUso] AS B ON Subquery.Cod_cliPerfUso = B.Cod_cliPerfUso&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN [VAGAS_DW].[VAGAS_DW].[CLIENTES] AS C ON B.CodCli_cliPerfUso = C.COD_CLI&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN VagasRI_consolidado AS D ON Subquery.Cod_cli = D.Cod_cli&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; AND Subquery.[Data] = D.Mes_criacao_vagaRI&#xA;WHERE&#x9;EXISTS (SELECT *&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#x9;[VAGAS_DW].[TMP_CLIENTES_SENSEDATA] AS A1&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#x9;Subquery.Cod_cli = A1.Cod_cli)&#xA;&#x9;&#x9;AND EXISTS (SELECT *&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#x9;[Sensedata].[Clientes_TaxaUso_Sensedata] AS A1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE&#x9;Subquery.cod_cli = A1.Cod_cli)&#xA;&#x9;&#x9;AND NOT (B.QtdeMinVagasRI_cliPerfUso IS NULL&#xA;&#x9;&#x9;&#x9;&#x9; OR B.QtdeMaxVagasRI_cliPerfUso IS NULL)&#xA;&#x9;&#x9;AND NOT (B.QtdeMinVagasRI_cliPerfUso = 0&#xA;&#x9;&#x9;&#x9;&#x9; AND B.QtdeMaxVagasRI_cliPerfUso = 0)&#xA;ORDER BY&#xA;&#x9;&#x9;Cod_cli ASC,&#xA;&#x9;&#x9;Mes ASC ;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Exceções"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Tarefa Executar SQL"
      DTS:DTSID="{E90A160E-3D1A-44D7-8D33-801F95246BF4}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Exceções"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{C9C5C2E3-4F23-4A32-8949-107BB2A1C923}"
          SQLTask:SqlStatementSource="-- Taxa de uso mensal da empresa Oi ajustado devido a mudança do id vagas Oi pra Oi SA:&#xA;use stage;&#xA;&#xA;if exists (select * from [vagas_dw].[tmp_clientes_sensedata] where Id_ClienteCRM = '476eb982-e60e-11e4-a9bf-0ea319e5a468')&#xA;begin&#xA;&#xA;&#xA;drop table if exists #Tmp_DadosOi ;&#xA;&#xA;-- Query da taxa de uso mensal:&#xA;WITH VagasRE AS&#xA;&#x9;  (&#xA;&#x9;  SELECT A1.CodCliente_vaga AS Cod_cli ,&#xA;&#x9;&#x9;&#x9; DATEADD(DAY, 1, DATEADD(DAY, DAY(A1.DtCriacao_vaga) *-1, CONVERT(DATE, A1.DtCriacao_vaga))) AS Mes_criacao_vagaRE,&#xA;&#x9;&#x9;&#x9; CONVERT(DATE, A1.DtCriacao_vaga) AS DataCriacao_vagaRE,&#xA;&#x9;&#x9;&#x9; COUNT(*) AS Qtd_vagas_criadas&#x9;&#x9; &#xA;&#x9;  FROM&#x9; [hrh-data].[dbo].[Vagas] AS A1 with(nolock)  INNER JOIN [hrh-data].[dbo].[Divisoes] AS A2 with(nolock)   ON A1.CodDivVeic_vaga = A2.Cod_div&#xA;&#x9;  WHERE  A1.ColetaCur_vaga = 0&#xA;&#x9;&#x9;     AND A1.VagaComExt_Vaga = 0&#xA;&#x9;&#x9;&#x9; AND A1.TipoProcesso_vaga = 0&#xA;&#x9;&#x9;&#x9; AND A1.VagaModelo_vaga = 0 &#xA;&#x9;&#x9;&#x9; AND LEFT(A1.Cargo_vaga,5) &lt;&gt; 'demo '  &#xA;&#x9;&#x9;&#x9; AND LEFT(A1.Cargo_vaga,5) &lt;&gt; 'demo-' -- &#xA;&#x9;&#x9;&#x9; AND A2.CodNavEx_div &lt;&gt; 300 -- Excluir RI&#xA;&#x9;&#x9;&#x9; AND A1.DtCriacao_vaga &gt;= '20190101'&#xA;&#x9;&#x9;&#x9; AND A1.DtCriacao_vaga &lt; dateadd(day, 1, eomonth(getdate()))&#xA;&#x9;  GROUP BY &#xA;&#x9;&#x9;&#x9; A1.CodCliente_vaga ,&#xA;&#x9;&#x9;&#x9; DATEADD(DAY, 1, DATEADD(DAY, DAY(A1.DtCriacao_vaga) *-1, CONVERT(DATE, A1.DtCriacao_vaga))),&#xA;&#x9;&#x9;&#x9; CONVERT(DATE, A1.DtCriacao_vaga)&#xA;&#x9; ) ,&#xA;&#x9; Extracoes_BCC AS&#xA;&#x9; (&#xA;&#x9; SELECT A1.CodCliente_pedido AS Cod_cli ,&#xA;&#x9;&#x9;&#x9;DATEADD(DAY, 1, DATEADD(DAY, DAY(A1.Dt_pedido) *-1, CONVERT(DATE, A1.Dt_pedido))) AS Mes_extracao_bcc,&#xA;&#x9;        ROUND(CONVERT(REAL,COUNT(DISTINCT A2.CodCand_itemPed))/20., 1) AS Qtd_extracoes_bcc&#xA;&#x9; FROM   [hrh-data].[dbo].[Pedidos] AS A1 with(nolock)  INNER JOIN [hrh-data].[dbo].[Pedidos-itens] AS A2 with(nolock)  ON A1.Cod_pedido = A2.CodPed_itemPed&#xA;&#x9; WHERE&#x9;A2.EstadoCand_itemPed &gt;= 2 &#xA;&#x9;&#x9;&#x9;AND A1.Dt_pedido &gt;= '20190101'&#xA;&#x9;&#x9;&#x9;AND A1.Dt_pedido &lt; dateadd(day, 1, eomonth(getdate()))&#xA;&#x9; GROUP BY&#xA;&#x9;&#x9;&#x9;A1.CodCliente_pedido ,&#xA;&#x9;&#x9;&#x9;DATEADD(DAY, 1, DATEADD(DAY, DAY(A1.Dt_pedido) *-1, CONVERT(DATE, A1.Dt_pedido)))&#xA;&#x9; ) ,&#xA;&#x9; VagasRI AS&#xA;&#x9; (&#xA;&#x9; SELECT A1.CodCliente_vaga AS Cod_cli ,&#xA;&#x9;&#x9;&#x9; DATEADD(DAY, 1, DATEADD(DAY, DAY(A1.DtCriacao_vaga) *-1, CONVERT(DATE, A1.DtCriacao_vaga))) AS Mes_criacao_vagaRI,&#xA;&#x9;&#x9;&#x9; CONVERT(DATE, A1.DtCriacao_vaga) AS DataCriacao_vagaRI,&#xA;&#x9;&#x9;&#x9; COUNT(*) AS Qtd_vagas_criadas&#x9;&#x9; &#xA;&#x9;  FROM&#x9; [hrh-data].[dbo].[Vagas] AS A1&#x9; with(nolock) INNER JOIN [hrh-data].[dbo].[Divisoes] AS A2 with(nolock)  ON A1.CodDivVeic_vaga = A2.Cod_div&#xA;&#x9;  WHERE  A1.ColetaCur_vaga = 0&#xA;&#x9;&#x9;     AND A1.VagaComExt_Vaga = 0&#xA;&#x9;&#x9;&#x9; AND A1.TipoProcesso_vaga = 0&#xA;&#x9;&#x9;&#x9; AND A1.VagaModelo_vaga = 0 &#xA;&#x9;&#x9;&#x9; AND LEFT(A1.Cargo_vaga,5) &lt;&gt; 'demo '  &#xA;&#x9;&#x9;&#x9; AND LEFT(A1.Cargo_vaga,5) &lt;&gt; 'demo-' -- &#xA;&#x9;&#x9;&#x9; AND A2.CodNavEx_div = 300 -- Excluir RI&#xA;&#x9;&#x9;&#x9; AND A1.DtCriacao_vaga &gt;= '20190101'&#xA;&#x9;&#x9;&#x9; AND A1.DtCriacao_vaga &lt; dateadd(day, 1, eomonth(getdate()))&#xA;&#x9;  GROUP BY &#xA;&#x9;&#x9;&#x9; A1.CodCliente_vaga ,&#xA;&#x9;&#x9;&#x9; DATEADD(DAY, 1, DATEADD(DAY, DAY(A1.DtCriacao_vaga) *-1, CONVERT(DATE, A1.DtCriacao_vaga))),&#xA;&#x9;&#x9;&#x9; CONVERT(DATE, A1.DtCriacao_vaga)&#xA;&#xA;&#x9; ),&#xA;&#x9;VagasRE_consolidado AS&#xA;&#x9;(&#xA;&#x9;SELECT&#x9;A1.Cod_cli,&#xA;&#x9;&#x9;&#x9;A1.Mes_criacao_vagaRE,&#xA;&#x9;&#x9;&#x9;SUM(A1.Qtd_vagas_criadas) AS Qtd_vagas_criadas&#xA;&#x9;FROM&#x9;VagasRE AS A1&#xA;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;A1.Cod_cli,&#xA;&#x9;&#x9;&#x9;A1.Mes_criacao_vagaRE&#xA;&#x9;),&#xA;&#x9;Extracoes_BCC_consolidado AS&#xA;&#x9;(&#xA;&#x9;SELECT&#x9;A1.Cod_cli,&#x9;&#xA;&#x9;&#x9;&#x9;A1.Mes_extracao_bcc,&#xA;&#x9;&#x9;&#x9;SUM(A1.Qtd_extracoes_bcc) AS Qtd_extracoes_bcc&#xA;&#x9;FROM&#x9;Extracoes_BCC AS A1&#xA;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;A1.Cod_cli,&#x9;&#xA;&#x9;&#x9;&#x9;A1.Mes_extracao_bcc&#xA;&#x9;),&#xA;&#x9;VagasRI_consolidado AS&#xA;&#x9;(&#xA;&#x9;SELECT&#x9;A1.Cod_cli,&#xA;&#x9;&#x9;&#x9;A1.Mes_criacao_vagaRI,&#xA;&#x9;&#x9;&#x9;SUM(A1.Qtd_vagas_criadas) AS Qtd_vagas_criadas&#xA;&#x9;FROM&#x9;VagasRI AS A1&#xA;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;A1.Cod_cli,&#xA;&#x9;&#x9;&#x9;A1.Mes_criacao_vagaRI&#xA;&#x9;)&#xA;SELECT&#x9;C.Ident_cli collate SQL_Latin1_General_CP1_CI_AI as Cliente_VAGAS,&#xA;&#x9;&#x9;Subquery.Cod_cli,&#xA;&#x9;&#x9;C.IdContaCRM_cli collate SQL_Latin1_General_CP1_CI_AI AS Id_ContaCRM,&#xA;&#x9;&#x9;B.QtdeMinVagas_cliPerfUso AS Minimo,&#xA;&#x9;&#x9;B.QtdeMaxVagas_cliPerfUso AS Maximo,&#xA;&#x9;&#x9;Subquery.Data AS Mes,&#xA;&#x9;&#x9;ISNULL(D.Qtd_vagas_criadas, 0) AS Qtd_vagas_criadas,&#xA;&#x9;&#x9;CONVERT(VARCHAR, ISNULL(E.Qtd_extracoes_bcc, 0)) AS Qtd_extracoes_bcc,&#xA;&#x9;&#x9;'RE' AS Base_taxa_uso&#xA;into&#x9;#Tmp_DadosOi&#xA;FROM&#x9;(&#xA;SELECT&#x9;CodCli_cliPerfUso AS Cod_cli,&#xA;&#x9;&#x9;Data,&#xA;&#x9;&#x9;MAX(Cod_cliPerfUso) AS Cod_cliPerfUso&#xA;FROM&#x9;[hrh-data].[dbo].[Clientes-PerfilUso] AS A with(nolock)&#x9;&#x9;CROSS JOIN [Sensedata].[Datas_TaxaUsoMensal]&#xA;WHERE&#x9;convert(datetime, convert(nvarchar,Year(DataAtualPerfil_cliPerfUso)) + '/' +  convert(nvarchar,Month(DataAtualPerfil_cliPerfUso)) + '/01', 111) &lt;= Data&#xA;GROUP BY&#xA;&#x9;&#x9;CodCli_cliPerfUso,&#xA;&#x9;&#x9;Data ) AS Subquery&#x9;&#x9;INNER JOIN [hrh-data].[dbo].[Clientes-PerfilUso] AS B with(nolock) ON Subquery.Cod_cliPerfUso = B.Cod_cliPerfUso&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;left outer join [hrh-data].[dbo].[clientes] as c on B.CodCli_cliPerfUso = c.COD_CLI&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN VagasRE_consolidado AS D ON Subquery.Cod_cli = D.Cod_cli&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; AND Subquery.[Data] = D.Mes_criacao_vagaRE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN Extracoes_BCC_consolidado AS E ON Subquery.Cod_cli = E.Cod_cli&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; AND Subquery.[Data]  = E.Mes_extracao_BCC&#xA;WHERE&#x9;Subquery.Cod_cli IN (3266, 69947)&#xA;&#x9;&#x9;AND NOT (B.QtdeMinVagas_cliPerfUso IS NULL&#xA;&#x9;&#x9;&#x9;&#x9; OR B.QtdeMaxVagas_cliPerfUso IS NULL)&#xA;&#x9;&#x9;AND NOT (B.QtdeMinVagas_cliPerfUso = 0&#xA;&#x9;&#x9;&#x9;&#x9; AND B.QtdeMaxVagas_cliPerfUso = 0)&#xA;&#xA;UNION ALL&#xA;SELECT&#x9;C.Ident_cli as Cliente_VAGAS,&#xA;&#x9;&#x9;Subquery.Cod_cli,&#xA;&#x9;&#x9;C.IdContaCRM_cli AS Id_ContaCRM,&#xA;&#x9;&#x9;B.QtdeMinVagasRI_cliPerfUso AS Minimo,&#xA;&#x9;&#x9;B.QtdeMaxVagasRI_cliPerfUso AS Maximo,&#xA;&#x9;&#x9;Subquery.Data AS Mes,&#xA;&#x9;&#x9;ISNULL(D.Qtd_vagas_criadas, 0) AS Qtd_vagas_criadas,&#xA;&#x9;&#x9;'' AS Qtd_extracoes_bcc,&#xA;&#x9;&#x9;'RI' AS Base_taxa_uso&#xA;FROM&#x9;(&#xA;SELECT&#x9;CodCli_cliPerfUso AS Cod_cli,&#xA;&#x9;&#x9;Data,&#xA;&#x9;&#x9;MAX(Cod_cliPerfUso) AS Cod_cliPerfUso&#xA;FROM&#x9;[hrh-data].[dbo].[Clientes-PerfilUso] AS A with(nolock)&#x9;&#x9;CROSS JOIN [Sensedata].[Datas_TaxaUsoMensal]&#xA;WHERE&#x9;convert(datetime, convert(nvarchar,Year(DataAtualPerfil_cliPerfUso)) + '/' +  convert(nvarchar,Month(DataAtualPerfil_cliPerfUso)) + '/01', 111) &lt;= Data&#xA;GROUP BY&#xA;&#x9;&#x9;CodCli_cliPerfUso,&#xA;&#x9;&#x9;Data ) AS Subquery&#x9;&#x9;INNER JOIN [hrh-data].[dbo].[Clientes-PerfilUso] AS B with(nolock) ON Subquery.Cod_cliPerfUso = B.Cod_cliPerfUso&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;left outer join [hrh-data].[dbo].[Clientes] as c on B.CodCli_cliPerfUso = C.COD_CLI&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN VagasRI_consolidado AS D ON Subquery.Cod_cli = D.Cod_cli&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; AND Subquery.[Data] = D.Mes_criacao_vagaRI&#xA;WHERE&#x9;Subquery.Cod_cli in (3266,69947)&#xA;&#x9;&#x9;AND NOT (B.QtdeMinVagasRI_cliPerfUso IS NULL&#xA;&#x9;&#x9;&#x9;&#x9; OR B.QtdeMaxVagasRI_cliPerfUso IS NULL)&#xA;&#x9;&#x9;AND NOT (B.QtdeMinVagasRI_cliPerfUso = 0&#xA;&#x9;&#x9;&#x9;&#x9; AND B.QtdeMaxVagasRI_cliPerfUso = 0)&#xA;ORDER BY&#xA;&#x9;&#x9;Cod_cli ASC,&#xA;&#x9;&#x9;Mes ASC ;&#xA;&#xA;&#xA;-- Limpeza de registro inválido:&#xA;delete from #Tmp_DadosOi&#xA;where&#x9;Cod_cli = 69947&#xA;&#x9;&#x9;and Mes = '20200401' ;&#xA;&#xA;-- Higienização e enriquecimento dos dados na tabela principal:&#xA;delete from Sensedata.Taxa_uso_mensal_sensedata&#xA;where Id_ContaCRM = '476eb982-e60e-11e4-a9bf-0ea319e5a468' ;&#xA;&#xA;insert into Sensedata.Taxa_uso_mensal_sensedata(Cliente_VAGAS,Cod_cli,Id_ContaCRM,Minimo,Maximo,Mes,Qtd_vagas_criadas,Qtd_extracoes_bcc,Base_taxa_uso)&#xA;select&#x9;Cliente_VAGAS,&#xA;&#x9;&#x9;Cod_cli,&#xA;&#x9;&#x9;Id_ContaCRM,&#xA;&#x9;&#x9;Minimo,&#xA;&#x9;&#x9;Maximo,&#xA;&#x9;&#x9;Mes,&#xA;&#x9;&#x9;Qtd_vagas_criadas,&#xA;&#x9;&#x9;Qtd_extracoes_bcc,&#xA;&#x9;&#x9;Base_taxa_uso&#xA;from&#x9;#Tmp_DadosOi&#xA;end" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Exportar CSV"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Tarefa Fluxo de Dados"
      DTS:DTSID="{D4764C18-13B4-4C14-BE5A-83993D1DBAB7}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Exportar CSV"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Exportar CSV\CSV"
              componentClassID="Microsoft.FlatFileDestination"
              contactInfo="Destino de Arquivo Simples;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation;  Todos os Direitos Reservados; http://www.microsoft.com/sql/support;0"
              description="Destino de Arquivo Simples"
              localeId="1046"
              name="CSV">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Especifica se os dados substituirão o arquivo de destino ou serão anexados a ele."
                  name="Overwrite">true</property>
                <property
                  dataType="System.Null"
                  description="Especifica o texto a ser gravado no arquivo de destino antes da gravação de quaisquer dados."
                  expressionType="Notify"
                  name="Header" />
              </properties>
              <connections>
                <connection
                  refId="Package\Exportar CSV\CSV.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[CSV Taxa de uso mensal]"
                  connectionManagerRefId="Package.ConnectionManagers[CSV Taxa de uso mensal]"
                  name="FlatFileConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Exportar CSV\CSV.Inputs[Entrada de Destino de Arquivo Simples]"
                  hasSideEffects="true"
                  name="Entrada de Destino de Arquivo Simples">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Exportar CSV\CSV.Inputs[Entrada de Destino de Arquivo Simples].Columns[Cliente_VAGAS]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedName="Cliente_VAGAS"
                      externalMetadataColumnId="Package\Exportar CSV\CSV.Inputs[Entrada de Destino de Arquivo Simples].ExternalColumns[Cliente_VAGAS]"
                      lineageId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Origem OLE DB].Columns[Cliente_VAGAS]" />
                    <inputColumn
                      refId="Package\Exportar CSV\CSV.Inputs[Entrada de Destino de Arquivo Simples].Columns[Cod_cli]"
                      cachedDataType="i4"
                      cachedName="Cod_cli"
                      externalMetadataColumnId="Package\Exportar CSV\CSV.Inputs[Entrada de Destino de Arquivo Simples].ExternalColumns[Cod_cli]"
                      lineageId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Origem OLE DB].Columns[Cod_cli]" />
                    <inputColumn
                      refId="Package\Exportar CSV\CSV.Inputs[Entrada de Destino de Arquivo Simples].Columns[Id_ContaCRM]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedName="Id_ContaCRM"
                      externalMetadataColumnId="Package\Exportar CSV\CSV.Inputs[Entrada de Destino de Arquivo Simples].ExternalColumns[Id_ContaCRM]"
                      lineageId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Origem OLE DB].Columns[Id_ContaCRM]" />
                    <inputColumn
                      refId="Package\Exportar CSV\CSV.Inputs[Entrada de Destino de Arquivo Simples].Columns[Minimo]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedName="Minimo"
                      externalMetadataColumnId="Package\Exportar CSV\CSV.Inputs[Entrada de Destino de Arquivo Simples].ExternalColumns[Minimo]"
                      lineageId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Origem OLE DB].Columns[Minimo]" />
                    <inputColumn
                      refId="Package\Exportar CSV\CSV.Inputs[Entrada de Destino de Arquivo Simples].Columns[Maximo]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedName="Maximo"
                      externalMetadataColumnId="Package\Exportar CSV\CSV.Inputs[Entrada de Destino de Arquivo Simples].ExternalColumns[Maximo]"
                      lineageId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Origem OLE DB].Columns[Maximo]" />
                    <inputColumn
                      refId="Package\Exportar CSV\CSV.Inputs[Entrada de Destino de Arquivo Simples].Columns[Mes]"
                      cachedDataType="dbDate"
                      cachedName="Mes"
                      externalMetadataColumnId="Package\Exportar CSV\CSV.Inputs[Entrada de Destino de Arquivo Simples].ExternalColumns[Mes]"
                      lineageId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Origem OLE DB].Columns[Mes]" />
                    <inputColumn
                      refId="Package\Exportar CSV\CSV.Inputs[Entrada de Destino de Arquivo Simples].Columns[Qtd_vagas_criadas]"
                      cachedDataType="i4"
                      cachedName="Qtd_vagas_criadas"
                      externalMetadataColumnId="Package\Exportar CSV\CSV.Inputs[Entrada de Destino de Arquivo Simples].ExternalColumns[Qtd_vagas_criadas]"
                      lineageId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Origem OLE DB].Columns[Qtd_vagas_criadas]" />
                    <inputColumn
                      refId="Package\Exportar CSV\CSV.Inputs[Entrada de Destino de Arquivo Simples].Columns[Qtd_extracoes_bcc]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedName="Qtd_extracoes_bcc"
                      externalMetadataColumnId="Package\Exportar CSV\CSV.Inputs[Entrada de Destino de Arquivo Simples].ExternalColumns[Qtd_extracoes_bcc]"
                      lineageId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Origem OLE DB].Columns[Qtd_extracoes_bcc]" />
                    <inputColumn
                      refId="Package\Exportar CSV\CSV.Inputs[Entrada de Destino de Arquivo Simples].Columns[Base_taxa_uso]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedName="Base_taxa_uso"
                      externalMetadataColumnId="Package\Exportar CSV\CSV.Inputs[Entrada de Destino de Arquivo Simples].ExternalColumns[Base_taxa_uso]"
                      lineageId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Origem OLE DB].Columns[Base_taxa_uso]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Exportar CSV\CSV.Inputs[Entrada de Destino de Arquivo Simples].ExternalColumns[Cliente_VAGAS]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      name="Cliente_VAGAS" />
                    <externalMetadataColumn
                      refId="Package\Exportar CSV\CSV.Inputs[Entrada de Destino de Arquivo Simples].ExternalColumns[Cod_cli]"
                      dataType="i4"
                      name="Cod_cli" />
                    <externalMetadataColumn
                      refId="Package\Exportar CSV\CSV.Inputs[Entrada de Destino de Arquivo Simples].ExternalColumns[Id_ContaCRM]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      name="Id_ContaCRM" />
                    <externalMetadataColumn
                      refId="Package\Exportar CSV\CSV.Inputs[Entrada de Destino de Arquivo Simples].ExternalColumns[Minimo]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Minimo" />
                    <externalMetadataColumn
                      refId="Package\Exportar CSV\CSV.Inputs[Entrada de Destino de Arquivo Simples].ExternalColumns[Maximo]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Maximo" />
                    <externalMetadataColumn
                      refId="Package\Exportar CSV\CSV.Inputs[Entrada de Destino de Arquivo Simples].ExternalColumns[Mes]"
                      dataType="dbDate"
                      name="Mes" />
                    <externalMetadataColumn
                      refId="Package\Exportar CSV\CSV.Inputs[Entrada de Destino de Arquivo Simples].ExternalColumns[Qtd_vagas_criadas]"
                      dataType="i4"
                      name="Qtd_vagas_criadas" />
                    <externalMetadataColumn
                      refId="Package\Exportar CSV\CSV.Inputs[Entrada de Destino de Arquivo Simples].ExternalColumns[Qtd_extracoes_bcc]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Qtd_extracoes_bcc" />
                    <externalMetadataColumn
                      refId="Package\Exportar CSV\CSV.Inputs[Entrada de Destino de Arquivo Simples].ExternalColumns[Base_taxa_uso]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      name="Base_taxa_uso" />
                  </externalMetadataColumns>
                </input>
              </inputs>
            </component>
            <component
              refId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="Origem OLE DB;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation;  Todos os Direitos Reservados; http://www.microsoft.com/sql/support;7"
              description="Origem OLE DB"
              name="Sensedata - TAXA_USO_MENSAL_SENSEDATA"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="O tempo em segundos antes que um comando expire. Zero indica uma expiração infinita."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Especifica o nome do objeto de banco de dados usado para abrir um conjunto de linhas."
                  name="OpenRowset">[Sensedata].[TAXA_USO_MENSAL_SENSEDATA]</property>
                <property
                  dataType="System.String"
                  description="Especifica a variável que contém o nome do objeto de banco de dados usado para abrir um conjunto de linhas."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="O comando SQL a ser executado."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">----------------------
-- Taxa de uso mensal:
----------------------
	
-- Base de clientes (taxa de uso):
DROP TABLE IF EXISTS [VAGAS_DW].[TMP_CLIENTES_TAXA_USO_MENSAL] ;

SELECT	DISTINCT CodCliente_vaga AS Cod_cli
INTO	[VAGAS_DW].[TMP_CLIENTES_TAXA_USO_MENSAL]
FROM	[hrh-data].[dbo].[Vagas] AS A1	INNER JOIN [hrh-data].[dbo].[Divisoes] AS A2 ON A1.CodDivVeic_vaga = A2.Cod_div
WHERE	A1.ColetaCur_vaga = 0
		AND A1.VagaComExt_Vaga = 0
		AND A1.TipoProcesso_vaga = 0
		AND A1.VagaModelo_vaga = 0 
		AND LEFT(A1.Cargo_vaga,5) &lt;&gt; 'demo '  
		AND LEFT(A1.Cargo_vaga,5) &lt;&gt; 'demo-' -- 
		--AND A2.CodNavEx_div &lt;&gt; 300 -- Incluir RI
		AND A1.DtCriacao_vaga &gt;= '20190101'
		AND A1.DtCriacao_vaga &lt; DATEADD(MONTH, 6, CONVERT(SMALLDATETIME,CONVERT(VARCHAR,DATEADD(MONTH,-6,GETDATE()) - DAY(DATEADD(MONTH,-6,GETDATE())) + 1,112)))
UNION 
SELECT	DISTINCT A1.CodCliente_pedido AS Cod_cli
FROM   [hrh-data].[dbo].[Pedidos] AS A1	INNER JOIN [hrh-data].[dbo].[Pedidos-itens] AS A2 ON A1.Cod_pedido = A2.CodPed_itemPed
WHERE	A2.EstadoCand_itemPed &gt;= 2 
		AND A1.Dt_pedido &gt;= '20190101'
		AND A1.Dt_pedido &lt; DATEADD(MONTH, 6, CONVERT(SMALLDATETIME,CONVERT(VARCHAR,DATEADD(MONTH,-6,GETDATE()) - DAY(DATEADD(MONTH,-6,GETDATE())) + 1,112))) ;

 WITH VagasRE AS
	  (
	  SELECT A1.CodCliente_vaga AS Cod_cli ,
			 DATEADD(DAY, 1, DATEADD(DAY, DAY(A1.DtCriacao_vaga) *-1, CONVERT(DATE, A1.DtCriacao_vaga))) AS Mes_criacao_vagaRE,
			 CONVERT(DATE, A1.DtCriacao_vaga) AS DataCriacao_vagaRE,
			 COUNT(*) AS Qtd_vagas_criadas		 
	  FROM	 [hrh-data].[dbo].[Vagas] AS A1	INNER JOIN [hrh-data].[dbo].[Divisoes] AS A2 ON A1.CodDivVeic_vaga = A2.Cod_div
	  WHERE  A1.ColetaCur_vaga = 0
		     AND A1.VagaComExt_Vaga = 0
			 AND A1.TipoProcesso_vaga = 0
			 AND A1.VagaModelo_vaga = 0 
			 AND LEFT(A1.Cargo_vaga,5) &lt;&gt; 'demo '  
			 AND LEFT(A1.Cargo_vaga,5) &lt;&gt; 'demo-' -- 
			 AND A2.CodNavEx_div &lt;&gt; 300 -- Excluir RI
			 AND A1.DtCriacao_vaga &gt;= '20190101'
			 AND A1.DtCriacao_vaga &lt; DATEADD(MONTH, 6, CONVERT(SMALLDATETIME,CONVERT(VARCHAR,DATEADD(MONTH,-6,GETDATE()) - DAY(DATEADD(MONTH,-6,GETDATE())) + 1,112)))
	  GROUP BY 
			 A1.CodCliente_vaga ,
			 DATEADD(DAY, 1, DATEADD(DAY, DAY(A1.DtCriacao_vaga) *-1, CONVERT(DATE, A1.DtCriacao_vaga))),
			 CONVERT(DATE, A1.DtCriacao_vaga)
	 ) ,
	 Extracao_BCC AS
	 (
	 SELECT A1.CodCliente_pedido AS Cod_cli ,
			DATEADD(DAY, 1, DATEADD(DAY, DAY(A1.Dt_pedido) *-1, CONVERT(DATE, A1.Dt_pedido))) AS Mes_extracao_bcc,
			CONVERT(DATE, A1.Dt_pedido) AS Data_extracao_bcc,
	        COUNT(*)/20 AS Qtd_extracoes_bcc
	 FROM   [hrh-data].[dbo].[Pedidos] AS A1	INNER JOIN [hrh-data].[dbo].[Pedidos-itens] AS A2 ON A1.Cod_pedido = A2.CodPed_itemPed
	 WHERE	A2.EstadoCand_itemPed &gt;= 2 
			AND A1.Dt_pedido &gt;= '20190101'
			AND A1.Dt_pedido &lt; DATEADD(MONTH, 6, CONVERT(SMALLDATETIME,CONVERT(VARCHAR,DATEADD(MONTH,-6,GETDATE()) - DAY(DATEADD(MONTH,-6,GETDATE())) + 1,112)))
	 GROUP BY
			A1.CodCliente_pedido ,
			DATEADD(DAY, 1, DATEADD(DAY, DAY(A1.Dt_pedido) *-1, CONVERT(DATE, A1.Dt_pedido))),
			CONVERT(DATE, A1.Dt_pedido)
	 ) ,
	 VagasRI AS
	 (
	 SELECT A1.CodCliente_vaga AS Cod_cli ,
			 DATEADD(DAY, 1, DATEADD(DAY, DAY(A1.DtCriacao_vaga) *-1, CONVERT(DATE, A1.DtCriacao_vaga))) AS Mes_criacao_vagaRI,
			 CONVERT(DATE, A1.DtCriacao_vaga) AS DataCriacao_vagaRI,
			 COUNT(*) AS Qtd_vagas_criadas		 
	  FROM	 [hrh-data].[dbo].[Vagas] AS A1	INNER JOIN [hrh-data].[dbo].[Divisoes] AS A2 ON A1.CodDivVeic_vaga = A2.Cod_div
	  WHERE  A1.ColetaCur_vaga = 0
		     AND A1.VagaComExt_Vaga = 0
			 AND A1.TipoProcesso_vaga = 0
			 AND A1.VagaModelo_vaga = 0 
			 AND LEFT(A1.Cargo_vaga,5) &lt;&gt; 'demo '  
			 AND LEFT(A1.Cargo_vaga,5) &lt;&gt; 'demo-' -- 
			 AND A2.CodNavEx_div = 300 -- Excluir RI
			 AND A1.DtCriacao_vaga &gt;= '20190101'
			 AND A1.DtCriacao_vaga &lt; DATEADD(MONTH, 6, CONVERT(SMALLDATETIME,CONVERT(VARCHAR,DATEADD(MONTH,-6,GETDATE()) - DAY(DATEADD(MONTH,-6,GETDATE())) + 1,112)))
	  GROUP BY 
			 A1.CodCliente_vaga ,
			 DATEADD(DAY, 1, DATEADD(DAY, DAY(A1.DtCriacao_vaga) *-1, CONVERT(DATE, A1.DtCriacao_vaga))),
			 CONVERT(DATE, A1.DtCriacao_vaga)

	 ),
	 Datas AS
	 (
	 SELECT	CONVERT(DATE, A1.DATAALTKEY) AS Mes
	 FROM	[VAGAS_DW].[VAGAS_DW].[DATAS] AS A1
	 WHERE	A1.DATAALTKEY &gt;= '20190101'
			AND A1.DATAALTKEY &lt; DATEADD(MONTH, 6, CONVERT(SMALLDATETIME,CONVERT(VARCHAR,DATEADD(MONTH,-6,GETDATE()) - DAY(DATEADD(MONTH,-6,GETDATE())) + 1,112)))
			AND DAY(A1.DATAALTKEY) = 1
	),
	DatasCliente AS
	(
	SELECT	Mes,
			B.Cod_cli
	FROM	Datas AS A CROSS JOIN VAGAS_DW.TMP_CLIENTES_TAXA_USO_MENSAL AS B
	),
	Resumo_VagasRE AS
	(
	SELECT	A.Mes,
			B.Cod_cli,
			SUM(B.Qtd_vagas_criadas) AS Qtd_vagas_criadas
	FROM	Datas AS A		INNER JOIN VagasRE AS B ON A.Mes = B.Mes_criacao_vagaRE
	GROUP BY
			A.Mes,
			B.Cod_cli
	),
	Resumo_Extracoes_BCC AS
	(
	SELECT	A.Mes,
			B.Cod_cli,
			SUM(B.Qtd_extracoes_bcc) AS Qtd_extracoes_bcc
	FROM	Datas AS A		INNER JOIN Extracao_BCC AS B ON A.Mes = B.Mes_extracao_bcc
	GROUP BY
			A.Mes,
			B.Cod_cli
	),
	Resumo_VagasRI AS
	(
	SELECT	A.Mes,
			B.Cod_cli,
			SUM(B.Qtd_vagas_criadas) AS Qtd_vagas_criadas
	FROM	Datas AS A		INNER JOIN VagasRI AS B ON A.Mes = B.Mes_criacao_vagaRI
	GROUP BY
			A.Mes,
			B.Cod_cli
	)

INSERT INTO [VAGAS_DW].[TAXA_USO_MENSAL_SENSEDATA] (Cliente_VAGAS, Cod_cli, Id_ContaCRM, Minimo, Maximo, Mes, Qtd_vagas_criadas, Qtd_extracoes_bcc, Base_taxa_uso)
SELECT	D.Cliente_VAGAS,
		A.Cod_cli,
		D.CONTA_ID AS Id_ContaCRM,
		D.QTD_MIN_VAGAS AS Minimo,
		D.QTD_MAX_VAGAS AS Maximo,
		A.Mes,
		ISNULL(B.Qtd_vagas_criadas, 0) AS Qtd_vagas_criadas,
		ISNULL(C.Qtd_extracoes_bcc, 0) AS Qtd_extracoes_bcc,
		'RE' AS Base_taxa_uso
FROM	DatasCliente AS A		LEFT OUTER JOIN Resumo_VagasRE AS B ON A.Mes = B.Mes AND A.Cod_cli = B.Cod_cli
								LEFT OUTER JOIN Resumo_Extracoes_bcc AS C ON A.Mes = C.Mes AND A.Cod_cli = C.Cod_cli
								LEFT OUTER JOIN [VAGAS_DW].[VAGAS_DW].[CLIENTES] AS D ON A.Cod_cli = D.Cod_cli
WHERE	NOT (B.Cod_cli IS NULL
			 AND C.Cod_cli IS NULL)
		AND EXISTS (SELECT *
					FROM	[VAGAS_DW].[TMP_CLIENTES_SENSEDATA] AS A1
					WHERE	A.Cod_cli = A1.Cod_cli)
UNION ALL
SELECT	D.Cliente_VAGAS,
		A.Cod_cli,
		D.CONTA_ID AS Id_ContaCRM,
		D.QTD_MIN_RI_VAGAS AS Minimo,
		D.QTD_MAX_RI_VAGAS AS Maximo,
		A.Mes,
		ISNULL(B.Qtd_vagas_criadas, 0) AS Qtd_vagas_criadas,
		0 AS Qtd_extracoes_bcc,
		'RI' AS Base_taxa_uso
FROM	DatasCliente AS A		LEFT OUTER JOIN Resumo_VagasRI AS B ON A.Mes = B.Mes AND A.Cod_cli = B.Cod_cli
								LEFT OUTER JOIN [VAGAS_DW].[VAGAS_DW].[CLIENTES] AS D ON A.Cod_cli = D.Cod_cli
WHERE	B.Cod_cli IS NOT NULL
		AND EXISTS (SELECT *
					FROM	[VAGAS_DW].[TMP_CLIENTES_SENSEDATA] AS A1
					WHERE	A.Cod_cli = A1.Cod_cli) ;</property>
                <property
                  dataType="System.String"
                  description="A variável que contém o comando SQL a ser executado."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Especifica a página de código de coluna a ser usada quando não há informações de página de código disponíveis a partir da fonte de dados."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forca o uso do valor da propriedade DefaultCodePage durante a descrição dos dados de caractere."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Especifica o modo usado para acessar o banco de dados."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="Os mapeamentos entre os parâmetros no comando SQL e as variáveis."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Connections[OleDbConnection]"
                  connectionManagerID="{C9C5C2E3-4F23-4A32-8949-107BB2A1C923}:external"
                  connectionManagerRefId="Project.ConnectionManagers[STAGE]"
                  description="A conexão de tempo de execução OLE DB usada para acessar o banco de dados."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Origem OLE DB]"
                  name="Saída de Origem OLE DB">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Origem OLE DB].Columns[Cliente_VAGAS]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversão"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Origem OLE DB].ExternalColumns[Cliente_VAGAS]"
                      length="100"
                      lineageId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Origem OLE DB].Columns[Cliente_VAGAS]"
                      name="Cliente_VAGAS"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Origem OLE DB].Columns[Cod_cli]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversão"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Origem OLE DB].ExternalColumns[Cod_cli]"
                      lineageId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Origem OLE DB].Columns[Cod_cli]"
                      name="Cod_cli"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Origem OLE DB].Columns[Id_ContaCRM]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversão"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Origem OLE DB].ExternalColumns[Id_ContaCRM]"
                      length="100"
                      lineageId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Origem OLE DB].Columns[Id_ContaCRM]"
                      name="Id_ContaCRM"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Origem OLE DB].Columns[Minimo]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversão"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Origem OLE DB].ExternalColumns[Minimo]"
                      length="100"
                      lineageId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Origem OLE DB].Columns[Minimo]"
                      name="Minimo"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Origem OLE DB].Columns[Maximo]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversão"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Origem OLE DB].ExternalColumns[Maximo]"
                      length="100"
                      lineageId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Origem OLE DB].Columns[Maximo]"
                      name="Maximo"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Origem OLE DB].Columns[Mes]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversão"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Origem OLE DB].ExternalColumns[Mes]"
                      lineageId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Origem OLE DB].Columns[Mes]"
                      name="Mes"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Origem OLE DB].Columns[Qtd_vagas_criadas]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversão"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Origem OLE DB].ExternalColumns[Qtd_vagas_criadas]"
                      lineageId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Origem OLE DB].Columns[Qtd_vagas_criadas]"
                      name="Qtd_vagas_criadas"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Origem OLE DB].Columns[Qtd_extracoes_bcc]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversão"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Origem OLE DB].ExternalColumns[Qtd_extracoes_bcc]"
                      length="100"
                      lineageId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Origem OLE DB].Columns[Qtd_extracoes_bcc]"
                      name="Qtd_extracoes_bcc"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Origem OLE DB].Columns[Base_taxa_uso]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversão"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Origem OLE DB].ExternalColumns[Base_taxa_uso]"
                      length="100"
                      lineageId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Origem OLE DB].Columns[Base_taxa_uso]"
                      name="Base_taxa_uso"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Origem OLE DB].ExternalColumns[Cliente_VAGAS]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      name="Cliente_VAGAS" />
                    <externalMetadataColumn
                      refId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Origem OLE DB].ExternalColumns[Cod_cli]"
                      dataType="i4"
                      name="Cod_cli" />
                    <externalMetadataColumn
                      refId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Origem OLE DB].ExternalColumns[Id_ContaCRM]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      name="Id_ContaCRM" />
                    <externalMetadataColumn
                      refId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Origem OLE DB].ExternalColumns[Minimo]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      name="Minimo" />
                    <externalMetadataColumn
                      refId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Origem OLE DB].ExternalColumns[Maximo]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      name="Maximo" />
                    <externalMetadataColumn
                      refId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Origem OLE DB].ExternalColumns[Mes]"
                      dataType="dbDate"
                      name="Mes" />
                    <externalMetadataColumn
                      refId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Origem OLE DB].ExternalColumns[Qtd_vagas_criadas]"
                      dataType="i4"
                      name="Qtd_vagas_criadas" />
                    <externalMetadataColumn
                      refId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Origem OLE DB].ExternalColumns[Qtd_extracoes_bcc]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      name="Qtd_extracoes_bcc" />
                    <externalMetadataColumn
                      refId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Origem OLE DB].ExternalColumns[Base_taxa_uso]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      name="Base_taxa_uso" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Erro de Origem OLE DB]"
                  isErrorOut="true"
                  name="Saída de Erro de Origem OLE DB">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Erro de Origem OLE DB].Columns[Cliente_VAGAS]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      lineageId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Erro de Origem OLE DB].Columns[Cliente_VAGAS]"
                      name="Cliente_VAGAS" />
                    <outputColumn
                      refId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Erro de Origem OLE DB].Columns[Cod_cli]"
                      dataType="i4"
                      lineageId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Erro de Origem OLE DB].Columns[Cod_cli]"
                      name="Cod_cli" />
                    <outputColumn
                      refId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Erro de Origem OLE DB].Columns[Id_ContaCRM]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      lineageId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Erro de Origem OLE DB].Columns[Id_ContaCRM]"
                      name="Id_ContaCRM" />
                    <outputColumn
                      refId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Erro de Origem OLE DB].Columns[Minimo]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      lineageId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Erro de Origem OLE DB].Columns[Minimo]"
                      name="Minimo" />
                    <outputColumn
                      refId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Erro de Origem OLE DB].Columns[Maximo]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      lineageId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Erro de Origem OLE DB].Columns[Maximo]"
                      name="Maximo" />
                    <outputColumn
                      refId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Erro de Origem OLE DB].Columns[Mes]"
                      dataType="dbDate"
                      lineageId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Erro de Origem OLE DB].Columns[Mes]"
                      name="Mes" />
                    <outputColumn
                      refId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Erro de Origem OLE DB].Columns[Qtd_vagas_criadas]"
                      dataType="i4"
                      lineageId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Erro de Origem OLE DB].Columns[Qtd_vagas_criadas]"
                      name="Qtd_vagas_criadas" />
                    <outputColumn
                      refId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Erro de Origem OLE DB].Columns[Qtd_extracoes_bcc]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      lineageId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Erro de Origem OLE DB].Columns[Qtd_extracoes_bcc]"
                      name="Qtd_extracoes_bcc" />
                    <outputColumn
                      refId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Erro de Origem OLE DB].Columns[Base_taxa_uso]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      lineageId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Erro de Origem OLE DB].Columns[Base_taxa_uso]"
                      name="Base_taxa_uso" />
                    <outputColumn
                      refId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Erro de Origem OLE DB].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Erro de Origem OLE DB].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Erro de Origem OLE DB].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Erro de Origem OLE DB].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Exportar CSV.Paths[Saída de Origem OLE DB]"
              endId="Package\Exportar CSV\CSV.Inputs[Entrada de Destino de Arquivo Simples]"
              name="Saída de Origem OLE DB"
              startId="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA.Outputs[Saída de Origem OLE DB]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Limpar tabela (Taxa de uso mensal)"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Tarefa Executar SQL"
      DTS:DTSID="{58EC815E-3430-43CB-893D-76B20B74BD8D}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Limpar tabela (Taxa de uso mensal)"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{C9C5C2E3-4F23-4A32-8949-107BB2A1C923}"
          SQLTask:SqlStatementSource="TRUNCATE TABLE [Sensedata].[TAXA_USO_MENSAL_SENSEDATA] ;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Upload S3 Bucket"
      DTS:CreationName="Microsoft.ExecutePackageTask"
      DTS:Description="Tarefa Executar Pacote"
      DTS:DTSID="{9cf4c5fd-6ef2-4b49-8af8-5a2f9be719ca}"
      DTS:ExecutableType="Microsoft.ExecutePackageTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Upload S3 Bucket"
      DTS:TaskContact="Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <ExecutePackageTask>
          <UseProjectReference>True</UseProjectReference>
          <PackageName>CargaPython.dtsx</PackageName>
          <ParameterAssignment>
            <ParameterName>CSV_NAME</ParameterName>
            <BindedVariableOrParameterName>$Package::CSV_NAME</BindedVariableOrParameterName>
          </ParameterAssignment>
        </ExecutePackageTask>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restrição]"
      DTS:CreationName=""
      DTS:DTSID="{A9988FC6-463E-49CE-B389-6CE5C5DA315B}"
      DTS:From="Package\Limpar tabela (Taxa de uso mensal)"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restrição"
      DTS:To="Package\Criar tabelas temporárias - VAGAS_DW" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restrição 1]"
      DTS:CreationName=""
      DTS:DTSID="{29AD6B0E-CBFD-4756-A959-1A06BE3F33EA}"
      DTS:From="Package\Criar tabelas temporárias - VAGAS_DW"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restrição 1"
      DTS:To="Package\Exceções" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restrição 2]"
      DTS:CreationName=""
      DTS:DTSID="{8BE89BD9-904A-40B2-A537-4ACB18D4E010}"
      DTS:From="Package\Exportar CSV"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restrição 2"
      DTS:To="Package\Upload S3 Bucket" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restrição 3]"
      DTS:CreationName=""
      DTS:DTSID="{798717FB-BFA5-4253-990D-3F7F8ACABB98}"
      DTS:From="Package\Exceções"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restrição 3"
      DTS:To="Package\Exportar CSV" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--Esta seção CDATA contém as informações de layout do pacote. A seção inclui informações como coordenadas (x,y), largura e altura.-->
<!--Se você editar manualmente esta seção e cometer algum erro, poderá excluí-la. -->
<!--O pacote ainda poderá ser carregado normalmente, mas as informações de layout anteriores serão perdidas e o designer reorganizará automaticamente os elementos na superfície de design.-->
<Objects
  Version="8">
  <!--Cada nó abaixo conterá propriedades que não afetam o comportamento em tempo de execução.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="263,42"
          Id="Package\Criar tabelas temporárias - VAGAS_DW"
          TopLeft="372,107" />
        <NodeLayout
          Size="122,42"
          Id="Package\Exceções"
          TopLeft="251,208" />
        <NodeLayout
          Size="141,42"
          Id="Package\Exportar CSV"
          TopLeft="431,279" />
        <NodeLayout
          Size="249,42"
          Id="Package\Limpar tabela (Taxa de uso mensal)"
          TopLeft="381,20" />
        <NodeLayout
          Size="162,42"
          Id="Package\Upload S3 Bucket"
          TopLeft="417,369" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restrição]"
          TopLeft="504.5,62">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,45"
              Start="0,0"
              End="0,37.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,37.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restrição 1]"
          TopLeft="503.5,149">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-191.5,59"
              Start="0,0"
              End="-191.5,51.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,25.5"
                    Point2="0,29.5"
                    Point3="-4,29.5" />
                  <mssgle:LineSegment
                    End="-187.5,29.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-187.5,29.5"
                    Point2="-191.5,29.5"
                    Point3="-191.5,33.5" />
                  <mssgle:LineSegment
                    End="-191.5,51.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restrição 2]"
          TopLeft="499.75,321">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,48"
              Start="0,0"
              End="0,40.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restrição 3]"
          TopLeft="312,250">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="189.5,29"
              Start="0,0"
              End="189.5,21.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,10.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,10.5"
                    Point2="0,14.5"
                    Point3="4,14.5" />
                  <mssgle:LineSegment
                    End="185.5,14.5" />
                  <mssgle:CubicBezierSegment
                    Point1="185.5,14.5"
                    Point2="189.5,14.5"
                    Point3="189.5,18.5" />
                  <mssgle:LineSegment
                    End="189.5,21.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Exportar CSV">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="297,42"
          Id="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA"
          TopLeft="424,134" />
        <NodeLayout
          Size="98,42"
          Id="Package\Exportar CSV\CSV"
          TopLeft="520,261" />
        <EdgeLayout
          Id="Package\Exportar CSV.Paths[Saída de Origem OLE DB]"
          TopLeft="570.75,176">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,85"
              Start="0,0"
              End="0,77.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,77.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Exportar CSV\Sensedata - TAXA_USO_MENSAL_SENSEDATA">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>