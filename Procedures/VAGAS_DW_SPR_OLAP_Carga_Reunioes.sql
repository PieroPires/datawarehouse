USE VAGAS_DW
GO

IF EXISTS ( SELECT * FROM SYS.OBJECTS WHERE NAME = 'SPR_OLAP_Carga_REUNIOES' AND SCHEMA_NAME(SCHEMA_ID) = 'VAGAS_DW')
DROP PROCEDURE VAGAS_DW.SPR_OLAP_Carga_REUNIOES
GO

-- =============================================
-- Author: Luiz Fernando Braz
-- Create date: 29/09/2015
-- Description: Procedure para carga das tabelas temporárias (BD Stage) para alimentação do DW
-- =============================================

CREATE PROCEDURE VAGAS_DW.SPR_OLAP_Carga_REUNIOES 
AS
SET NOCOUNT ON

--DECLARE @DATA_CARGA SMALLDATETIME

--SELECT @DATA_CARGA = MIN(CONVERT(SMALLDATETIME,CONVERT(VARCHAR,DATA_CRIACAO,112)))
--FROM VAGAS_DW.TMP_REUNIOES 

--DELETE FROM VAGAS_DW.REUNIOES
--WHERE DATA_CRIACAO >= @DATA_CARGA

TRUNCATE TABLE VAGAS_DW.REUNIOES

-- ATUALIZAR GRUPO VENDEDOR
UPDATE VAGAS_DW.TMP_REUNIOES SET GRUPO_VENDEDOR = ISNULL(B.GRUPO_VENDEDOR,'Outros')
FROM VAGAS_DW.TMP_REUNIOES A
LEFT OUTER JOIN VAGAS_DW.GRUPO_VENDEDORES B ON B.VENDEDOR = A.USUARIO_PARTICIPANTE

INSERT INTO VAGAS_DW.REUNIOES (ID_REUNIAO,USUARIO_PARTICIPANTE,USUARIO_CRIACAO,USUARIO_RESPONSAVEL,GRUPO_VENDEDOR,CONTAID,CONTA,ASSUNTO,DATA_INICIO,DATA_CRIACAO,
								STATUS,TIPO,DURACAO_HORAS,DURACAO_MINUTOS,OPORTUNIDADE,FLAG_RESPONSAVEL_REUNIAO)
SELECT ID_REUNIAO,
	   USUARIO_PARTICIPANTE,
	   USUARIO_CRIACAO,
	   USUARIO_RESPONSAVEL,
	   GRUPO_VENDEDOR,
	   CONTAID,
	   CONTA,
	   ASSUNTO,
	   DATA_INICIO,
	   DATA_CRIACAO,
	   CASE WHEN STATUS = 'Held' THEN 'Realizado'
			WHEN STATUS = 'Planned' THEN 'Planejado'
			WHEN STATUS = 'Not Held' THEN 'Não Realizado'
			ELSE 'Não Classificado' END,
	   TIPO,
	   DURACAO_HORAS,
	   DURACAO_MINUTOS,
	   OPORTUNIDADE,
	   FLAG_RESPONSAVEL_REUNIAO
FROM VAGAS_DW.TMP_REUNIOES

