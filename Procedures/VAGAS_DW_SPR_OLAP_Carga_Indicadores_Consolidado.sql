-- select * from vagas_dw.TMP_VAGAS
-- EXEC VAGAS_DW.SPR_OLAP_Carga_Indicadores_Consolidado '20150101'
USE VAGAS_DW
GO

IF EXISTS ( SELECT * FROM SYS.OBJECTS WHERE NAME = 'SPR_OLAP_Carga_Indicadores_Consolidado' AND SCHEMA_NAME(SCHEMA_ID) = 'VAGAS_DW')
DROP PROCEDURE VAGAS_DW.SPR_OLAP_Carga_Indicadores_Consolidado
GO

-- =============================================
-- Author: Luiz Fernando Braz
-- Create date: 12/05/2017
-- Description: Procedure para carga das tabelas temporárias (BD Stage) para alimentação do DW
-- =============================================
CREATE PROCEDURE VAGAS_DW.SPR_OLAP_Carga_Indicadores_Consolidado @DATA SMALLDATETIME = NULL

AS
SET NOCOUNT ON

IF @DATA IS NULL
	-- carregar 5 dias anterior a ultima data já carregada (para evitar possíveis inconsistencias)
	SELECT @DATA = MAX(DATA) - 5 FROM VAGAS_DW.INDICADORES_CONSOLIDADO 

SELECT @DATA

-- carregar todos os curriculos e cadastros do BCC
SELECT COD_CAND,
	   DATA_CADASTRO,
	   CPF
INTO #TMP_CADASTRO_UNICO   
FROM VAGAS_DW.CANDIDATOS A
WHERE FEZ_ACESSO_IRRESTRITO = 1

-- Limpar cadastros sem CPF
DELETE #TMP_CADASTRO_UNICO WHERE CPF IS NULL

CREATE CLUSTERED INDEX IDX_CPF ON #TMP_CADASTRO_UNICO (CPF) 

SELECT COD_CAND,
	   DATA_CADASTRO,
	   CPF,
		CASE WHEN EXISTS ( SELECT * 
							FROM #TMP_CADASTRO_UNICO 
							WHERE CPF = A.CPF
							AND COD_CAND <> A.COD_CAND
							AND DATA_CADASTRO < A.DATA_CADASTRO ) THEN 'SIM' ELSE 'NÃO' END AS DUPLICADO
INTO #TMP_DETALHE_DUPLICADO
FROM #TMP_CADASTRO_UNICO A
WHERE A.DATA_CADASTRO >= @DATA

-- LIMPAR DATAS EXISTENTES
DELETE VAGAS_DW.INDICADORES_CONSOLIDADO 
FROM VAGAS_DW.INDICADORES_CONSOLIDADO A
WHERE EXISTS ( SELECT * FROM #TMP_DETALHE_DUPLICADO WHERE DATA_CADASTRO = A.DATA )

-- INSERIR NA TABELA FATO
INSERT INTO VAGAS_DW.INDICADORES_CONSOLIDADO (DATA,QTD_CADASTROS_COM_DUPLICIDADE,QTD_CADASTROS_SEM_DUPLICIDADE)
SELECT DATA_CADASTRO,
	   ( SELECT COUNT(*) FROM #TMP_DETALHE_DUPLICADO WHERE DATA_CADASTRO = A.DATA_CADASTRO AND DUPLICADO = 'SIM' ) AS QTD_CADASTROS_COM_DUPLICIDADE,
	   ( SELECT COUNT(*) FROM #TMP_DETALHE_DUPLICADO WHERE DATA_CADASTRO = A.DATA_CADASTRO AND DUPLICADO = 'NÃO' ) AS QTD_CADASTROS_SEM_DUPLICIDADE
FROM #TMP_DETALHE_DUPLICADO A
GROUP BY DATA_CADASTRO

DROP TABLE #TMP_CADASTRO_UNICO
DROP TABLE #TMP_DETALHE_DUPLICADO

