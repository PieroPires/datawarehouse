USE [VAGAS_DW] ;

IF EXISTS (SELECT * FROM SYS.OBJECTS WHERE NAME = 'SPR_OLAP_Carga_Base_Empresas_VAGAS_FLIX' AND SCHEMA_NAME(SCHEMA_ID) = 'VAGAS_DW')
DROP PROCEDURE [VAGAS_DW].[SPR_OLAP_Carga_Base_Empresas_VAGAS_FLIX]
GO

-- =============================================
-- Author: Fiama
-- Create date: 27/12/2017
-- Description: Procedure para carga das tabelas temporárias (BD Stage) para alimentação do DW
-- =============================================

CREATE PROCEDURE [VAGAS_DW].[SPR_OLAP_Carga_Base_Empresas_VAGAS_FLIX]


AS
SET NOCOUNT ON

	-- LIMPEZA DA TABELA
	TRUNCATE TABLE [VAGAS_DW].[TMP_BASE_EMPRESAS_VAGAS_FLIX] ;

	DECLARE	@CMD VARCHAR(8000) ,
			@MSG VARCHAR(8000)


	CREATE TABLE #TMP_LOG_ERRO (ID_LOG_ERRO SMALLINT IDENTITY PRIMARY KEY ,
								ERRO VARCHAR(8000)) 

	
	CREATE TABLE #TMP_AUXILIAR_EMPRESAS_VAGAS_FLIX (
		[DATA_REFERENCIA] VARCHAR(255) ,
		[RAZAO_SOCIAL] VARCHAR(255) ,
		[CNPJ] VARCHAR(255) ,
		[NOME_FANTASIA] VARCHAR(255) ,
		[ENDERECO] VARCHAR(255) ,
		[BAIRRO] VARCHAR(255) ,
		[CIDADE] VARCHAR(255)) ;

	DECLARE	@ID_CONTROLE_SPREADSHEET SMALLINT ,
			@SHEET_NAME VARCHAR(100) , 
			@NOME_CONTROLE VARCHAR(100) ;



	SET	@ID_CONTROLE_SPREADSHEET = (SELECT	MIN(ID_CONTROLE_SPREADSHEET)
										FROM	[VAGAS_DW].[CONTROLE_SPREADSHEET]
										WHERE	NOME_CONTROLE = 'VAGAS FLIX'
												AND SHEET_NAME = 'BASES FLIX') ;

		SET	@SHEET_NAME = (SELECT TOP 1 SHEET_NAME
						   FROM	[VAGAS_DW].[CONTROLE_SPREADSHEET]
						   WHERE NOME_CONTROLE = 'VAGAS FLIX'
								AND SHEET_NAME = 'BASES FLIX') 
					   
		SET @NOME_CONTROLE = (SELECT TOP 1 NOME_CONTROLE
							  FROM	[VAGAS_DW].[CONTROLE_SPREADSHEET]
							  WHERE	NOME_CONTROLE = 'VAGAS FLIX')

WHILE @ID_CONTROLE_SPREADSHEET IN (SELECT ID_CONTROLE_SPREADSHEET FROM [VAGAS_DW].[CONTROLE_SPREADSHEET] WHERE NOME_CONTROLE = 'VAGAS FLIX' AND SHEET_NAME = 'BASES FLIX')
BEGIN
		
		-- Carregar tabela baseado na Planilha do Google Drive
		SET @CMD = 'Z:\Scripts\Python3\python Z:\Scripts\Scripts_Python\Exportacao_Arquivos_Google_Drive\LerPlanilhaGoogleDrive.py ' + 
				' "' + CONVERT(VARCHAR(3), @ID_CONTROLE_SPREADSHEET) + '" "TMP_BASE_EMPRESAS_VAGAS_FLIX" "1"'


		INSERT INTO #TMP_LOG_ERRO (ERRO)
		EXEC MASTER.DBO.XP_CMDSHELL @CMD
		print @CMD

		INSERT INTO #TMP_AUXILIAR_EMPRESAS_VAGAS_FLIX
		SELECT	[0],[1],[2],[3],[4],[5],[6]
		FROM	[VAGAS_DW].[TMP_BASE_EMPRESAS_VAGAS_FLIX]
		WHERE	[index] > 0 ;


		-- Tratar erros ocorridos na rotina do Python	
		IF EXISTS ( SELECT * FROM #TMP_LOG_ERRO WHERE CHARINDEX('ERROR_MESSAGE',ERRO) > 0 ) 
		BEGIN 
			SET @MSG = 'ERRO ocorrido na importação dos dados no ID_CONTROLE_SPREADSHEET :' + ' ' + CONVERT(VARCHAR(3), @ID_CONTROLE_SPREADSHEET) 
			RAISERROR(@MSG , 16, 1) 
		END

	--	TRUNCATE TABLE #TMP_LOG_ERRO

		SET @ID_CONTROLE_SPREADSHEET +=	(SELECT TOP 1 (ID_CONTROLE_SPREADSHEET - @ID_CONTROLE_SPREADSHEET)
										 FROM	[VAGAS_DW].[CONTROLE_SPREADSHEET]
										 WHERE	NOME_CONTROLE = 'VAGAS FLIX'
												AND SHEET_NAME = 'BASES FLIX'
												AND ID_CONTROLE_SPREADSHEET > @ID_CONTROLE_SPREADSHEET)

		SET @SHEET_NAME = (SELECT TOP 1 SHEET_NAME
						   FROM	  [VAGAS_DW].[CONTROLE_SPREADSHEET]
						   WHERE  NOME_CONTROLE = 'VAGAS FLIX'
								  AND ID_CONTROLE_SPREADSHEET = @ID_CONTROLE_SPREADSHEET)
	END


	-- REMOÇÃO DE LINHAS EM BRANCO:
	DELETE	FROM #TMP_AUXILIAR_EMPRESAS_VAGAS_FLIX
	FROM	#TMP_AUXILIAR_EMPRESAS_VAGAS_FLIX
	WHERE	((ISNULL(DATA_REFERENCIA, '') = '' 
			   AND ISNULL(RAZAO_SOCIAL, '') = '' 
			   AND ISNULL(CNPJ, '') = '' 
			   AND ISNULL(NOME_FANTASIA, '') = '' 
			   AND ISNULL(ENDERECO, '') = '' 
			   AND ISNULL(BAIRRO, '') = '' 
			   AND ISNULL(CIDADE, '') = '' )
			 OR (ISNULL(CNPJ, '') = '')) ;


-----------------------------
-- CONSOLIDADO EMPRESAS FLIX:
-----------------------------
	SELECT	CASE WHEN LEN(LTRIM(RTRIM(REPLACE(REVERSE(SUBSTRING(REVERSE(A.DATA_REFERENCIA), 1, CHARINDEX('/', REVERSE(A.DATA_REFERENCIA)))), '/', '')))) = 4 AND CONVERT(SMALLINT, LTRIM(RTRIM(REPLACE(REVERSE(SUBSTRING(REVERSE(A.DATA_REFERENCIA), 1, CHARINDEX('/', REVERSE(A.DATA_REFERENCIA)))), '/', '')))) BETWEEN 2000 AND 2100 AND LEN(LTRIM(RTRIM(SUBSTRING(A.DATA_REFERENCIA, 4, 2))))= 2 AND CONVERT(SMALLINT, LTRIM(RTRIM(SUBSTRING(A.DATA_REFERENCIA, 4, 2)))) BETWEEN 1 AND 12 AND LEN(LTRIM(RTRIM(SUBSTRING(A.DATA_REFERENCIA, 1, 2)))) = 2 AND CONVERT(SMALLINT, LTRIM(RTRIM(SUBSTRING(A.DATA_REFERENCIA, 1, 2)))) BETWEEN 1 AND 31 THEN DATEFROMPARTS(CONVERT(SMALLINT, LTRIM(RTRIM(REPLACE(REVERSE(SUBSTRING(REVERSE(A.DATA_REFERENCIA), 1, CHARINDEX('/', REVERSE(A.DATA_REFERENCIA)))), '/', '')))), CONVERT(SMALLINT, LTRIM(RTRIM(SUBSTRING(A.DATA_REFERENCIA, 4, 2)))), CONVERT(SMALLINT, LTRIM(RTRIM(SUBSTRING(A.DATA_REFERENCIA, 1, 2))))) END AS DATA_REFERENCIA ,
			RAZAO_SOCIAL ,
			REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(LTRIM(RTRIM(CNPJ)), CHAR(9), ''), CHAR(10), ''), CHAR(13), ''), '/', ''), '-', ''), '.', '') AS CNPJ ,
			NOME_FANTASIA ,
			ENDERECO ,
			BAIRRO ,
			CIDADE ,
			ROW_NUMBER() OVER(PARTITION BY REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(LTRIM(RTRIM(A.CNPJ)), CHAR(9), ''), CHAR(10), ''), CHAR(13), ''), '/', ''), '-', ''), '.', ''), A.DATA_REFERENCIA ORDER BY A.DATA_REFERENCIA ASC) AS CONTROLE
	INTO	#TMP_BASE_VAGAS_FLIX
	FROM	#TMP_AUXILIAR_EMPRESAS_VAGAS_FLIX AS A ;


	-- Popular tabela [VAGAS_DW].[BASE_EMPRESAS_VAGAS_FLIX]:
	INSERT INTO [VAGAS_DW].[BASE_EMPRESAS_VAGAS_FLIX](DATA_REFERENCIA, CNPJ, RAZAO_SOCIAL, NOME_FANTASIA, ENDERECO, BAIRRO, CIDADE, FONTE_CNPJ)
	SELECT	EOMONTH(A.DATA_REFERENCIA) AS DATA_REFERENCIA, A.CNPJ, A.RAZAO_SOCIAL, A.NOME_FANTASIA, A.ENDERECO, A.BAIRRO, A.CIDADE, 'SPREADSHEET GOOGLE DRIVE'
	FROM	#TMP_BASE_VAGAS_FLIX AS A 
	WHERE	A.CONTROLE = 1 ;


-- LIMPEZA DAS TABELAS TEMPORÁRIAS LOCAIS:
DROP TABLE #TMP_LOG_ERRO ;
DROP TABLE #TMP_AUXILIAR_EMPRESAS_VAGAS_FLIX ;
DROP TABLE #TMP_BASE_VAGAS_FLIX ;


-- FLAG_VAGAS_EPARTNER:
UPDATE	[VAGAS_DW].[BASE_EMPRESAS_VAGAS_FLIX]
SET		FLAG_VAGAS_EPARTNER = 1
FROM	[VAGAS_DW].[BASE_EMPRESAS_VAGAS_FLIX] AS A
WHERE	A.FONTE_CNPJ = 'SPREADSHEET GOOGLE DRIVE'
		AND EXISTS (SELECT	1
					FROM	[hrh-data].[dbo].[FranqueadorxFranqueado] AS A1		INNER JOIN [hrh-data].[dbo].[Clientes] AS A2 ON A1.codclifranqueado_fcf = A2.Cod_cli
																				INNER JOIN [hrh-data].[dbo].[Divisoes] AS A3 ON A1.coddivfranqueador_fcf = A3.cod_div
														
					WHERE	A1.codclifranqueador_fcf = 65561
							AND	A.CNPJ COLLATE SQL_Latin1_General_CP1_CI_AI = A2.CGC_cli COLLATE SQL_Latin1_General_CP1_CI_AI)

-- Atribuição do COD_CLI_VAGAS_EPARTNER para FLAG_VAGAS_EPARTNER = 1 e FONTE_CNPJ = 'SPREADSHEET GOOGLE DRIVE':
UPDATE	[VAGAS_DW].[BASE_EMPRESAS_VAGAS_FLIX]
SET		COD_CLI_VAGAS_EPARTNER = (SELECT A2.Cod_cli
								  FROM	[hrh-data].[dbo].[FranqueadorxFranqueado] AS A1		INNER JOIN [hrh-data].[dbo].[Clientes] AS A2 ON A1.codclifranqueado_fcf = A2.Cod_cli
																							INNER JOIN [hrh-data].[dbo].[Divisoes] AS A3 ON A1.coddivfranqueador_fcf = A3.cod_div
														
								  WHERE	A1.codclifranqueador_fcf = 65561
										AND A.CNPJ COLLATE SQL_Latin1_General_CP1_CI_AI = A2.CGC_cli COLLATE SQL_Latin1_General_CP1_CI_AI)
					
FROM	[VAGAS_DW].[BASE_EMPRESAS_VAGAS_FLIX] AS A
WHERE	FLAG_VAGAS_EPARTNER = 1
		AND A.FONTE_CNPJ = 'SPREADSHEET GOOGLE DRIVE' ;

-- CNPJs existentes na base do VAGAS e-partner, inexistentes na tabela provinda do Grupo Martins:
INSERT INTO [VAGAS_DW].[BASE_EMPRESAS_VAGAS_FLIX] (CNPJ, FLAG_VAGAS_EPARTNER, FONTE_CNPJ, COD_CLI_VAGAS_EPARTNER)
SELECT	REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(LTRIM(RTRIM(A.CGC_cli)), CHAR(9), ''), CHAR(10), ''), CHAR(13), ''), '/', ''), '-', ''), '.', '') AS CNPJ ,
		1 AS FLAG_VAGAS_EPARTNER ,
		'VAGAS E-PARTNER INEXISTENTE SPREADSHEET GOOGLE DRIVE' ,
		A.Cod_cli AS COD_CLI
FROM	[hrh-data].[dbo].[Clientes] AS A	INNER JOIN [hrh-data].[dbo].[FranqueadorxFranqueado] AS B ON A.Cod_cli = B.codclifranqueado_fcf
											INNER JOIN [hrh-data].[dbo].[Divisoes] AS C ON B.coddivfranqueador_fcf = C.Cod_div
WHERE	B.codclifranqueador_fcf = 65561
		AND NOT EXISTS (SELECT	1
						FROM	[VAGAS_DW].[BASE_EMPRESAS_VAGAS_FLIX] AS A1
						WHERE	REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(LTRIM(RTRIM(A.CGC_cli)), CHAR(9), ''), CHAR(10), ''), CHAR(13), ''), '/', ''), '-', ''), '.', '') COLLATE SQL_Latin1_General_CP1_CI_AI = A1.CNPJ) ;

-- Data relativa ao primeiro carregamento do CNPJ no DW, data em que recebemos o CNPJ pela primeira vez em nossa base.
UPDATE	[VAGAS_DW].[BASE_EMPRESAS_VAGAS_FLIX]
SET		PRM_DATA_REFERENCIA = (SELECT	MIN(A1.DATA_REFERENCIA)
							   FROM		[VAGAS_DW].[BASE_EMPRESAS_VAGAS_FLIX] AS A1
							   WHERE	A.CNPJ = A1.CNPJ
										AND ISNULL(A1.DATA_REFERENCIA, '') != '')
FROM	[VAGAS_DW].[BASE_EMPRESAS_VAGAS_FLIX] AS A
WHERE	ISNULL(A.DATA_REFERENCIA, '') != '' ;


-- Registros provindos da fonte SPREADSHEET GOOGLE DRIVE, na última DATA_REFERENCIA, e que possuem o COD_CLI existente na tabela de VAGAS:
-- FLAG_PUBLICOU_VAGA:
UPDATE	[VAGAS_DW].[BASE_EMPRESAS_VAGAS_FLIX]
SET		FLAG_PUBLICOU_VAGA = 'SIM'
FROM	[VAGAS_DW].[BASE_EMPRESAS_VAGAS_FLIX] AS A
WHERE	A.FONTE_CNPJ = 'SPREADSHEET GOOGLE DRIVE'
		AND A.DATA_REFERENCIA = (SELECT	MAX(A1.DATA_REFERENCIA)
								 FROM	[VAGAS_DW].[BASE_EMPRESAS_VAGAS_FLIX] AS A1
								 WHERE	A1.FONTE_CNPJ = 'SPREADSHEET GOOGLE DRIVE')
		AND EXISTS (SELECT	1
					FROM	[VAGAS_DW].[VAGAS] AS A1
					WHERE	A.COD_CLI_VAGAS_EPARTNER = A1.COD_CLI_VAGAS_FLIX) ;


-- Atualizar o NOME_FANTASIA com o primeiro NOME_FANTASIA não NULL, de todas as cargas:
UPDATE	[VAGAS_DW].[BASE_EMPRESAS_VAGAS_FLIX]
SET		NOME_FANTASIA = PRM_NOME_FANTASIA.NOME_FANTASIA
FROM	[VAGAS_DW].[BASE_EMPRESAS_VAGAS_FLIX]	AS A		CROSS APPLY (SELECT	TOP 1 A1.NOME_FANTASIA
																		 FROM		[VAGAS_DW].[BASE_EMPRESAS_VAGAS_FLIX] AS A1
																		 WHERE		A.CNPJ = A1.CNPJ
																					AND ISNULL(A1.NOME_FANTASIA, '') != ''
																		 ORDER BY
																				A1.DATA_REFERENCIA ASC) AS PRM_NOME_FANTASIA ;