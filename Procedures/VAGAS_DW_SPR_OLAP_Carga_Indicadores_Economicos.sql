-- EXEC VAGAS_DW.SPR_OLAP_Carga_Indicadores_Economicos
USE VAGAS_DW
GO

IF EXISTS ( SELECT * FROM SYS.OBJECTS WHERE NAME = 'SPR_OLAP_Carga_Indicadores_Economicos' AND SCHEMA_NAME(SCHEMA_ID) = 'VAGAS_DW')
DROP PROCEDURE VAGAS_DW.SPR_OLAP_Carga_Indicadores_Economicos
GO

-- =============================================
-- Author: Luiz Fernando Braz
-- Create date: 29/09/2015
-- Description: Procedure para alimentação do DW
-- =============================================
CREATE PROCEDURE VAGAS_DW.SPR_OLAP_Carga_Indicadores_Economicos

AS
SET NOCOUNT ON

-- limpar tabelas temporárias 
TRUNCATE TABLE VAGAS_DW.TMP_INDICADORES_IPCA
TRUNCATE TABLE VAGAS_DW.TMP_INDICADORES_IGPM
TRUNCATE TABLE VAGAS_DW.TMP_INDICADORES_DOLAR

DECLARE @CMD VARCHAR(8000)

-- Processar dados do IPCA (buscar do portalbrasil)
SET @CMD = 'Z:\Scripts\Python3\python Z:\Scripts\Scripts_Python\Busca_Indicadores_Economicos.py "IPCA"'
EXEC MASTER.DBO.XP_CMDSHELL @CMD

-- Processar dados do IGP-M (buscar do portalbrasil)
SET @CMD = 'Z:\Scripts\Python3\python Z:\Scripts\Scripts_Python\Busca_Indicadores_Economicos.py "IGPM"'
EXEC MASTER.DBO.XP_CMDSHELL @CMD

-- Processar dados do dólar (buscar do cotacoes.economia.uol.com.br)
SET @CMD = 'Z:\Scripts\Python3\python Z:\Scripts\Scripts_Python\Busca_Indicadores_Economicos.py "DOLAR"'
EXEC MASTER.DBO.XP_CMDSHELL @CMD


CREATE TABLE #TMP_INDICADORES_ECONOMICOS_MENSAL (DATA SMALLDATETIME,INDICE_MES_IPCA FLOAT,INDICE_ACUM_ANO_IPCA FLOAT,
												 INDICE_ACUM_12_MESES_IPCA FLOAT,INDICE_MES_IGPM FLOAT,INDICE_ACUM_ANO_IGPM FLOAT,
												 INDICE_ACUM_12_MESES_IGPM FLOAT)

-- CARREGAR TABELA DE DATAS DE 2014 ATÉ O MÊS ANTERIOR À DATA ATUAL
DECLARE @DATA_REFERENCIA SMALLDATETIME
SET @DATA_REFERENCIA = '20140101'
												 
;WITH CTE_DATAS AS (
					SELECT @DATA_REFERENCIA AS DATA
					UNION ALL
					SELECT DATEADD(MONTH,1,DATA) FROM CTE_DATAS
					WHERE DATA < (GETDATE() - DAY(GETDATE()))-1 ) -- LOOP APENAS ATÉ O MÊS ANTERIOR

INSERT INTO #TMP_INDICADORES_ECONOMICOS_MENSAL (DATA)
SELECT DATA	 
FROM CTE_DATAS
OPTION (MAXRECURSION 8000);

-- TRATAR DADOS DO IPCA
SELECT CONVERT(SMALLDATETIME,
	   RIGHT(mes_ano,4) + 
	   CASE WHEN LEFT(REPLACE(REPLACE(REPLACE(mes_ano,CHAR(32),''),CHAR(9),''),CHAR(10),''),3) = 'Jan' THEN '01'
		    WHEN LEFT(REPLACE(REPLACE(REPLACE(mes_ano,CHAR(32),''),CHAR(9),''),CHAR(10),''),3) = 'Fev' THEN '02'
			WHEN LEFT(REPLACE(REPLACE(REPLACE(mes_ano,CHAR(32),''),CHAR(9),''),CHAR(10),''),3) = 'Mar' THEN '03'
			WHEN LEFT(REPLACE(REPLACE(REPLACE(mes_ano,CHAR(32),''),CHAR(9),''),CHAR(10),''),3) = 'Abr' THEN '04'
			WHEN LEFT(REPLACE(REPLACE(REPLACE(mes_ano,CHAR(32),''),CHAR(9),''),CHAR(10),''),3) = 'Mai' THEN '05'
			WHEN LEFT(REPLACE(REPLACE(REPLACE(mes_ano,CHAR(32),''),CHAR(9),''),CHAR(10),''),3) = 'Jun' THEN '06'
			WHEN LEFT(REPLACE(REPLACE(REPLACE(mes_ano,CHAR(32),''),CHAR(9),''),CHAR(10),''),3) = 'Jul' THEN '07'
			WHEN LEFT(REPLACE(REPLACE(REPLACE(mes_ano,CHAR(32),''),CHAR(9),''),CHAR(10),''),3) = 'Ago' THEN '08'
			WHEN LEFT(REPLACE(REPLACE(REPLACE(mes_ano,CHAR(32),''),CHAR(9),''),CHAR(10),''),3) = 'Set' THEN '09'
			WHEN LEFT(REPLACE(REPLACE(REPLACE(mes_ano,CHAR(32),''),CHAR(9),''),CHAR(10),''),3) = 'Out' THEN '10'
			WHEN LEFT(REPLACE(REPLACE(REPLACE(mes_ano,CHAR(32),''),CHAR(9),''),CHAR(10),''),3) = 'Nov' THEN '11'
			WHEN LEFT(REPLACE(REPLACE(REPLACE(mes_ano,CHAR(32),''),CHAR(9),''),CHAR(10),''),3) = 'Dez' THEN '12'
		END +
		'01') AS DATA,
		CONVERT(FLOAT,TRANSLATE(REPLACE(indice_mes,' ',''),',–','.-')) / 100 AS INDICE_MES_IPCA,
		CONVERT(FLOAT,TRANSLATE(REPLACE(indice_acumulado_ano,' ',''),',–','.-')) / 100 AS INDICE_ACUM_ANO_IPCA,
		CONVERT(FLOAT,TRANSLATE(REPLACE(indice_acumulado_12_meses,' ',''),',–','.-')) / 100 AS INDICE_ACUM_12_MESES_IPCA
INTO #TMP_INDICADORES_IPCA
FROM VAGAS_DW.TMP_INDICADORES_IPCA A

UPDATE #TMP_INDICADORES_ECONOMICOS_MENSAL SET INDICE_MES_IPCA = B.INDICE_MES_IPCA,
											  INDICE_ACUM_ANO_IPCA = B.INDICE_ACUM_ANO_IPCA,
											  INDICE_ACUM_12_MESES_IPCA = B.INDICE_ACUM_12_MESES_IPCA
FROM #TMP_INDICADORES_ECONOMICOS_MENSAL A
INNER JOIN #TMP_INDICADORES_IPCA B ON B.DATA = A.DATA

-- TRATAR DADOS DO IGP-M
SELECT CONVERT(SMALLDATETIME,
	   RIGHT(mes_ano,4) + 
	   CASE WHEN LEFT(REPLACE(REPLACE(REPLACE(mes_ano,CHAR(32),''),CHAR(9),''),CHAR(10),''),3) = 'Jan' THEN '01'
		    WHEN LEFT(REPLACE(REPLACE(REPLACE(mes_ano,CHAR(32),''),CHAR(9),''),CHAR(10),''),3) = 'Fev' THEN '02'
			WHEN LEFT(REPLACE(REPLACE(REPLACE(mes_ano,CHAR(32),''),CHAR(9),''),CHAR(10),''),3) = 'Mar' THEN '03'
			WHEN LEFT(REPLACE(REPLACE(REPLACE(mes_ano,CHAR(32),''),CHAR(9),''),CHAR(10),''),3) = 'Abr' THEN '04'
			WHEN LEFT(REPLACE(REPLACE(REPLACE(mes_ano,CHAR(32),''),CHAR(9),''),CHAR(10),''),3) = 'Mai' THEN '05'
			WHEN LEFT(REPLACE(REPLACE(REPLACE(mes_ano,CHAR(32),''),CHAR(9),''),CHAR(10),''),3) = 'Jun' THEN '06'
			WHEN LEFT(REPLACE(REPLACE(REPLACE(mes_ano,CHAR(32),''),CHAR(9),''),CHAR(10),''),3) = 'Jul' THEN '07'
			WHEN LEFT(REPLACE(REPLACE(REPLACE(mes_ano,CHAR(32),''),CHAR(9),''),CHAR(10),''),3) = 'Ago' THEN '08'
			WHEN LEFT(REPLACE(REPLACE(REPLACE(mes_ano,CHAR(32),''),CHAR(9),''),CHAR(10),''),3) = 'Set' THEN '09'
			WHEN LEFT(REPLACE(REPLACE(REPLACE(mes_ano,CHAR(32),''),CHAR(9),''),CHAR(10),''),3) = 'Out' THEN '10'
			WHEN LEFT(REPLACE(REPLACE(REPLACE(mes_ano,CHAR(32),''),CHAR(9),''),CHAR(10),''),3) = 'Nov' THEN '11'
			WHEN LEFT(REPLACE(REPLACE(REPLACE(mes_ano,CHAR(32),''),CHAR(9),''),CHAR(10),''),3) = 'Dez' THEN '12'
		END +
		'01') AS DATA,
		CONVERT(FLOAT,TRANSLATE(REPLACE(REPLACE(indice_mes,' ',''),'&nbsp;',''),',–','.-')) / 100 AS INDICE_MES_IGPM,
		CONVERT(FLOAT,TRANSLATE(REPLACE(indice_acumulado_ano,' ',''),',–','.-')) / 100 AS INDICE_ACUM_ANO_IGPM,
		CONVERT(FLOAT,TRANSLATE(REPLACE(indice_acumulado_12_meses,' ',''),',–','.-')) / 100 AS INDICE_ACUM_12_MESES_IGPM
INTO #TMP_INDICADORES_IGPM
FROM VAGAS_DW.TMP_INDICADORES_IGPM A

UPDATE #TMP_INDICADORES_ECONOMICOS_MENSAL SET INDICE_MES_IGPM = B.INDICE_MES_IGPM,
											  INDICE_ACUM_ANO_IGPM = B.INDICE_ACUM_ANO_IGPM,
											  INDICE_ACUM_12_MESES_IGPM = B.INDICE_ACUM_12_MESES_IGPM
FROM #TMP_INDICADORES_ECONOMICOS_MENSAL A
INNER JOIN #TMP_INDICADORES_IGPM B ON B.DATA = A.DATA

-- Limpar registros inconsistentes
DELETE #TMP_INDICADORES_ECONOMICOS_MENSAL 
FROM #TMP_INDICADORES_ECONOMICOS_MENSAL 
WHERE INDICE_MES_IPCA IS NULL AND INDICE_MES_IGPM IS NULL

-- Os dados mensais são sempre atualizados na sua totalidade
TRUNCATE TABLE VAGAS_DW.INDICADORES_ECONOMICOS_MENSAL

-- INSERIR DADOS MENSAIS NA TABELA FATO
INSERT INTO VAGAS_DW.INDICADORES_ECONOMICOS_MENSAL (DATA,INDICE_MES_IPCA,INDICE_ACUM_ANO_IPCA,INDICE_ACUM_12_MESES_IPCA,INDICE_MES_IGPM,
													INDICE_ACUM_ANO_IGPM,INDICE_ACUM_12_MESES_IGPM)
SELECT * FROM #TMP_INDICADORES_ECONOMICOS_MENSAL 

-- Solução paleativa - Inserção dos valores de Nov/17 manualmente:
-- Dados do mês de No/17, provindos do site: www.calculador.com.br/tabela/indice/IPCA
--INSERT INTO [VAGAS_DW].[INDICADORES_ECONOMICOS_MENSAL] (DATA,INDICE_MES_IPCA,INDICE_ACUM_ANO_IPCA,INDICE_ACUM_12_MESES_IPCA,INDICE_MES_IGPM,INDICE_ACUM_ANO_IGPM,INDICE_ACUM_12_MESES_IGPM)

--SELECT	CONVERT(SMALLDATETIME, CONVERT(VARCHAR, '20180701', 112)) AS DATA ,
--		CONVERT(FLOAT,REPLACE(REPLACE(0.33,',','.'),'- ','-')) / 100 AS INDICE_MES_IPCA,
--		CONVERT(FLOAT,REPLACE(REPLACE(2.94,',','.'),'- ','-')) / 100 AS INDICE_ACUM_ANO_IPCA,
--		CONVERT(FLOAT,REPLACE(REPLACE(4.48,',','.'),'- ','-')) / 100 AS INDICE_ACUM_12_MESES_IPCA,
--		CONVERT(FLOAT,REPLACE(REPLACE(REPLACE(REPLACE(indice_mes,',','.'),'- ','-'),'&nbsp;',''),' ','')) / 100 AS INDICE_MES_IGPM,
--		CONVERT(FLOAT,REPLACE(REPLACE(indice_acumulado_ano,',','.'),'- ','-')) / 100 AS INDICE_ACUMULADO_ANO_IGPM,
--		CONVERT(FLOAT,REPLACE(REPLACE(indice_acumulado_12_meses,',','.'),'- ','-')) / 100 AS INDICE_ACUMULADO_12_MESES_IGPM
--FROM	[VAGAS_DW].[TMP_INDICADORES_IGPM]
--WHERE	mes_ano = 'Jul/2018' ;

-- Solução paleativa: Inserção dos valores de Set/2018 manualmente:
INSERT INTO [VAGAS_DW].[INDICADORES_ECONOMICOS_MENSAL] (DATA,INDICE_MES_IPCA,INDICE_ACUM_ANO_IPCA,INDICE_ACUM_12_MESES_IPCA,INDICE_MES_IGPM,INDICE_ACUM_ANO_IGPM,INDICE_ACUM_12_MESES_IGPM)
SELECT	CONVERT(SMALLDATETIME, CONVERT(VARCHAR, '20180901', 112)) AS DATA ,
		CONVERT(FLOAT,REPLACE(REPLACE(0.48,',','.'),'- ','-')) / 100 AS INDICE_MES_IPCA,
		CONVERT(FLOAT,REPLACE(REPLACE(3.3431,',','.'),'- ','-')) / 100 AS INDICE_ACUM_ANO_IPCA,
		CONVERT(FLOAT,REPLACE(REPLACE(4.5256,',','.'),'- ','-')) / 100 AS INDICE_ACUM_12_MESES_IPCA,
		CONVERT(FLOAT,REPLACE(REPLACE(REPLACE(REPLACE(indice_mes,',','.'),'- ','-'),'&nbsp;',''),' ','')) / 100 AS INDICE_MES_IGPM,
		CONVERT(FLOAT,REPLACE(REPLACE(indice_acumulado_ano,',','.'),'- ','-')) / 100 AS INDICE_ACUMULADO_ANO_IGPM,
		CONVERT(FLOAT,REPLACE(REPLACE(indice_acumulado_12_meses,',','.'),'- ','-')) / 100 AS INDICE_ACUMULADO_12_MESES_IGPM
FROM	[VAGAS_DW].[TMP_INDICADORES_IGPM] AS A
WHERE	A.MES_ANO = 'Set/2018' ;


-- Solução paleativa: Inserção dos valores de Nov/2018 manualmente:
INSERT INTO [VAGAS_DW].[INDICADORES_ECONOMICOS_MENSAL] (DATA,INDICE_MES_IPCA,INDICE_ACUM_ANO_IPCA,INDICE_ACUM_12_MESES_IPCA,INDICE_MES_IGPM,INDICE_ACUM_ANO_IGPM,INDICE_ACUM_12_MESES_IGPM)
SELECT	CONVERT(SMALLDATETIME, CONVERT(VARCHAR, '20181101', 112)) AS DATA ,
		CONVERT(FLOAT,REPLACE(REPLACE(-0.21,',','.'),'- ','-')) / 100 AS INDICE_MES_IPCA,
		CONVERT(FLOAT,REPLACE(REPLACE(3.5900,',','.'),'- ','-')) / 100 AS INDICE_ACUM_ANO_IPCA,
		CONVERT(FLOAT,REPLACE(REPLACE(4.0500,',','.'),'- ','-')) / 100 AS INDICE_ACUM_12_MESES_IPCA,
		CONVERT(FLOAT,REPLACE(REPLACE(REPLACE(REPLACE(indice_mes,',','.'),'- ','-'),'&nbsp;',''),' ','')) / 100 AS INDICE_MES_IGPM,
		CONVERT(FLOAT,REPLACE(REPLACE(indice_acumulado_ano,',','.'),'- ','-')) / 100 AS INDICE_ACUMULADO_ANO_IGPM,
		CONVERT(FLOAT,REPLACE(REPLACE(indice_acumulado_12_meses,',','.'),'- ','-')) / 100 AS INDICE_ACUMULADO_12_MESES_IGPM
FROM	[VAGAS_DW].[TMP_INDICADORES_IGPM] AS A
WHERE	A.MES_ANO = 'Nov/2018' ;

-- Solução paleativa: Inserido dos valores de Dez/18 manualmente: 
-- https://www.ibge.gov.br/estatisticas-novoportal/economicas/precos-e-custos/9256-indice-nacional-de-precos-ao-consumidor-amplo.html?edicao=22909&t=downloads 
-- Download: ipca_SerieHist.zip 
INSERT INTO [VAGAS_DW].[INDICADORES_ECONOMICOS_MENSAL] (DATA,INDICE_MES_IPCA,INDICE_ACUM_ANO_IPCA,INDICE_ACUM_12_MESES_IPCA,INDICE_MES_IGPM,INDICE_ACUM_ANO_IGPM,INDICE_ACUM_12_MESES_IGPM) 
SELECT	CONVERT(SMALLDATETIME, CONVERT(VARCHAR, '20181201', 112)) AS DATA ,  
		CONVERT(FLOAT,REPLACE(REPLACE(0.15,',','.'),'- ','-')) / 100 AS INDICE_MES_IPCA, --> "NO MES" 
		CONVERT(FLOAT,REPLACE(REPLACE(3.75,',','.'),'- ','-')) / 100 AS INDICE_ACUM_ANO_IPCA, --> "NO ANO" 
		CONVERT(FLOAT,REPLACE(REPLACE(3.75,',','.'),'- ','-')) / 100 AS INDICE_ACUM_12_MESES_IPCA, --> 12 MESES" 
		CONVERT(FLOAT,REPLACE(REPLACE(REPLACE(REPLACE(indice_mes,',','.'),'- ','-'),'&nbsp;',''),' ','')) / 100 AS INDICE_MES_IGPM, 
		CONVERT(FLOAT,REPLACE(REPLACE(indice_acumulado_ano,',','.'),'- ','-')) / 100 AS INDICE_ACUMULADO_ANO_IGPM, 
		CONVERT(FLOAT,REPLACE(REPLACE(indice_acumulado_12_meses,',','.'),'- ','-')) / 100 AS INDICE_ACUMULADO_12_MESES_IGPM 
FROM	[VAGAS_DW].[TMP_INDICADORES_IGPM] AS A 
WHERE	A.MES_ANO = 'Dez/2018' ; 
 

-- Apagar registros duplicados inseridos paleativamente:
WHILE ( SELECT	TOP 1 1
		FROM	[VAGAS_DW].[INDICADORES_ECONOMICOS_MENSAL] AS A
		WHERE	EXISTS (SELECT	1
						FROM	[VAGAS_DW].[VAGAS_DW].[INDICADORES_ECONOMICOS_MENSAL] AS A1
						WHERE	A.DATA = A1.DATA
							AND EXISTS ( SELECT	1
										 FROM	[VAGAS_DW].[VAGAS_DW].[INDICADORES_ECONOMICOS_MENSAL] AS AA1
										 WHERE	A1.DATA = AA1.DATA
										 GROUP BY
												AA1.DATA
										HAVING COUNT(*) > 1 ))) = 1

DELETE TOP (1) FROM [VAGAS_DW].[INDICADORES_ECONOMICOS_MENSAL]
FROM	[VAGAS_DW].[INDICADORES_ECONOMICOS_MENSAL] AS A		INNER JOIN 
															(SELECT	A.DATA ,
																	ROW_NUMBER() OVER(PARTITION BY A.DATA ORDER BY A.DATA ASC) AS CONTROLE
															 FROM	[VAGAS_DW].[INDICADORES_ECONOMICOS_MENSAL] AS A
															 WHERE	EXISTS ( SELECT	1
																			 FROM	[VAGAS_DW].[VAGAS_DW].[INDICADORES_ECONOMICOS_MENSAL] AS A1
																			 WHERE	A.DATA = A1.DATA
																					AND EXISTS ( SELECT	1
																			 					 FROM	[VAGAS_DW].[VAGAS_DW].[INDICADORES_ECONOMICOS_MENSAL] AS AA1
																								 WHERE	A1.DATA = AA1.DATA
																								 GROUP BY
																										AA1.DATA
																								 HAVING COUNT(*) > 1 ))) AS SUBQUERY ON A.DATA = SUBQUERY.DATA

-- Os dados diarios são gerados por semana
DELETE VAGAS_DW.INDICADORES_ECONOMICOS_DIARIO  
FROM VAGAS_DW.INDICADORES_ECONOMICOS_DIARIO A
WHERE EXISTS ( SELECT 1 FROM VAGAS_DW.TMP_INDICADORES_DOLAR
				WHERE CONVERT(SMALLDATETIME,RIGHT(data,4) + SUBSTRING(data,4,2) + LEFT(data,2)) = A.DATA )

INSERT INTO VAGAS_DW.INDICADORES_ECONOMICOS_DIARIO 
SELECT CONVERT(SMALLDATETIME,RIGHT(data,4) + SUBSTRING(data,4,2) + LEFT(data,2)) AS DATA,
	   CONVERT(FLOAT,REPLACE(compra,',','.')) AS DOLAR_COMPRA,
	   CONVERT(FLOAT,REPLACE(venda,',','.')) AS DOLAR_VENDA
FROM VAGAS_DW.TMP_INDICADORES_DOLAR


-- carregar dados CDI (financeiro)
EXEC VAGAS_DW.SPR_OLAP_Carga_Dados_Rentabilidade