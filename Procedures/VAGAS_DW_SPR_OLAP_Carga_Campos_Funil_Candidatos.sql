USE VAGAS_DW
GO

IF EXISTS ( SELECT * FROM SYS.OBJECTS WHERE NAME = 'SPR_OLAP_Carga_Campos_Funil_Candidatos' AND SCHEMA_NAME(SCHEMA_ID) = 'VAGAS_DW')
DROP PROCEDURE VAGAS_DW.SPR_OLAP_Carga_Campos_Funil_Candidatos
GO

-- =============================================
-- Author: Fiama
-- Create date: 31/01/2017
-- Description: Procedure para alimentação do DW
-- =============================================

-- =============================================
-- Alterações
-- 05/02/2020 - Diego Gatto - Ajustado para utilizar as tabelas TMP na base de dados stage e não vagas_dw
-- =============================================

CREATE PROCEDURE VAGAS_DW.SPR_OLAP_Carga_Campos_Funil_Candidatos

AS
SET NOCOUNT ON

DECLARE @DATA_REFERENCIA SMALLDATETIME
SET @DATA_REFERENCIA = CONVERT(SMALLDATETIME,CONVERT(VARCHAR,GETDATE(),112))

-- LIMPAR DADOS DA DATA REFERENCIA QUE SERÁ ATUALIZADA
DELETE [VAGAS_DW].[VAGAS_DW].[CAMPOS_FUNIL_CANDIDATOS]
FROM [VAGAS_DW].[VAGAS_DW].[CAMPOS_FUNIL_CANDIDATOS] A
WHERE DATA_REFERENCIA = @DATA_REFERENCIA

SELECT	TIPO_CADASTRO ,
		CURRICULO_NOVO ,
		CAMPO ,
		CASE WHEN VALOR = 1 THEN 'SIM' ELSE 'NÃO' END AS CAMPO_PREENCHIDO ,
		1 AS VALOR_CAMPO_PREENCHIDO
INTO	#CAMPOS_FUNIL_CANDIDATOS
FROM (
	SELECT	A.TIPO_CADASTRO,
			A.DATA_CADASTRO ,
			A.CURRICULO_NOVO ,
			A.NOME ,
			A.FOTO ,
			A.DADOS_PESSOAIS ,
			A.ENDERECO ,
			A.CONTATO ,
			A.LINKS_REDES_SOCIAIS ,
			A.OBJETIVO ,
			A.AREA_NIVEL_OBJETIVO ,
			A.PRETENSAO_SALARIAL ,
			A.REGIAO_INTERESSE ,
			A.RESUMO_QUALIFIC ,
			A.NIVEL_ESCOLARIDADE ,
			A.EXPERIENCIA_PROFISSIONAL ,
			A.IDIOMA ,
			A.ULTIMO_SALARIO ,
			A.INF_COMPLEMENTARES
	FROM	[STAGE].[VAGAS_DW].[TMP_FUNIL_CANDIDATOS] AS A
) AS PVT

UNPIVOT (VALOR FOR CAMPO IN (PVT.NOME ,PVT.FOTO ,PVT.DADOS_PESSOAIS ,PVT.ENDERECO ,PVT.CONTATO ,PVT.LINKS_REDES_SOCIAIS ,PVT.OBJETIVO ,PVT.AREA_NIVEL_OBJETIVO ,PVT.PRETENSAO_SALARIAL ,PVT.REGIAO_INTERESSE ,	PVT.RESUMO_QUALIFIC ,PVT.NIVEL_ESCOLARIDADE ,PVT.EXPERIENCIA_PROFISSIONAL ,PVT.IDIOMA ,PVT.ULTIMO_SALARIO ,PVT.INF_COMPLEMENTARES)) AS UNPVT


SELECT	A.TIPO_CADASTRO ,
		CASE WHEN A.CURRICULO_NOVO = 1 THEN 'SIM' ELSE 'NÃO' END AS CURRICULO_NOVO ,
		A.CAMPO ,
		A.CAMPO_PREENCHIDO ,
		SUM(A.VALOR_CAMPO_PREENCHIDO) AS VALOR
INTO	#TMP_1
FROM	#CAMPOS_FUNIL_CANDIDATOS AS A
GROUP BY 
		A.TIPO_CADASTRO ,
		CASE WHEN A.CURRICULO_NOVO = 1 THEN 'SIM' ELSE 'NÃO' END ,
		A.CAMPO ,
		A.CAMPO_PREENCHIDO

-- CARGA DOS DADOS:
INSERT INTO [VAGAS_DW].[VAGAS_DW].[CAMPOS_FUNIL_CANDIDATOS] (TIPO_CADASTRO, CURRICULO_NOVO, CAMPO, CAMPO_PREENCHIDO, VALOR, DATA_REFERENCIA)
SELECT	TIPO_CADASTRO ,
		CURRICULO_NOVO ,
		CAMPO ,
		CAMPO_PREENCHIDO ,
		VALOR ,
		@DATA_REFERENCIA AS DATA_REFERENCIA
FROM	#TMP_1 ;