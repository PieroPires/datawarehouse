-- EXEC VAGAS_DW.SPR_OLAP_Carga_Controle_Vagas_RH
USE VAGAS_DW
GO

IF EXISTS ( SELECT * FROM SYS.OBJECTS WHERE NAME = 'SPR_OLAP_Carga_Controle_Vagas_RH' AND SCHEMA_NAME(SCHEMA_ID) = 'VAGAS_DW')
DROP PROCEDURE VAGAS_DW.SPR_OLAP_Carga_Controle_Vagas_RH
GO

-- =============================================
-- Author: Luiz Fernando Braz
-- Create date: 13/06/2017
-- Description: Procedure para alimentação do DW
-- =============================================
CREATE PROCEDURE VAGAS_DW.SPR_OLAP_Carga_Controle_Vagas_RH @DATA_REFERENCIA SMALLDATETIME = NULL

AS
SET NOCOUNT ON
	
	IF @DATA_REFERENCIA IS NULL
		SET @DATA_REFERENCIA = CONVERT(SMALLDATETIME,CONVERT(VARCHAR,GETDATE()))

	-- SEMPRE CONSIDERAR O INICIO DE CADA MES
	SELECT @DATA_REFERENCIA = CONVERT(SMALLDATETIME,CONVERT(VARCHAR,@DATA_REFERENCIA - DAY(@DATA_REFERENCIA ) + 1,112))

	DECLARE	@DATA_REFERENCIA_FIM SMALLDATETIME
	
	SELECT @DATA_REFERENCIA_FIM = DATEADD(MONTH,1,@DATA_REFERENCIA)

	-- LIMPAR DATA REFERENCIA
	DELETE FROM VAGAS_DW.CONTROLE_VAGAS_RH WHERE DATA_REFERENCIA >= @DATA_REFERENCIA AND DATA_REFERENCIA < @DATA_REFERENCIA_FIM

	-- INSERIR TIPO "VAGAS ABERTAS E FECHADAS"
	
	-- ABERTAS NO MÊS
	INSERT INTO VAGAS_DW.CONTROLE_VAGAS_RH (DATA_REFERENCIA,TIPO,SUB_TIPO,QTD)
	SELECT @DATA_REFERENCIA AS DATA_REFERENCIA,
		   'VAGAS ABERTAS E FECHADAS' AS TIPO,
		   'VAGAS ABERTAS - MÊS' AS SUB_TIPO,
		   COUNT(*) AS QTD
	FROM VAGAS_DW.CONTROLE_VAGAS_DETALHE_RH A
	WHERE DATA_RECEBIMENTO_REQUISICAO >= @DATA_REFERENCIA AND DATA_RECEBIMENTO_REQUISICAO < @DATA_REFERENCIA_FIM 
	
	UNION ALL

	-- ABERTAS TOTAL
	SELECT @DATA_REFERENCIA AS DATA_REFERENCIA,
		   'VAGAS ABERTAS E FECHADAS' AS TIPO,
		   'VAGAS ABERTAS - TOTAL' AS SUB_TIPO,
		   COUNT(*) AS QTD
	FROM VAGAS_DW.CONTROLE_VAGAS_DETALHE_RH A
	WHERE STATUS = 'ABERTA' 
	
	UNION ALL

	-- FECHADAS NO MÊS
	SELECT @DATA_REFERENCIA AS DATA_REFERENCIA,
		   'VAGAS ABERTAS E FECHADAS' AS TIPO,
		   'VAGAS FECHADAS - MÊS' AS SUB_TIPO,
		   COUNT(*) AS QTD
	FROM VAGAS_DW.CONTROLE_VAGAS_DETALHE_RH A
	WHERE DATA_ACEITE_PROPOSTA >= @DATA_REFERENCIA AND DATA_ACEITE_PROPOSTA < @DATA_REFERENCIA_FIM 
	
	UNION ALL
	
	-- SUSPENSAS/CANCELADAS NO MÊS
	SELECT @DATA_REFERENCIA AS DATA_REFERENCIA,
		   'VAGAS ABERTAS E FECHADAS' AS TIPO,
		   'VAGAS SUSPENSAS/CANCELAS - MÊS' AS SUB_TIPO,
		   COUNT(*) AS QTD
	FROM VAGAS_DW.CONTROLE_VAGAS_DETALHE_RH A
	WHERE DATA_SUSPENSAO >= @DATA_REFERENCIA AND DATA_SUSPENSAO < @DATA_REFERENCIA_FIM 

	UNION ALL

	-- TODAS INTERNAMENTE NO MÊS
	SELECT @DATA_REFERENCIA AS DATA_REFERENCIA,
		   'VAGAS ABERTAS E FECHADAS' AS TIPO,
		   'FECHADAS RH' AS SUB_TIPO,
		   COUNT(*) AS QTD
	FROM VAGAS_DW.CONTROLE_VAGAS_DETALHE_RH A
	WHERE DATA_ACEITE_PROPOSTA >= @DATA_REFERENCIA AND DATA_ACEITE_PROPOSTA < @DATA_REFERENCIA_FIM 
	AND ORIGEM_CANDIDATO NOT IN ('CONSULTORIA','HIRING')

	UNION ALL

	-- CONSLUTORIA/HIRING NO MÊS
	SELECT @DATA_REFERENCIA AS DATA_REFERENCIA,
		   'VAGAS ABERTAS E FECHADAS' AS TIPO,
		   'FECHADAS CONSULTORIA' AS SUB_TIPO,
		   COUNT(*) AS QTD
	FROM VAGAS_DW.CONTROLE_VAGAS_DETALHE_RH A
	WHERE DATA_ACEITE_PROPOSTA >= @DATA_REFERENCIA AND DATA_ACEITE_PROPOSTA < @DATA_REFERENCIA_FIM 
	AND ORIGEM_CANDIDATO IN ('CONSULTORIA','HIRING')

	UNION ALL

	-- INDICAÇÃO NO MÊS
	SELECT @DATA_REFERENCIA AS DATA_REFERENCIA,
		   'VAGAS ABERTAS E FECHADAS' AS TIPO,
		   'FECHADAS INDICAÇÃO' AS SUB_TIPO,
		   COUNT(*) AS QTD
	FROM VAGAS_DW.CONTROLE_VAGAS_DETALHE_RH A
	WHERE DATA_ACEITE_PROPOSTA >= @DATA_REFERENCIA AND DATA_ACEITE_PROPOSTA < @DATA_REFERENCIA_FIM 
	AND ORIGEM_CANDIDATO = 'INDICAÇÃO'

	UNION ALL

	-- RI NO MÊS
	SELECT @DATA_REFERENCIA AS DATA_REFERENCIA,
		   'VAGAS ABERTAS E FECHADAS' AS TIPO,
		   'FECHADAS RI' AS SUB_TIPO,
		   COUNT(*) AS QTD
	FROM VAGAS_DW.CONTROLE_VAGAS_DETALHE_RH A
	WHERE DATA_ACEITE_PROPOSTA >= @DATA_REFERENCIA AND DATA_ACEITE_PROPOSTA < @DATA_REFERENCIA_FIM 
	AND ORIGEM_CANDIDATO = 'RI'
	
	-- ATUALIZAÇÃO DOS TEMPOS
	-- TEMPO VAGA EM ABERTO (DATA REQUISIÇÃO - DATA ATUAL)
	UPDATE VAGAS_DW.CONTROLE_VAGAS_DETALHE_RH SET TEMPO_EM_ABERTO = DATEDIFF(DAY,DATA_RECEBIMENTO_REQUISICAO,GETDATE())
	FROM VAGAS_DW.CONTROLE_VAGAS_DETALHE_RH 
	WHERE STATUS = 'ABERTA'

	-- TEMPO DO PROCESSO SELETIVO (DATA REQUISIÇÃO - DATA INICIO)
	UPDATE VAGAS_DW.CONTROLE_VAGAS_DETALHE_RH SET TEMPO_PROCESSO_TOTAL = DATEDIFF(DAY,DATA_RECEBIMENTO_REQUISICAO,DATA_ADMISSAO)
	FROM VAGAS_DW.CONTROLE_VAGAS_DETALHE_RH 
	WHERE STATUS = 'FECHADA'
	AND DATA_ACEITE_PROPOSTA >= @DATA_REFERENCIA 
	AND DATA_ACEITE_PROPOSTA < @DATA_REFERENCIA_FIM 

	-- TEMPO PRÉVIO (DATA REQUISIÇÃO - DATA DIVULGACAO)
	UPDATE VAGAS_DW.CONTROLE_VAGAS_DETALHE_RH SET TEMPO_PREVIO = DATEDIFF(DAY,DATA_RECEBIMENTO_REQUISICAO,DATA_DIVULGACAO)
	FROM VAGAS_DW.CONTROLE_VAGAS_DETALHE_RH 
	WHERE STATUS = 'FECHADA'
	AND DATA_ACEITE_PROPOSTA >= @DATA_REFERENCIA
	AND DATA_ACEITE_PROPOSTA < @DATA_REFERENCIA_FIM 

	-- TEMPO SELEÇÃO (DATA DIVULGACAO - DATA FECHAMENTO)
	UPDATE VAGAS_DW.CONTROLE_VAGAS_DETALHE_RH SET TEMPO_SELECAO = DATEDIFF(DAY,DATA_DIVULGACAO,DATA_ACEITE_PROPOSTA)
	FROM VAGAS_DW.CONTROLE_VAGAS_DETALHE_RH 
	WHERE STATUS = 'FECHADA'
	AND DATA_ACEITE_PROPOSTA >= @DATA_REFERENCIA
	AND DATA_ACEITE_PROPOSTA < @DATA_REFERENCIA_FIM 

	-- TEMPO ADMISSAO (DATA ACEITE PROPOSTA - DATA ADMISSAO)
	UPDATE VAGAS_DW.CONTROLE_VAGAS_DETALHE_RH SET TEMPO_ADMISSAO = DATEDIFF(DAY,DATA_ACEITE_PROPOSTA,DATA_ADMISSAO)
	FROM VAGAS_DW.CONTROLE_VAGAS_DETALHE_RH 
	WHERE STATUS = 'FECHADA'
	AND DATA_ACEITE_PROPOSTA >= @DATA_REFERENCIA
	AND DATA_ACEITE_PROPOSTA < @DATA_REFERENCIA_FIM 	

	-- INSERIR TEMPOS 
	INSERT INTO VAGAS_DW.CONTROLE_VAGAS_RH (DATA_REFERENCIA,TIPO,SUB_TIPO,QTD)
	SELECT @DATA_REFERENCIA AS DATA_REFERENCIA,
		   'TEMPOS DE SELEÇÃO' AS TIPO,
		   'TEMPO VAGAS EM ABERTO' AS SUB_TIPO,
			AVG(TEMPO_EM_ABERTO) AS TEMPO_EM_ABERTO
	FROM VAGAS_DW.CONTROLE_VAGAS_DETALHE_RH 
	WHERE STATUS = 'ABERTA'

	INSERT INTO VAGAS_DW.CONTROLE_VAGAS_RH (DATA_REFERENCIA,TIPO,SUB_TIPO,QTD)
	SELECT @DATA_REFERENCIA AS DATA_REFERENCIA,
		   'TEMPOS DE SELEÇÃO' AS TIPO,
		   'TEMPO VAGAS FECHADAS' AS SUB_TIPO,
		   AVG(TEMPO_PROCESSO_TOTAL) AS TEMPO_PROCESSO_TOTAL			
	FROM VAGAS_DW.CONTROLE_VAGAS_DETALHE_RH 
	WHERE STATUS = 'FECHADA'
	AND DATA_ACEITE_PROPOSTA >= @DATA_REFERENCIA
	AND DATA_ACEITE_PROPOSTA < @DATA_REFERENCIA_FIM 

	INSERT INTO VAGAS_DW.CONTROLE_VAGAS_RH (DATA_REFERENCIA,TIPO,SUB_TIPO,QTD)
	SELECT @DATA_REFERENCIA AS DATA_REFERENCIA,
		   'TEMPOS DE SELEÇÃO' AS TIPO,
		   'TEMPO PRÉVIO' AS SUB_TIPO,
		   AVG(TEMPO_PREVIO) AS TEMPO_PREVIO
	FROM VAGAS_DW.CONTROLE_VAGAS_DETALHE_RH 
	WHERE STATUS = 'FECHADA'
	AND DATA_ACEITE_PROPOSTA >= @DATA_REFERENCIA
	AND DATA_ACEITE_PROPOSTA < @DATA_REFERENCIA_FIM 

	INSERT INTO VAGAS_DW.CONTROLE_VAGAS_RH (DATA_REFERENCIA,TIPO,SUB_TIPO,QTD)
	SELECT @DATA_REFERENCIA AS DATA_REFERENCIA,
		   'TEMPOS DE SELEÇÃO' AS TIPO,
		   'TEMPO SELEÇÃO' AS SUB_TIPO,
		   AVG(TEMPO_SELECAO) AS TEMPO_PREVIO
	FROM VAGAS_DW.CONTROLE_VAGAS_DETALHE_RH 
	WHERE STATUS = 'FECHADA'
	AND DATA_ACEITE_PROPOSTA >= @DATA_REFERENCIA
	AND DATA_ACEITE_PROPOSTA < @DATA_REFERENCIA_FIM 

	INSERT INTO VAGAS_DW.CONTROLE_VAGAS_RH (DATA_REFERENCIA,TIPO,SUB_TIPO,QTD)
	SELECT @DATA_REFERENCIA AS DATA_REFERENCIA,
		   'TEMPOS DE SELEÇÃO' AS TIPO,
		   'TEMPO ADMISSÃO' AS SUB_TIPO,
		   AVG(TEMPO_ADMISSAO) AS TEMPO_ADMISSAO
	FROM VAGAS_DW.CONTROLE_VAGAS_DETALHE_RH 
	WHERE STATUS = 'FECHADA'
	AND DATA_ACEITE_PROPOSTA >= @DATA_REFERENCIA
	AND DATA_ACEITE_PROPOSTA < @DATA_REFERENCIA_FIM 

	