USE VAGAS_DW

IF EXISTS ( SELECT * FROM SYS.OBJECTS WHERE NAME = 'SPR_Gerar_Dados_Arquivo_Clusterizacao' AND SCHEMA_NAME(SCHEMA_ID) = 'VAGAS_DW')
DROP PROCEDURE VAGAS_DW.SPR_Gerar_Dados_Arquivo_Clusterizacao
GO

-- =============================================
-- Author: Luiz Fernando Braz
-- Create date: 07/04/2017
-- Description: Procedure para geração do arquivo .csv da clusterização (a ser utilzado na rotina via python)
-- =============================================
CREATE PROCEDURE VAGAS_DW.SPR_Gerar_Dados_Arquivo_Clusterizacao 

AS
SET NOCOUNT ON

-- Dados GERAL + VARIAVEIS UNITFOUR
SELECT  A.COD_CLI,
	    A.CLIENTE_CRM AS EMPRESA,
	    A.MEDIA_VAGAS_ULT_6_MESES AS MEDIA_VAGAS,
	    A.QTD_EXTRACOES_BCC_6_MESES AS EXTRACOES_BCC,
	    A.VALOR_MENSALIDADE,
	    A.CAPACIDADE_BCE,
	    ISNULL(A.QTD_BCE,0) AS QTD_BCE,
	    A.CONTEM_VET,
	    ISNULL(A.CONTEM_CUSTOMIZACAO,0) AS CONTEM_CUSTOMIZACAO,
	    CASE WHEN A.TAMANHO_MENSALIDADE = 'P' THEN 1
			WHEN A.TAMANHO_MENSALIDADE IN ('M') THEN 2
			WHEN A.TAMANHO_MENSALIDADE IN ('G') THEN 3
			WHEN A.TAMANHO_MENSALIDADE IN ('VIP') THEN 4
			END AS TAMANHO_MENSALIDADE,
	    ISNULL(B.QTD_REQUISICOES,0) AS QTD_REQUISICOES,
	    ISNULL(B.QTD_VAGAS_RI,0) AS QTD_VAGAS_RI,
	    ISNULL(B.QTD_VAGAS_COM_TESTES_NA_CANDIDATURA,0) AS QTD_VAGAS_COM_TESTES_NA_CANDIDATURA,
	    ISNULL(B.QTD_VAGAS_COM_TESTES_POS_CANDIDATURA,0) AS QTD_VAGAS_COM_TESTES_POS_CANDIDATURA,
	    ISNULL(B.QTD_VAGAS_COM_TESTES_CUSTOMIZADOS_NA_CANDIDATURA,0) AS QTD_VAGAS_COM_TESTES_CUSTOMIZADOS_NA_CANDIDATURA,
	    ISNULL(B.QTD_VAGAS_COM_TESTES_CUSTOMIZADOS_POS_CANDIDATURA,0) AS QTD_VAGAS_COM_TESTES_CUSTOMIZADOS_POS_CANDIDATURA,
	    ISNULL(B.QTD_VAGAS_ETALENT,0) AS QTD_VAGAS_ETALENT,
	    ISNULL(B.QTD_VAGAS_MAIS_1_FASE,0) AS QTD_VAGAS_MAIS_1_FASE,
	    ISNULL(B.QTD_TRIAGEM,0) AS QTD_TRIAGEM,
	    ISNULL(B.QTD_TRIAGEM_1,0) AS QTD_TRIAGEM_1,
	    ISNULL(B.QTD_TRIAGEM_2,0) AS QTD_TRIAGEM_2,
	    ISNULL(B.QTD_TRIAGEM_BCC_BCE,0) AS QTD_TRIAGEM_BCC_BCE,
	    ISNULL(B.QTD_TRIAGEM_1_BCC_BCE,0) AS QTD_TRIAGEM_1_BCC_BCE,
	    ISNULL(B.QTD_TRIAGEM_2_BCC_BCE,0) AS QTD_TRIAGEM_2_BCC_BCE,
	    ISNULL(B.QTD_VAGAS_COM_ENVIO_MSG,0) AS QTD_VAGAS_COM_ENVIO_MSG,
	    ISNULL(B.QTD_MSG,0) AS QTD_MSG,
		ISNULL(C.QTD_FUNCIONARIOS,0) AS QTD_FUNCIONARIOS,
		ISNULL(C.FATURAMENTO_PRESUMIDO_ANUAL,0) AS FATURAMENTO_PRESUMIDO_ANUAL,
		ISNULL(C.PORTE_EMPRESA,0) AS PORTE_EMPRESA,
		ISNULL(C.TEMPO_ABERTURA_ANOS,0) AS TEMPO_ABERTURA_ANOS,
		ISNULL(D.TEMPO_MESES,0) AS LTV_MESES
FROM VAGAS_DW.CLIENTES A
LEFT OUTER JOIN VAGAS_DW.TMP_CLIENTES_PERFIL_USO B ON B.COD_CLI = A.COD_CLI
LEFT OUTER JOIN VAGAS_DW.DADOS_UNITFOUR_CLUSTERIZACAO_FASE_2 C ON C.COD_CLI = A.COD_CLI
LEFT OUTER JOIN VAGAS_DW.LTV D ON D.COD_CLI = A.COD_CLI
							   AND D.DATA_REFERENCIA = ( SELECT MAX(DATA_REFERENCIA) FROM VAGAS_DW.LTV )
WHERE A.EX_CLIENTE = 0
AND A.DATA_REFERENCIA = ( SELECT MAX(DATA_REFERENCIA) FROM VAGAS_DW.CLIENTES)
AND A.CONTEM_FIT = 1
ORDER BY 1

