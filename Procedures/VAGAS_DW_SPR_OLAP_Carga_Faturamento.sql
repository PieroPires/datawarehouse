-- SELECT * FROM VAGAS_DW.FATURAMENTO
-- EXEC VAGAS_DW.SPR_OLAP_Carga_Faturamento

USE [VAGAS_DW] ;

IF EXISTS ( SELECT * FROM SYS.OBJECTS WHERE NAME = 'SPR_OLAP_Carga_Faturamento' AND SCHEMA_NAME(SCHEMA_ID) = 'VAGAS_DW')
DROP PROCEDURE VAGAS_DW.SPR_OLAP_Carga_Faturamento
GO

-- =============================================
-- Author: Luiz Fernando Braz
-- Create date: 20/04/2016
-- Description: Procedure para alimenta��o do DW
-- =============================================
CREATE PROCEDURE VAGAS_DW.SPR_OLAP_Carga_Faturamento

AS
SET NOCOUNT ON

DELETE VAGAS_DW.FATURAMENTO
FROM VAGAS_DW.FATURAMENTO A
WHERE EXISTS ( SELECT 1 FROM STAGE.VAGAS_DW.TMP_FATURAMENTO
				WHERE MONTH(DATA_REFERENCIA) = MONTH(A.DATA_REFERENCIA)
				AND YEAR(DATA_REFERENCIA) = YEAR(A.DATA_REFERENCIA) )

-- ATUALIZAR AGRUPAMENTOS DE PRODUTO
UPDATE STAGE.VAGAS_DW.TMP_FATURAMENTO SET GRUPO_I = B.GRUPO_I,
									GRUPO_II = B.GRUPO_II
FROM STAGE.VAGAS_DW.TMP_FATURAMENTO A
INNER JOIN VAGAS_DW.GRUPO_PRODUTOS_ERP B ON B.PRODUTO = A.PRODUTO

-- CARREGAR CUBO
INSERT INTO VAGAS_DW.FATURAMENTO (NUM_PEDIDO,COD_CLI_CRM,COD_CLI,CLIENTE,PRODUTO,DATA_EMISSAO,DATA_REFERENCIA,VALOR,
DATA_INICIO_VIGENCIA,DATA_FIM_VIGENCIA,GRUPO_I,GRUPO_II,FLAG_IMPORTACAO, AVISO_PREVIO)
SELECT * FROM STAGE.VAGAS_DW.TMP_FATURAMENTO

-- expurgar datas de referencia antigas (deixar apenas a �lt. de cada mes)
DELETE VAGAS_DW.FATURAMENTO 
FROM VAGAS_DW.FATURAMENTO A
WHERE DATA_REFERENCIA <> ( SELECT MAX(DATA_REFERENCIA)
						  FROM VAGAS_DW.FATURAMENTO
						  WHERE YEAR(DATA_REFERENCIA) = YEAR(A.DATA_REFERENCIA)
						  AND MONTH(DATA_REFERENCIA) = MONTH(A.DATA_REFERENCIA) )
AND ISNULL(FLAG_IMPORTACAO,0) = 0 -- Apenas registros que n�o tenha sido importados do sistema anterior ao ERP

DECLARE @ULT_DATA_REFERENCIA SMALLDATETIME

SELECT @ULT_DATA_REFERENCIA = MAX(DATA_REFERENCIA)
FROM VAGAS_DW.FATURAMENTO 
WHERE ISNULL(FLAG_IMPORTACAO,0) = 0 

-- MARCAR EXIBI��O PADR�O
UPDATE VAGAS_DW.FATURAMENTO SET FLAG_EXIBICAO_PADRAO = 1
FROM VAGAS_DW.FATURAMENTO 
WHERE DATA_REFERENCIA <= @ULT_DATA_REFERENCIA

-- DESMARCAR DATAS QUE FORAM IMPORTADAS PARA DATA FUTURAS (pedidos anteriores � entrada do ERP)
UPDATE VAGAS_DW.FATURAMENTO SET FLAG_EXIBICAO_PADRAO = 0
FROM VAGAS_DW.FATURAMENTO 
WHERE DATA_REFERENCIA > @ULT_DATA_REFERENCIA
AND ISNULL(FLAG_IMPORTACAO,0) = 1

-- CONGELAR MERCADO DE ACORDO COM O LOG DE ALTERACOES DO CRM
UPDATE VAGAS_DW.FATURAMENTO SET MERCADO_FATURADO = B.VALOR_ATUALIZADO
FROM VAGAS_DW.FATURAMENTO A
OUTER APPLY ( SELECT TOP 1 * 
              FROM VAGAS_DW.ALTERACOES_MERCADO
              WHERE CONTA_ID = A.COD_CLI_CRM
              AND DATA_ALTERACAO <= A.DATA_EMISSAO
              ORDER BY DATA_ALTERACAO DESC) B
WHERE A.DATA_EMISSAO >= '20170401' -- INICIO DAS SEGMENTACOES DE MERCADO
AND A.MERCADO_FATURADO IS NULL

-- EMPRESAS SEM REGISTRO DE ALTERACAO CONSIDERAMOS O ATUAL
UPDATE VAGAS_DW.FATURAMENTO SET MERCADO_FATURADO = B.MERCADO
FROM VAGAS_DW.FATURAMENTO A
INNER JOIN VAGAS_DW.CLIENTES B ON B.CONTA_ID = A.COD_CLI_CRM
WHERE A.DATA_EMISSAO >= '20170401' -- INICIO DAS SEGMENTACOES DE MERCADO
AND A.MERCADO_FATURADO IS NULL
AND NOT EXISTS ( SELECT * 
                 FROM VAGAS_DW.ALTERACOES_MERCADO
                 WHERE CONTA_ID = A.COD_CLI_CRM) 


-- Ajustes pontuais do financeiro
EXEC VAGAS_DW.SPR_OLAP_Carga_Faturamento_Ajustes_Pontuais

 --Limpeza do GR_FATURADO
 --UPDATE	[VAGAS_DW].[FATURAMENTO]
 --SET		GR_FATURADO = NULL ;
------------------------------------------------------
-- Atualizacao do GR_FATURADO na visão de FATURAMENTO:
------------------------------------------------------
UPDATE	[VAGAS_DW].[FATURAMENTO]
SET		GR_FATURADO = (SELECT	TOP 1 ISNULL(A1.VALOR_ATUALIZACAO, '') AS VALOR_ATUALIZACAO
					   FROM		[VAGAS_DW].[ALTERACOES_GR] AS A1
					   WHERE	A.COD_CLI_CRM = A1.CONTA_ID COLLATE SQL_Latin1_General_CP1_CI_AI
								AND A.DATA_EMISSAO >= A1.DATA_ALTERACAO_ANTERIOR AND A.DATA_EMISSAO < A1.DATA_ALTERACAO_ATUALIZADO
					   ORDER BY DATA_ALTERACAO_ATUALIZADO DESC)
FROM	[VAGAS_DW].[FATURAMENTO] AS A
WHERE	A.GR_FATURADO IS NULL
		AND EXISTS (SELECT	1
					FROM	[VAGAS_DW].[ALTERACOES_GR] AS A1
					WHERE	A.COD_CLI_CRM = A1.CONTA_ID COLLATE SQL_Latin1_General_CP1_CI_AI) ;


-------------------------------------------------------------------------
-- Atualizacao do GR, para contas que não existem na visão de LOG do CRM:
-------------------------------------------------------------------------
UPDATE	[VAGAS_DW].[FATURAMENTO]
SET		GR_FATURADO = (SELECT	ISNULL(SUBQUERY.PROPRIETARIO_CONTA, '') AS PROPRIETARIO_CONTA
					   FROM	(SELECT	A1.CONTA_ID ,
									ISNULL(A1.PROPRIETARIO_CONTA, '') AS PROPRIETARIO_CONTA
							 FROM	[VAGAS_DW].[CONTAS_CRM] AS A1
							 UNION ALL
							 SELECT	A2.CONTA_ID ,
									ISNULL(A2.PROPRIETARIO_CONTA, '') AS PROPRIETARIO_CONTA
							 FROM	[VAGAS_DW].[CONTAS_MEMBRO_CRM] AS A2) AS SUBQUERY
					   WHERE	A.COD_CLI_CRM = SUBQUERY.CONTA_ID COLLATE SQL_Latin1_General_CP1_CI_AI)
FROM	[VAGAS_DW].[FATURAMENTO] AS A
WHERE	NOT EXISTS (SELECT	1
					 FROM	[VAGAS_DW].[ALTERACOES_GR] AS A1
					 WHERE	A.COD_CLI_CRM = A1.CONTA_ID COLLATE SQL_Latin1_General_CP1_CI_AI)
		AND A.GR_FATURADO IS NULL ;


---------------------------------------------------------
-- Atualizacao do GR, para contas que não existem no CRM:
---------------------------------------------------------
UPDATE	[VAGAS_DW].[FATURAMENTO]
SET		GR_FATURADO = ''
FROM	[VAGAS_DW].[FATURAMENTO] AS A
WHERE	NOT EXISTS (SELECT	1
					FROM	(SELECT	A1.CONTA_ID
							 FROM	[VAGAS_DW].[CONTAS_CRM] AS A1
							 UNION ALL
							 SELECT	A1.CONTA_ID
							 FROM	[VAGAS_DW].[CONTAS_MEMBRO_CRM] AS A1) AS SUBQUERY
					WHERE	A.COD_CLI_CRM = SUBQUERY.CONTA_ID)
		AND GR_FATURADO IS NULL ;


------------------------------------------------------------
-- Atualização do GR, para registros com COD_CLI_CRM = '-1':
------------------------------------------------------------
UPDATE	[VAGAS_DW].[FATURAMENTO]
SET		GR_FATURADO = ''
FROM	[VAGAS_DW].[FATURAMENTO] AS A
WHERE	A.COD_CLI_CRM = '-1' 
		AND A.GR_FATURADO IS NULL ;

--------------------------------------------------
-- Atualização do GR_ATUAL no CUBO de FATURAMENTO:
--------------------------------------------------
UPDATE	[VAGAS_DW].[FATURAMENTO]
SET		GR_ATUAL = (SELECT	SUBQUERY.GR
					FROM	(SELECT	A1.CONTA_ID ,
									ISNULL(A1.PROPRIETARIO_CONTA, '') AS GR
							 FROM	[VAGAS_DW].[CONTAS_CRM] AS A1
							 UNION ALL
							 SELECT	A1.CONTA_ID ,
									ISNULL(A1.PROPRIETARIO_CONTA, '') AS GR
							 FROM	[VAGAS_DW].[CONTAS_MEMBRO_CRM] AS A1) AS SUBQUERY
					WHERE	A.COD_CLI_CRM = SUBQUERY.CONTA_ID)
FROM	[VAGAS_DW].[FATURAMENTO] AS A ;


------------------------------------
-- MERCADO_FATURADO - VAGAS FIT LIC:
------------------------------------
-- DROP TABLE #TMP_OCORRENCIAS_ALTERACOES_MERCADO ;
SELECT	A.CONTA_ID ,
		COUNT(*) AS QTD_OCORRENCIAS
INTO	#TMP_OCORRENCIAS_ALTERACOES_MERCADO
FROM	[VAGAS_DW].[ALTERACOES_MERCADO] AS A
WHERE	EXISTS (SELECT	1
				FROM	[VAGAS_DW].[FATURAMENTO] AS A1
				WHERE	A1.PRODUTO = 'VAGAS FIT LIC'
						AND A1.MERCADO_FATURADO IS NULL
						AND A1.DATA_EMISSAO >= '20170401'
						AND A.CONTA_ID = A1.COD_CLI_CRM ) 
GROUP BY
		A.CONTA_ID
HAVING COUNT(*) = 1 ;



UPDATE	[VAGAS_DW].[FATURAMENTO]
SET		MERCADO_FATURADO = B.VALOR_ATUALIZADO
FROM	[VAGAS_DW].[FATURAMENTO] AS A		CROSS APPLY (SELECT	A1.VALOR_ATUALIZADO ,
																A1.DATA_ALTERACAO
														 FROM	[VAGAS_DW].[ALTERACOES_MERCADO] AS A1	INNER JOIN #TMP_OCORRENCIAS_ALTERACOES_MERCADO AS A2 ON A1.CONTA_ID = A2.CONTA_ID
														 WHERE	A.COD_CLI_CRM = A1.CONTA_ID) AS B
WHERE	A.PRODUTO = 'VAGAS FIT LIC'
		AND A.DATA_EMISSAO >= '20170401'
		AND A.MERCADO_FATURADO IS NULL
		AND EXISTS (SELECT	1
					FROM	[VAGAS_DW].[ALTERACOES_MERCADO] AS A1
					WHERE	A.COD_CLI_CRM = A1.CONTA_ID)
		AND B.DATA_ALTERACAO > A.DATA_EMISSAO ;


----------------------------------
-- MERCADO FATURADO: VAGAS FIT EI:
----------------------------------
UPDATE	[VAGAS_DW].[FATURAMENTO]
SET		MERCADO_FATURADO = B.VALOR_ATUALIZADO
FROM	[VAGAS_DW].[FATURAMENTO] AS A			CROSS APPLY (SELECT	TOP 1 A1.DATA_ALTERACAO ,
																	  A1.VALOR_ATUALIZADO
														 FROM	[VAGAS_DW].[ALTERACOES_MERCADO] AS A1
														 WHERE	A.COD_CLI_CRM = A1.CONTA_ID
														 ORDER BY
																A1.DATA_ALTERACAO DESC) AS B
WHERE	A.PRODUTO = 'VAGAS FIT EI'
		AND A.MERCADO_FATURADO IS NULL
		AND A.DATA_EMISSAO >= '20170401'
		AND EXISTS (SELECT	1
					FROM	[VAGAS_DW].[ALTERACOES_MERCADO] AS A1
					WHERE	A.COD_CLI_CRM = A1.CONTA_ID)
		AND B.DATA_ALTERACAO > A.DATA_EMISSAO ;


-----------------------------------------------------------------------------------
-- EMPRESAS COM O MERCADO_FATURADO NULL, CONSIDERAR O ÚLTIMO REGISTRO DE ALTERAÇÃO:
-----------------------------------------------------------------------------------
UPDATE	[VAGAS_DW].[FATURAMENTO]
SET		MERCADO_FATURADO = B.VALOR_ATUALIZADO
FROM	[VAGAS_DW].[FATURAMENTO] AS A	CROSS APPLY (SELECT	TOP 1 A1.DATA_ALTERACAO ,
																  A1.VALOR_ATUALIZADO
													 FROM	[VAGAS_DW].[ALTERACOES_MERCADO] AS A1
													 WHERE	A.COD_CLI_CRM = A1.CONTA_ID
													 ORDER BY
															A1.DATA_ALTERACAO DESC) AS B
										INNER JOIN [VAGAS_DW].[CLIENTES] AS C ON A.COD_CLI_CRM = C.CONTA_ID
WHERE	A.MERCADO_FATURADO IS NULL
		AND A.DATA_EMISSAO >= '20170401'
		AND EXISTS (SELECT	1
					FROM	[VAGAS_DW].[ALTERACOES_MERCADO] AS A1
					WHERE	A.COD_CLI_CRM = A1.CONTA_ID)
		AND B.DATA_ALTERACAO > A.DATA_EMISSAO
		AND B.VALOR_ATUALIZADO = C.MERCADO ;


--------------------------------------------------------------------------------------------------------------------------------------------
-- EMPRESAS COM O MERCADO_FATURADO NULL, QUE NÃO EXISTEM NA ALTERACOES_MERCADO, MAS QUE POSSUEM O MERCADO CLASSIFICADO NA VISÃO DE CLIENTES:
--------------------------------------------------------------------------------------------------------------------------------------------
UPDATE	[VAGAS_DW].[FATURAMENTO]
SET		MERCADO_FATURADO = B.MERCADO
FROM	[VAGAS_DW].[FATURAMENTO] AS A	INNER JOIN [VAGAS_DW].[CLIENTES] AS B ON A.COD_CLI_CRM = B.CONTA_ID
WHERE	A.MERCADO_FATURADO IS NULL
		AND A.DATA_EMISSAO >= '20170401'
		AND NOT EXISTS (SELECT	1
						FROM	[VAGAS_DW].[ALTERACOES_MERCADO] AS A1
						WHERE	A.COD_CLI_CRM = A1.CONTA_ID)
		AND EXISTS (SELECT	1
					FROM	[VAGAS_DW].[CLIENTES] AS A1
					WHERE	A.COD_CLI_CRM = A1.CONTA_ID
							AND A1.MERCADO IS NOT NULL) ;