-- EXEC VAGAS_DW.SPR_OLAP_Carga_Controle_Vagas_DETALHE_RH
USE VAGAS_DW
GO

IF EXISTS ( SELECT * FROM SYS.OBJECTS WHERE NAME = 'SPR_OLAP_Carga_Controle_Vagas_DETALHE_RH' AND SCHEMA_NAME(SCHEMA_ID) = 'VAGAS_DW')
DROP PROCEDURE VAGAS_DW.SPR_OLAP_Carga_Controle_Vagas_DETALHE_RH
GO

-- =============================================
-- Author: Luiz Fernando Braz
-- Create date: 13/06/2017
-- Description: Procedure para alimentação do DW
-- =============================================
CREATE PROCEDURE VAGAS_DW.SPR_OLAP_Carga_Controle_Vagas_DETALHE_RH @DATA_REFERENCIA SMALLDATETIME = NULL

AS
SET NOCOUNT ON

	DECLARE @CMD VARCHAR(8000),@MSG VARCHAR(MAX)

	CREATE TABLE #TMP_LOG_ERRO (ID_LOG_ERRO SMALLINT IDENTITY PRIMARY KEY,
								ERRO VARCHAR(8000) )	

	-- Carregar tabela baseado na Planilha do Google Drive 
	SET @CMD = 'set PYTHONIOENCODING=cp437 & C:\Python27\python G:\Projetos\Scripts_Python\Exportacao_Arquivos_Google_Drive\LerPlanilhaGoogleDrive.py ' + 
				' "' + '209' + '" "TMP_CONTROLE_VAGAS_DETALHE_RH" "1"'

	INSERT INTO #TMP_LOG_ERRO (ERRO)
	EXEC MASTER.DBO.XP_CMDSHELL @CMD
	
	
	-- Tratar erros ocorridos na rotina do Python	
	IF EXISTS ( SELECT * FROM #TMP_LOG_ERRO WHERE CHARINDEX('ERROR_MESSAGE',ERRO) > 0 ) 
	BEGIN 
		SET @MSG = 'ERRO ocorrido na importação dos dados no ID_CONTROLE_SPREADSHEET : 181' 
		RAISERROR(@MSG , 16, 1) 
	END

	DROP TABLE #TMP_LOG_ERRO

	-- LIMPAR TABELA COM OS DETALHES DAS DESPESAS
	TRUNCATE TABLE VAGAS_DW.CONTROLE_VAGAS_DETALHE_RH
	
	-- INSERIR NA TABELA FATO
	INSERT INTO VAGAS_DW.CONTROLE_VAGAS_DETALHE_RH (NOME_VAGA,DESCRICAO_MOTIVO,NOME_EX_COLABORADOR,EQUIPE,PONTO_FOCAL,EMAIL_EQUIPE,BP,RH_RESPONSAVEL,
													TIPO_RECRUTAMENTO,ORIGEM_CANDIDATO,STATUS,FASE_ATUAL,COD_VAGA,
													DATA_DESLIGAMENTO_ANTERIOR,DATA_RECEBIMENTO_REQUISICAO,DATA_DIVULGACAO,
													DATA_SUSPENSAO,DATA_REABERTURA,DATA_FORUM,
													DATA_APRESENTACAO_PROPOSTA,DATA_ACEITE_PROPOSTA,DATA_ADMISSAO,
													NOME_CONTRATADO)
	SELECT UPPER([0]) AS NOME_VAGA,
		   UPPER([1]) AS DESCRICAO_MOTIVO,
		   CASE WHEN RTRIM(LTRIM([2])) = '' OR LEN([2]) < 3 THEN NULL ELSE UPPER([2]) END AS NOME_EX_COLABORADOR,
		   UPPER([3]) AS EQUIPE,
		   UPPER([4]) AS PONTO_FOCAL,
		   UPPER([5]) AS EMAIL_EQUIPE,
		   UPPER([6]) AS BP,
		   UPPER([7]) AS RH_RESPONSAVEL,
		   UPPER([8]) AS TIPO_RECRUTAMENTO,
		   CASE WHEN RTRIM(LTRIM([9])) = '' THEN NULL ELSE UPPER([9]) END AS ORIGEM_CANDIDATO,
		   UPPER([10]) AS STATUS,
		   CASE WHEN RTRIM(LTRIM([11])) = '' THEN NULL ELSE UPPER([11]) END AS FASE_ATUAL,
		   CASE WHEN ISNUMERIC(RTRIM(LTRIM(REPLACE(REPLACE(REPLACE([12],'v',''),CHAR(13),''),CHAR(10),'')))) = 1 THEN
					CASE WHEN RTRIM(LTRIM(REPLACE(REPLACE(REPLACE([12],'v',''),CHAR(13),''),CHAR(10),''))) = '' 
						 THEN NULL 
						  ELSE RTRIM(LTRIM(REPLACE(REPLACE(REPLACE([12],'v',''),CHAR(13),''),CHAR(10),''))) END 
				ELSE NULL 
			END AS COD_VAGA,
		   CASE WHEN CHARINDEX('/',[13]) > 0 THEN CONVERT(SMALLDATETIME,
											RIGHT([13],4) + -- ANO
										    RIGHT('00' + CONVERT(VARCHAR,REPLACE(CONVERT(VARCHAR,SUBSTRING([13],CHARINDEX('/',[13])+1,2)),'/','')),2) + -- MES
										    RIGHT('00' + CONVERT(VARCHAR,SUBSTRING([13],1,CHARINDEX('/',[13])-1)),2) -- DIA
											) -- DIA
			    ELSE NULL END AS DATA_DESLIGAMENTO_ANTERIOR,
		   CASE WHEN CHARINDEX('/',[14]) > 0 THEN CONVERT(SMALLDATETIME,
											RIGHT([14],4) + -- ANO
										    RIGHT('00' + CONVERT(VARCHAR,REPLACE(CONVERT(VARCHAR,SUBSTRING([14],CHARINDEX('/',[14])+1,2)),'/','')),2) + -- MES
										    RIGHT('00' + CONVERT(VARCHAR,SUBSTRING([14],1,CHARINDEX('/',[14])-1)),2) -- DIA
											) -- DIA
			    ELSE NULL END AS DATA_RECEBIMENTO_REQUISICAO,
		   CASE WHEN CHARINDEX('/',[15]) > 0 THEN CONVERT(SMALLDATETIME,
											RIGHT([15],4) + -- ANO
										    RIGHT('00' + CONVERT(VARCHAR,REPLACE(CONVERT(VARCHAR,SUBSTRING([15],CHARINDEX('/',[15])+1,2)),'/','')),2) + -- MES
										    RIGHT('00' + CONVERT(VARCHAR,SUBSTRING([15],1,CHARINDEX('/',[15])-1)),2) -- DIA
											) -- DIA
			    ELSE NULL END AS DATA_DIVULGACAO,
		   CASE WHEN CHARINDEX('/',[16]) > 0 THEN CONVERT(SMALLDATETIME,
											RIGHT([16],4) + -- ANO
										    RIGHT('00' + CONVERT(VARCHAR,REPLACE(CONVERT(VARCHAR,SUBSTRING([16],CHARINDEX('/',[16])+1,2)),'/','')),2) + -- MES
										    RIGHT('00' + CONVERT(VARCHAR,SUBSTRING([16],1,CHARINDEX('/',[16])-1)),2) -- DIA
											) -- DIA
			    ELSE NULL END AS DATA_SUSPENSAO,
		   CASE WHEN CHARINDEX('/',[17]) > 0 THEN CONVERT(SMALLDATETIME,
											RIGHT([17],4) + -- ANO
										    RIGHT('00' + CONVERT(VARCHAR,REPLACE(CONVERT(VARCHAR,SUBSTRING([17],CHARINDEX('/',[17])+1,2)),'/','')),2) + -- MES
										    RIGHT('00' + CONVERT(VARCHAR,SUBSTRING([17],1,CHARINDEX('/',[17])-1)),2) -- DIA
											) -- DIA
			    ELSE NULL END AS DATA_REABERTURA,
		   CASE WHEN CHARINDEX('/',[18]) > 0 THEN CONVERT(SMALLDATETIME,
											RIGHT([18],4) + -- ANO
										    RIGHT('00' + CONVERT(VARCHAR,REPLACE(CONVERT(VARCHAR,SUBSTRING([18],CHARINDEX('/',[18])+1,2)),'/','')),2) + -- MES
										    RIGHT('00' + CONVERT(VARCHAR,SUBSTRING([18],1,CHARINDEX('/',[18])-1)),2) -- DIA
											) -- DIA
			    ELSE NULL END AS DATA_FORUM,
		   CASE WHEN CHARINDEX('/',[19]) > 0 THEN CONVERT(SMALLDATETIME,
											RIGHT([19],4) + -- ANO
										    RIGHT('00' + CONVERT(VARCHAR,REPLACE(CONVERT(VARCHAR,SUBSTRING([19],CHARINDEX('/',[19])+1,2)),'/','')),2) + -- MES
										    RIGHT('00' + CONVERT(VARCHAR,SUBSTRING([19],1,CHARINDEX('/',[19])-1)),2) -- DIA
											) -- DIA
			    ELSE NULL END AS DATA_APRESENTACAO_PROPOSTA,
		   CASE WHEN CHARINDEX('/',[20]) > 0 THEN CONVERT(SMALLDATETIME,
											RIGHT([20],4) + -- ANO
										    RIGHT('00' + CONVERT(VARCHAR,REPLACE(CONVERT(VARCHAR,SUBSTRING([20],CHARINDEX('/',[20])+1,2)),'/','')),2) + -- MES
										    RIGHT('00' + CONVERT(VARCHAR,SUBSTRING([20],1,CHARINDEX('/',[20])-1)),2) -- DIA
											) -- DIA
			    ELSE NULL END AS DATA_ACEITE_PROPOSTA,
		   CASE WHEN CHARINDEX('/',[21]) > 0 THEN CONVERT(SMALLDATETIME,
											RIGHT([21],4) + -- ANO
										    RIGHT('00' + CONVERT(VARCHAR,REPLACE(CONVERT(VARCHAR,SUBSTRING([21],CHARINDEX('/',[21])+1,2)),'/','')),2) + -- MES
										    RIGHT('00' + CONVERT(VARCHAR,SUBSTRING([21],1,CHARINDEX('/',[21])-1)),2) -- DIA
											) -- DIA
			    ELSE NULL END AS DATA_ADMISSAO,
		   CASE WHEN RTRIM(LTRIM([22])) = '' THEN NULL ELSE UPPER([22]) END AS NOME_CONTRATADO
	FROM VAGAS_DW.TMP_CONTROLE_VAGAS_DETALHE_RH
	WHERE [index] > 0	
