USE VAGAS_DW
GO

IF EXISTS ( SELECT * FROM SYS.OBJECTS WHERE NAME = 'SPR_OLAP_Carga_Agenda' AND SCHEMA_NAME(SCHEMA_ID) = 'VAGAS_DW')
DROP PROCEDURE VAGAS_DW.SPR_OLAP_Carga_Agenda
GO

-- =============================================
-- Author: Luiz Fernando Braz
-- Create date: 05/08/2016
-- Description: Procedure para carga das tabelas temporárias (BD Stage) para alimentação do DW
-- =============================================

CREATE PROCEDURE VAGAS_DW.SPR_OLAP_Carga_Agenda 
@NOME_AGENDA VARCHAR(150)

AS
SET NOCOUNT ON

-- Limpar dados da tabela fato
DELETE VAGAS_DW.AGENDA
FROM VAGAS_DW.AGENDA A 
WHERE EXISTS ( SELECT 1 FROM VAGAS_DW.TMP_AGENDA
				WHERE ID_AGENDA = A.ID_AGENDA
				AND NOME_AGENDA = @NOME_AGENDA)

-- ATUALIZAR HORAS GASTAS E O TIPO DA REUNIÃO
UPDATE VAGAS_DW.TMP_AGENDA SET QTD_HORAS = DATEDIFF(HOUR,DATA_INICIO,DATA_FIM),
							   TIPO_REUNIAO = CASE WHEN RESUMO LIKE '%Ciclo%' THEN 'Definição Marcos Estratégicos'
												   WHEN RESUMO LIKE '%Acordo%' THEN 'Acordo da VAGAS com a Equipe'
												   WHEN RESUMO LIKE '%Preparação%' THEN 'Preparação do Grupo VAGAS'
												   WHEN RESUMO LIKE '%Negociação%' THEN 'Negociação de Acordo + Marcos da VAGAS com a Equipe'
											  ELSE 'Outros' END
FROM VAGAS_DW.TMP_AGENDA
WHERE NOME_AGENDA = @NOME_AGENDA

-- ATUALIZAR NOME_EQUIPE_PARTICIPANTE E SALA_REUNIAO
UPDATE VAGAS_DW.TMP_AGENDA SET NOME_EQUIPE_PARTICIPANTE = B1.NOME,
							   SALA_REUNIAO = C.NOME_PARTICIPANTE
FROM VAGAS_DW.TMP_AGENDA A
INNER JOIN VAGAS_DW.TMP_AGENDA_PARTICIPANTES B ON B.ID_AGENDA = A.ID_AGENDA
INNER JOIN VAGAS_DW.EQUIPES B1 ON REPLACE(B1.EMAIL,'.br','') = REPLACE(B.EMAIL,'.br','')
OUTER APPLY ( SELECT TOP 1 * 
			  FROM VAGAS_DW.TMP_AGENDA_PARTICIPANTES
			  WHERE ID_AGENDA = A.ID_AGENDA
			  AND FLAG_RECURSO = 1 ) C


-- EQUIPES DE PREPARAÇÃO
UPDATE VAGAS_DW.TMP_AGENDA SET NOME_EQUIPE_PARTICIPANTE = B.NOME
FROM VAGAS_DW.TMP_AGENDA A
INNER JOIN VAGAS_DW.EQUIPES B ON B.CHAVE_EQUIPE = SUBSTRING(SUBSTRING(RESUMO,CHARINDEX('#',RESUMO),LEN(RESUMO)),1,CASE WHEN CHARINDEX(' ',SUBSTRING(RESUMO,CHARINDEX('#',RESUMO),LEN(RESUMO))) > 0
																			THEN CHARINDEX(' ',SUBSTRING(RESUMO,CHARINDEX('#',RESUMO),LEN(RESUMO)))
																			ELSE LEN(SUBSTRING(RESUMO,CHARINDEX('#',RESUMO),LEN(RESUMO))) END ) -- Tratamento do campo RESUMO para extração do #equipe..
WHERE TIPO_REUNIAO = 'Preparação do Grupo VAGAS' 

-- ATUALIZAR CICLO
UPDATE VAGAS_DW.TMP_AGENDA SET CICLO_ACORDO = CASE WHEN RIGHT(SUBSTRING(RESUMO,CHARINDEX('Ciclo',RESUMO),7),1) = 'I' THEN
											CASE WHEN CHARINDEX('II',RESUMO) > 0 THEN 'Ciclo 2'
												 ELSE 'Ciclo 1' END
									   ELSE SUBSTRING(RESUMO,CHARINDEX('Ciclo',RESUMO),7) END
FROM VAGAS_DW.TMP_AGENDA 
WHERE TIPO_REUNIAO = 'Definição Marcos Estratégicos' 
AND RESUMO LIKE '%Ciclo%'

INSERT INTO VAGAS_DW.AGENDA 
SELECT * FROM VAGAS_DW.TMP_AGENDA 
WHERE NOME_AGENDA = @NOME_AGENDA

-- LIMPAR DADOS JÁ CARREGADOS
DELETE FROM VAGAS_DW.TMP_AGENDA WHERE NOME_AGENDA = @NOME_AGENDA