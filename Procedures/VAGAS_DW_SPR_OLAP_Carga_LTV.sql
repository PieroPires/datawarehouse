-- EXEC VAGAS_DW.SPR_OLAP_Carga_LTV
USE VAGAS_DW
GO

IF EXISTS ( SELECT * FROM SYS.OBJECTS WHERE NAME = 'SPR_OLAP_Carga_LTV' AND SCHEMA_NAME(SCHEMA_ID) = 'VAGAS_DW')
DROP PROCEDURE VAGAS_DW.SPR_OLAP_Carga_LTV
GO

-- =============================================
-- Author: Luiz Fernando Braz
-- Create date: 17/04/2017
-- Description: Procedure para alimentação do DW
-- =============================================
CREATE PROCEDURE VAGAS_DW.SPR_OLAP_Carga_LTV @DATA_REFERENCIA SMALLDATETIME = NULL

AS
SET NOCOUNT ON

IF @DATA_REFERENCIA IS NULL
	SET @DATA_REFERENCIA = CONVERT(SMALLDATETIME,CONVERT(VARCHAR,GETDATE(),112))

-- AJUSTE CARGA RETROATIVA (CONSIDERAR SEMPRE ULTIMO DIA DO MES REFERENCIA)
IF DAY(@DATA_REFERENCIA) = 1
	SELECT @DATA_REFERENCIA = DATEADD(MONTH,1,@DATA_REFERENCIA)-1

CREATE TABLE #TMP_CLIENTES (COD_CLI INT,CONTA_ID VARCHAR(255) COLLATE SQL_Latin1_General_CP1_CI_AI,CLIENTE_CRM VARCHAR(200) COLLATE SQL_Latin1_General_CP1_CI_AI,
							DATA_PRM_OPORTUNIDADE SMALLDATETIME,EX_CLIENTE BIT,DATA_RESCISAO SMALLDATETIME,VALOR_MENSALIDADE MONEY)

CREATE TABLE #TMP_CLIENTES_ATIVOS (COD_CLI INT,CONTA_ID VARCHAR(255) COLLATE SQL_Latin1_General_CP1_CI_AI,CLIENTE_CRM VARCHAR(200) COLLATE SQL_Latin1_General_CP1_CI_AI,
								   DATA_PRM_OPORTUNIDADE SMALLDATETIME,EX_CLIENTE BIT,DATA_RESCISAO SMALLDATETIME,VALOR_MENSALIDADE MONEY,
								   TEMPO_MESES_MERCADO SMALLINT,LTV_MERCADO MONEY,MERCADO VARCHAR(25) COLLATE SQL_Latin1_General_CP1_CI_AI,
								   TEMPO_MESES SMALLINT, LTV MONEY, CLUSTER VARCHAR(25) COLLATE SQL_Latin1_General_CP1_CI_AI )
								   
INSERT INTO #TMP_CLIENTES (COD_CLI,CONTA_ID,CLIENTE_CRM,DATA_PRM_OPORTUNIDADE,EX_CLIENTE,DATA_RESCISAO,VALOR_MENSALIDADE)
SELECT A.COD_CLI,
	   A.CONTA_ID,
	   A.CLIENTE_CRM,
	   B.DATAFECHAMENTO AS DATA_PRM_OPORTUNIDADE,
	   A.EX_CLIENTE,
	   CASE WHEN C.DATA_RESCISAO < B.DATAFECHAMENTO THEN NULL
			ELSE C.DATA_RESCISAO END AS DATA_RESCISAO,
	   B.VALOR_MENSALIDADE
FROM VAGAS_DW.CLIENTES A
OUTER APPLY ( SELECT MAX(DATAFECHAMENTO) AS DATAFECHAMENTO, 
					 AVG(ValorProduto)  AS VALOR_MENSALIDADE
			  FROM VAGAS_DW.OPORTUNIDADES
			  WHERE CONTAID = A.CONTA_ID
			  AND PRODUTO = 'FIT'
			  AND FASE = 'fechado_e_ganho'
			  AND OPORTUNIDADECATEGORIA <> 'rescisao'
			  AND DATAFECHAMENTO <= @DATA_REFERENCIA ) B
OUTER APPLY ( SELECT MAX(DATAFECHAMENTO) AS DATA_RESCISAO
			  FROM VAGAS_DW.OPORTUNIDADES
			  WHERE CONTAID = A.CONTA_ID
			  AND OPORTUNIDADECATEGORIA = 'rescisao'
			  AND FASE = 'fechado_e_ganho'
			  AND DATAFECHAMENTO <= @DATA_REFERENCIA ) C				
WHERE A.DATA_REFERENCIA = ( SELECT MAX(DATA_REFERENCIA) FROM VAGAS_DW.CLIENTES )
AND A.CONTEM_FIT = 1
ORDER BY 1 DESC

-- ATUALIZAR COMO 12 MESES CLIENTES SEM DATA RESCISÃO
--UPDATE #TMP_CLIENTES SET DATA_RESCISAO = DATEADD(MONTH,12,DATA_PRM_OPORTUNIDADE)
--FROM #TMP_CLIENTES 
--WHERE EX_CLIENTE = 1 
--AND DATA_RESCISAO IS NULL

INSERT INTO #TMP_CLIENTES_ATIVOS (COD_CLI,CONTA_ID,CLIENTE_CRM,DATA_PRM_OPORTUNIDADE,EX_CLIENTE,DATA_RESCISAO,VALOR_MENSALIDADE)
SELECT * 
FROM #TMP_CLIENTES 
WHERE DATEADD(DAY,1,@DATA_REFERENCIA) BETWEEN DATA_PRM_OPORTUNIDADE AND ISNULL(DATA_RESCISAO,DATEADD(DAY,1,@DATA_REFERENCIA)) -- APENAS CLIENTES ATIVOS NA DATA REFERENCIA
ORDER BY DATA_RESCISAO DESC
					  
-- ATUALIZAR TEMPO EM MESES POR MERCADO
UPDATE	#TMP_CLIENTES_ATIVOS 
SET		TEMPO_MESES_MERCADO = 
						(SELECT	DATEDIFF(MONTH ,	
							CASE
								WHEN SUBQUERY.POSSUI_DATA_RESCISAO = 1 AND SUBQUERY.DATA_RESCISAO IS NOT NULL 
									THEN SUBQUERY.MENOR_DATA_OPORTUNIDADE_POSTERIOR_RESCISAO
								WHEN SUBQUERY.MENOR_DATA_PRM_OPORTUNIDADE <= DATA_PRM_OPORTUNIDADE 
									THEN MENOR_DATA_PRM_OPORTUNIDADE 
							END , DATA_REFERENCIA) AS TEMPO_MESES_CORRETO
						FROM	(
						SELECT	A.CONTA_ID ,
								@DATA_REFERENCIA AS DATA_REFERENCIA ,
								C.DATA_PRM_OPORTUNIDADE ,
								D.DATA_RESCISAO ,
								CASE 
									WHEN C.DATA_PRM_OPORTUNIDADE > D.DATA_RESCISAO 
										THEN 1 
									ELSE 0 
								END AS POSSUI_DATA_RESCISAO ,
								IIF(E.MENOR_DATA_PRM_OPORTUNIDADE > DATA_VENCIMENTO, DATA_VENCIMENTO, E.MENOR_DATA_PRM_OPORTUNIDADE) AS MENOR_DATA_PRM_OPORTUNIDADE ,
								H.MENOR_DATA_OPORTUNIDADE_POSTERIOR_RESCISAO
						FROM	#TMP_CLIENTES_ATIVOS AS A	OUTER APPLY (SELECT	MIN(A1.DATA_VENCIMENTO) AS DATA_VENCIMENTO
																		 FROM	[VAGAS_DW].[FATURAS] AS A1
																		 WHERE	A.CONTA_ID = A1.COD_CLI_CRM) AS B

															OUTER APPLY (SELECT	MAX(A1.DATAFECHAMENTO) AS DATA_PRM_OPORTUNIDADE
																		 FROM	[VAGAS_DW].[OPORTUNIDADES] AS A1
																		 WHERE	A.CONTA_ID = A1.CONTAID
																				AND A1.PRODUTO = 'FIT'
																				AND A1.FASE = 'fechado_e_ganho'
																				AND A1.OPORTUNIDADECATEGORIA != 'rescisao'
																				AND A1.DATAFECHAMENTO <= @DATA_REFERENCIA) AS C

															OUTER APPLY (SELECT	MAX(A1.DATAFECHAMENTO) AS DATA_RESCISAO
																		 FROM	[VAGAS_DW].[OPORTUNIDADES] AS A1
																		 WHERE	A.CONTA_ID = A1.CONTAID
																				AND A1.FASE = 'fechado_e_ganho'
																				AND A1.OPORTUNIDADECATEGORIA = 'rescisao'
																				AND A1.DATAFECHAMENTO <= @DATA_REFERENCIA) AS D

															OUTER APPLY (SELECT	MIN(A1.DATAFECHAMENTO) AS MENOR_DATA_PRM_OPORTUNIDADE
																		 FROM	[VAGAS_DW].[OPORTUNIDADES] AS A1
																		 WHERE	A.CONTA_ID = A1.CONTAID
																				AND A1.FASE = 'fechado_e_ganho'
																				AND A1.OPORTUNIDADECATEGORIA != 'rescisao'
																				AND A1.PRODUTO = 'FIT') AS E

																OUTER APPLY (SELECT	MIN(A1.DATAFECHAMENTO) AS MENOR_DATA_OPORTUNIDADE_POSTERIOR_RESCISAO
																			 FROM	[VAGAS_DW].[OPORTUNIDADES] AS A1
																			 WHERE	A.CONTA_ID = A1.CONTAID
																					AND A1.FASE = 'fechado_e_ganho'
																					AND A1.OPORTUNIDADECATEGORIA != 'rescisao'
																					AND A1.PRODUTO = 'FIT'
																					AND A1.DATAFECHAMENTO >= D.DATA_RESCISAO) AS H
							WHERE	TMP.CONTA_ID = A.CONTA_ID) AS SUBQUERY)
FROM	#TMP_CLIENTES_ATIVOS AS	TMP ;

-- GERAR MEDIA POR MERCADO
SELECT ISNULL(B.MERCADO, 'SEM MERCADO') COLLATE SQL_Latin1_General_CP1_CI_AI AS MERCADO,
	   AVG(TEMPO_MESES_MERCADO) AS MEDIA_TEMPO_MESES_MERCADO
INTO #TMP_MEDIA_TEMPO_MESES_MERCADO
FROM #TMP_CLIENTES_ATIVOS A
INNER JOIN [VAGAS_DW].[CLIENTES] B ON B.COD_CLI = A.COD_CLI
GROUP BY ALL ISNULL(B.MERCADO, 'SEM MERCADO')

-- ATUALIZAR MERCADO
UPDATE	#TMP_CLIENTES_ATIVOS SET MERCADO = C.MERCADO
FROM	#TMP_CLIENTES_ATIVOS A		LEFT OUTER JOIN VAGAS_DW.CLIENTES B ON B.COD_CLI = A.COD_CLI
									LEFT OUTER JOIN #TMP_MEDIA_TEMPO_MESES_MERCADO C ON C.MERCADO = ISNULL(B.MERCADO, 'SEM MERCADO')

-- ATUALIZAR LTV MERCADO
UPDATE #TMP_CLIENTES_ATIVOS SET LTV_MERCADO = A.VALOR_MENSALIDADE * B.MEDIA_TEMPO_MESES_MERCADO
FROM #TMP_CLIENTES_ATIVOS A
LEFT OUTER JOIN #TMP_MEDIA_TEMPO_MESES_MERCADO B ON B.MERCADO = A.MERCADO

-- CÁLCULO ANTIGO TEMPO_MESES P/ CAMPO CLUSTER
-- CORREÇÃO DE CLIENTES QUE POSSUEM PRIMERA FATURA MENOR QUE A PRIMEIRA
UPDATE #TMP_CLIENTES_ATIVOS SET DATA_PRM_OPORTUNIDADE = ( SELECT MIN(DATA_VENCIMENTO) 
						  FROM VAGAS_DW.FATURAS
						  WHERE COD_CLI_CRM = A.CONTA_ID )
FROM #TMP_CLIENTES_ATIVOS A
WHERE DATA_PRM_OPORTUNIDADE > ( SELECT MIN(DATA_VENCIMENTO) 
						  FROM VAGAS_DW.FATURAS
						  WHERE COD_CLI_CRM = A.CONTA_ID ) 
						  
-- ATUALIZAR TEMPO EM MESES
UPDATE #TMP_CLIENTES_ATIVOS SET TEMPO_MESES = DATEDIFF(MONTH,DATA_PRM_OPORTUNIDADE,@DATA_REFERENCIA)
FROM #TMP_CLIENTES_ATIVOS 

-- GERAR MEDIA POR CLUSTER
SELECT B.CLUSTER COLLATE SQL_Latin1_General_CP1_CI_AI AS CLUSTER,
	   AVG(TEMPO_MESES) AS MEDIA_TEMPO_MESES
INTO #TMP_MEDIA_TEMPO_MESES
FROM #TMP_CLIENTES_ATIVOS A
INNER JOIN VAGAS_DW.CLUSTER_CLIENTES B ON B.COD_CLI = A.COD_CLI
GROUP BY B.CLUSTER

-- ATUALIZAR CLUSTER
UPDATE #TMP_CLIENTES_ATIVOS SET CLUSTER = CASE WHEN C.CLUSTER IS NULL 
											THEN CASE WHEN ISNULL(A.VALOR_MENSALIDADE,0) >= 2200  -- NORMALIZAR CASOS SEM CLUSTER
													  THEN 'SUPERA'
													  ELSE 'SIMPLIFICA'
												  END
											ELSE C.CLUSTER END 
FROM #TMP_CLIENTES_ATIVOS A
LEFT OUTER JOIN VAGAS_DW.CLUSTER_CLIENTES B ON B.COD_CLI = A.COD_CLI
LEFT OUTER JOIN #TMP_MEDIA_TEMPO_MESES C ON C.CLUSTER = B.CLUSTER

-- ATUALIZAR LTV
UPDATE #TMP_CLIENTES_ATIVOS SET LTV = A.VALOR_MENSALIDADE * B.MEDIA_TEMPO_MESES
FROM #TMP_CLIENTES_ATIVOS A
LEFT OUTER JOIN #TMP_MEDIA_TEMPO_MESES B ON B.CLUSTER = A.CLUSTER


-- LIMPAR DADOS EXISTENTES PARA A DATA REFERENCIA DO MÊS (MANTER SEMPRE APENAS UMA DATA REF. POR MÊS)
DELETE FROM VAGAS_DW.LTV WHERE MONTH(DATA_REFERENCIA) = MONTH(@DATA_REFERENCIA) AND YEAR(DATA_REFERENCIA) = YEAR(@DATA_REFERENCIA)

-- INSERIR DADOS NA TABELA FATO
INSERT INTO VAGAS_DW.LTV (DATA_REFERENCIA,COD_CLI,CONTA_ID,CLIENTE,TEMPO_MESES_MERCADO,LTV_MERCADO,VALOR_MENSALIDADE,MERCADO, TEMPO_MESES, LTV, CLUSTER)
SELECT @DATA_REFERENCIA, 
	   COD_CLI,
	   CONTA_ID,
	   CLIENTE_CRM AS CLIENTE,
	   TEMPO_MESES_MERCADO,
	   LTV_MERCADO * 0.8 AS LTV_MERCADO,
	   VALOR_MENSALIDADE,
	   MERCADO ,
	   TEMPO_MESES ,
	   LTV * 0.8 AS LTV ,
	   CLUSTER
FROM #TMP_CLIENTES_ATIVOS

-- CONGELAMENTO DA MEDIA_TEMPO_MESES por CLUSTER:
DELETE	FROM [VAGAS_DW].[MEDIA_TEMPO_MESES_CLUSTER]
FROM	[VAGAS_DW].[MEDIA_TEMPO_MESES_CLUSTER] AS A
WHERE	A.DATA_REFERENCIA = @DATA_REFERENCIA
		OR (DATEPART(YEAR, A.DATA_REFERENCIA) = DATEPART(YEAR, @DATA_REFERENCIA)
		    AND DATEPART(MONTH, A.DATA_REFERENCIA) = DATEPART(MONTH, @DATA_REFERENCIA)) ;

INSERT INTO [VAGAS_DW].[MEDIA_TEMPO_MESES_CLUSTER]
SELECT	@DATA_REFERENCIA ,
		A.CLUSTER ,
		A.MEDIA_TEMPO_MESES
FROM	#TMP_MEDIA_TEMPO_MESES AS A ;

-- CONGELAMENTO DA MEDIA_TEMPO_MESES_MERCADO por MERCADO:
DELETE	FROM [VAGAS_DW].[MEDIA_TEMPO_MESES_MERCADO]
FROM	[VAGAS_DW].[MEDIA_TEMPO_MESES_MERCADO] AS A
WHERE	A.DATA_REFERENCIA = @DATA_REFERENCIA
		OR (DATEPART(YEAR, A.DATA_REFERENCIA) = DATEPART(YEAR, @DATA_REFERENCIA)
		    AND DATEPART(MONTH, A.DATA_REFERENCIA) = DATEPART(MONTH, @DATA_REFERENCIA)) ;

INSERT INTO	[VAGAS_DW].[MEDIA_TEMPO_MESES_MERCADO]
SELECT	@DATA_REFERENCIA ,
		A.MERCADO ,
		A.MEDIA_TEMPO_MESES_MERCADO
FROM	#TMP_MEDIA_TEMPO_MESES_MERCADO AS A ;



DROP TABLE #TMP_CLIENTES
DROP TABLE #TMP_CLIENTES_ATIVOS
DROP TABLE #TMP_MEDIA_TEMPO_MESES
DROP TABLE #TMP_MEDIA_TEMPO_MESES_MERCADO

GO