USE VAGAS_DW
GO

-- EXEC VAGAS_DW.SPR_TAIL_Carga_Enriquecimento
IF EXISTS ( SELECT * FROM SYS.OBJECTS WHERE NAME = 'SPR_TAIL_Carga_Enriquecimento' AND SCHEMA_NAME(SCHEMA_ID) = 'VAGAS_DW')
DROP PROCEDURE VAGAS_DW.SPR_TAIL_Carga_Enriquecimento
GO

-- =============================================
-- Author: Luiz Fernando Braz
-- Create date: 09/08/2017
-- Description: Procedure para alimentação do perfil do candidato (é professor ? é engenheiro ?etc) para possibilitar "onboarding" dos dados
-- na DMP Tail (Publicidade)
-- =============================================

CREATE PROCEDURE VAGAS_DW.SPR_TAIL_Carga_Enriquecimento 

AS
SET NOCOUNT ON

-- limpar base atual
TRUNCATE TABLE VAGAS_DW.TAIL_COMPORTAMENTO

DECLARE @CMD VARCHAR(8000),
		@ID TINYINT,
		@CODIGO VARCHAR(100),
		@CAMPO VARCHAR(100),
		@CONTADOR TINYINT = 1

-- LOOP FOR EACH FIELD

SELECT TOP 1 @ID = ID, @CODIGO = CODIGO,@CAMPO = CAMPO
FROM VAGAS_DW.TAIL_CODIGO 
ORDER BY 1

WHILE @@ROWCOUNT > 0 
BEGIN
	
	WHILE @CONTADOR <= 9 -- AMOUNT OF FIELDs OF THE SAME CATEGORY (we dont collect data for the last field "10")
	BEGIN
		SET @CMD = ' SELECT HASH,' +
						  '''' + @CAMPO + ''' AS CAMPO,' +
			   ' REPLACE(REPLACE(REPLACE(LTRIM(RTRIM(m.n.value(''.[1]'',''varchar(8000)''))),CHAR(10),''''),CHAR(13),''''),CHAR(9),'''') AS CODIGO ' +
				'FROM ( ' +
						'SELECT A.[# HASH] AS HASH, ' + 
						'PROFILE' + CONVERT(VARCHAR,@CONTADOR) + '_' + @CODIGO + ',  ' +
						'CAST(''<XMLRoot><RowData>'' + REPLACE(REPLACE(REPLACE(PROFILE' + CONVERT(VARCHAR,@CONTADOR) + '_' + @CODIGO + ',''['',''''),'']'','''')' +
						','','',''</RowData><RowData>'') + ''</RowData></XMLRoot>'' AS XML) AS x ' +
						'FROM STAGE.VAGAS_DW.TMP_ARQUIVO_ENRIQUECIDO_TAIL A ' +
					  ') t ' +
				'CROSS APPLY x.nodes(''/XMLRoot/RowData'')m(n) ' +
				' WHERE PROFILE' + CONVERT(VARCHAR,@CONTADOR) + '_' + @CODIGO + ' <> '''''
		
		INSERT INTO VAGAS_DW.TAIL_COMPORTAMENTO (HASH,TIPO,CODIGO)
		EXEC(@CMD)
		--print @CMD
	
		SET @CONTADOR = @CONTADOR + 1
	END

SET @CONTADOR = 1 -- RESET TO FIELD 1

SELECT TOP 1 @ID = ID, @CODIGO = CODIGO,@CAMPO = CAMPO 
FROM VAGAS_DW.TAIL_CODIGO 
WHERE ID > @ID
ORDER BY 1

END

DECLARE @DATA_REFERENCIA SMALLDATETIME
SELECT @DATA_REFERENCIA = CONVERT(SMALLDATETIME,CONVERT(VARCHAR,GETDATE() - DAY(GETDATE()) + 1,112))

-- ATUALIZAR COD_CAND E DATA DE PROCESSAMENTO
UPDATE VAGAS_DW.TAIL_COMPORTAMENTO SET COD_CAND = B.COD_CAND,
									   DATA_REFERENCIA = @DATA_REFERENCIA 
FROM VAGAS_DW.TAIL_COMPORTAMENTO A
INNER JOIN VAGAS_DW.CANDIDATOS B ON B.HASH = A.HASH
AND B.FEZ_ACESSO_IRRESTRITO = 1

-- ATUALIZAR DESCRIÇÃO DO CÓDIGO
UPDATE VAGAS_DW.TAIL_COMPORTAMENTO SET DESCRICAO = B.DESCRICAO
FROM VAGAS_DW.TAIL_COMPORTAMENTO A
INNER JOIN VAGAS_DW.TAIL_CODIGO_DESCRICAO B ON B.CODIGO = A.CODIGO
										   AND B.TIPO = A.TIPO

-- LIMPAR REGISTROS SEM COD_CAND 
DELETE FROM VAGAS_DW.TAIL_COMPORTAMENTO WHERE COD_CAND IS NULL

-- CONGELAR NA BASE DE HISTÓRICO
DELETE FROM VAGAS_DW.HISTORICO_TAIL_COMPORTAMENTO WHERE DATA_REFERENCIA = @DATA_REFERENCIA

INSERT INTO VAGAS_DW.HISTORICO_TAIL_COMPORTAMENTO (HASH,CODIGO,TIPO,COD_CAND,DATA_REFERENCIA,DESCRICAO)
SELECT HASH,CODIGO,TIPO,COD_CAND,DATA_REFERENCIA,DESCRICAO FROM VAGAS_DW.TAIL_COMPORTAMENTO
