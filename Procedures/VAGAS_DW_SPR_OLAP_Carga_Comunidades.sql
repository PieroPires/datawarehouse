-- EXEC VAGAS_DW.SPR_OLAP_Carga_Comunidades
USE VAGAS_DW
GO

IF EXISTS ( SELECT * FROM SYS.OBJECTS WHERE NAME = 'SPR_OLAP_Carga_Comunidades' AND SCHEMA_NAME(SCHEMA_ID) = 'VAGAS_DW')
DROP PROCEDURE VAGAS_DW.SPR_OLAP_Carga_Comunidades
GO

-- =============================================
-- Author: Luiz Fernando Braz
-- Create date: 23/01/2017
-- Description: Procedure para alimentação do DW
-- =============================================
CREATE PROCEDURE VAGAS_DW.SPR_OLAP_Carga_Comunidades

AS
SET NOCOUNT ON

-- Limpar dados da tabela fato
DECLARE @DT_REFERENCIA SMALLDATETIME

SELECT @DT_REFERENCIA = MAX(DATA_REFERENCIA)
FROM VAGAS_DW.TMP_COMUNIDADES

DELETE VAGAS_DW.COMUNIDADES
FROM VAGAS_DW.COMUNIDADES A
WHERE DATA_REFERENCIA = @DT_REFERENCIA

-- Carregar Tabela Fato
INSERT INTO VAGAS_DW.COMUNIDADES
SELECT A.DATA_REFERENCIA,A.COD_DIV,A.NOME_DIVISAO,A.QTD_CAND_AUTORIZADOS,A.QTD_CAND_AGUARD_AUTORIZACAO,A.QTD_VAGAS,A.QTD_VAGAS_EMPRESAS_CLIENTES,
A.QTD_VAGAS_EMPRESAS_NAO_CLIENTES,B.SIGLA,B.STATUS,A.QTD_CV_CAPTADO_COMUNIDADE
FROM VAGAS_DW.TMP_COMUNIDADES A
LEFT OUTER JOIN VAGAS_DW.COMUNIDADES_STATUS B ON B.COD_DIV = A.COD_DIV

-- expurgar datas de referencia antigas (deixar apenas a últ. de cada mes)
DELETE VAGAS_DW.COMUNIDADES 
FROM VAGAS_DW.COMUNIDADES A
WHERE DATA_REFERENCIA <> ( SELECT MAX(DATA_REFERENCIA)
						  FROM VAGAS_DW.COMUNIDADES
						  WHERE YEAR(DATA_REFERENCIA) = YEAR(A.DATA_REFERENCIA)
						  AND MONTH(DATA_REFERENCIA) = MONTH(A.DATA_REFERENCIA) )

