USE VAGAS_DW
GO

IF EXISTS ( SELECT * FROM SYS.OBJECTS WHERE NAME = 'SPR_OLAP_Carga_OPORTUNIDADES' AND SCHEMA_NAME(SCHEMA_ID) = 'VAGAS_DW')
DROP PROCEDURE VAGAS_DW.SPR_OLAP_Carga_OPORTUNIDADES
GO

-- =============================================
-- Author: Luiz Fernando Braz
-- Create date: 29/09/2015
-- Description: Procedure para carga das tabelas temporárias (BD Stage) para alimentação do DW

-- Alterações
-- 17/06/2016
-- Adicionado atualização da coluna INDICE_IGPM para possibilitar cruzamento dos indicadores de renovação de contratos
-- =============================================

CREATE PROCEDURE VAGAS_DW.SPR_OLAP_Carga_OPORTUNIDADES 
AS
SET NOCOUNT ON

-- var Prod /  Contr% 
UPDATE VAGAS_DW.OPORTUNIDADES SET PRODUTO_GRUPO = B.GRUPO,PESO_GRUPO = B.PESO
FROM VAGAS_DW.OPORTUNIDADES A
INNER JOIN VAGAS_DW.GRUPO_PRODUTOS B ON B.PRODUTO = A.PRODUTO

-- var ÉFechGan 
UPDATE VAGAS_DW.OPORTUNIDADES SET FECHADO_GANHO = CASE WHEN Fase = 'fechado_e_ganho' AND PropostaPrincipal = 1 THEN 1 ELSE 0 END

-- var ÉFGFit  
UPDATE VAGAS_DW.OPORTUNIDADES SET FIT = CASE WHEN FECHADO_GANHO = 1 AND Produto = 'FIT' THEN 1 ELSE 0 END

-- var ÉFGRevFit 
UPDATE VAGAS_DW.OPORTUNIDADES SET REVISAO_FIT = CASE WHEN FIT = 1 AND OportunidadeCategoria IN ('renovacao','retencao','revisao_de_perfil') THEN 1 ELSE 0 END

-- var new ÉRev
UPDATE VAGAS_DW.OPORTUNIDADES SET REVISAO = 1 
WHERE OportunidadeCategoria IN ('renovacao','retencao','revisao_de_perfil','rescisao')

-- var Rec
UPDATE VAGAS_DW.OPORTUNIDADES SET RECORRENTE = CASE WHEN PRODUTO_RECORRENCIA = 'monthly' THEN 1 ELSE 0 END 

-- var  ValAntFit 
--UPDATE VAGAS_DW.OPORTUNIDADES SET ULTIMO_VALOR = ULT.ValorProdutoFINAL
--FROM VAGAS_DW.OPORTUNIDADES A
--OUTER APPLY ( SELECT TOP 1 * FROM VAGAS_DW.OPORTUNIDADES 
--			  WHERE FIT = 1
--			    AND PropostaPrincipal = 1
--				AND Conta = A.Conta
--				AND Fase = 'fechado_e_ganho'
--				AND (    ( DataFechamento < A.DataFechamento )
--					  OR ( DataFechamento = A.DataFechamento AND DataCriacao < A.DataCriacao ) )
--			  ORDER BY DataFechamento DESC,DataCriacao DESC) ULT
--WHERE A.FIT = 1

-- ALTERAÇÃO LUIZ (17/11/2015 - Ultimo Valor para qualquer produto recorrente)
UPDATE VAGAS_DW.OPORTUNIDADES SET ULTIMO_VALOR = ULT.ValorProdutoFINAL
FROM VAGAS_DW.OPORTUNIDADES A
OUTER APPLY ( SELECT TOP 1 * FROM VAGAS_DW.OPORTUNIDADES 
			  WHERE Produto = A.Produto
			    AND PropostaPrincipal = 1
				AND Conta = A.Conta
				AND RECORRENTE = 1
				AND Fase = 'fechado_e_ganho'
				AND (    ( DataFechamento < A.DataFechamento )
					  OR ( DataFechamento = A.DataFechamento AND DataCriacao < A.DataCriacao ) )
			  ORDER BY DataFechamento DESC,DataCriacao DESC) ULT
WHERE A.RECORRENTE = 1 -- apenas produtos recorrentes


-- var ÉRevFitRev 
--UPDATE VAGAS_DW.OPORTUNIDADES SET REVISAO_COM_VALOR_ANTERIOR = CASE WHEN REVISAO_FIT = 1 
																    --AND ULTIMO_VALOR IS NOT NULL AND ULTIMO_VALOR <> 0 THEN 1 ELSE 0 END 

-- ALTERAÇÃO LUIZ (17/11/2015 - marcar qualquer um com revisão)
UPDATE VAGAS_DW.OPORTUNIDADES SET REVISAO_COM_VALOR_ANTERIOR = CASE WHEN REVISAO = 1 
																    AND ULTIMO_VALOR IS NOT NULL AND ULTIMO_VALOR <> 0 THEN 1 ELSE 0 END 

-- var  ValorReal  
UPDATE VAGAS_DW.OPORTUNIDADES SET VALOR_REAL = CASE WHEN REVISAO_COM_VALOR_ANTERIOR = 1 
													THEN ValorProdutoFINAL - ULTIMO_VALOR
													ELSE CASE WHEN ISNULL(ValorProdutoFINAL,0) > 0 THEN ValorProdutoFINAL ELSE 0 END
													END

-- var  ValPos 
UPDATE VAGAS_DW.OPORTUNIDADES SET VALOR_POSIT = CASE WHEN VALOR_REAL >= 0 THEN VALOR_REAL ELSE 0 END

-- var ValNeg
UPDATE VAGAS_DW.OPORTUNIDADES SET VALOR_NEGAT = VALOR_REAL - VALOR_POSIT 


-- var  ProdRec 
--UPDATE VAGAS_DW.OPORTUNIDADES SET PRODUTO_RECORRENTE = CASE WHEN Produto = 'FIT' /*FIT = 1 */ AND RECORRENTE = 1 THEN
--															CASE WHEN REVISAO_COM_VALOR_ANTERIOR = 1 THEN 'FIT-REV' 
--																  ELSE 'FIT-NOV' END
--														ELSE PRODUTO_GRUPO END

-- ALTERAÇÃO LUIZ (17/11/2015 - marcar qualquer produto recorrente)
--UPDATE VAGAS_DW.OPORTUNIDADES SET PRODUTO_RECORRENTE = CASE WHEN RECORRENTE = 1 THEN
--															CASE WHEN REVISAO_COM_VALOR_ANTERIOR = 1 THEN PRODUTO_GRUPO + '-REV' 
--																  ELSE PRODUTO_GRUPO + '-NOV' END
--														ELSE PRODUTO_GRUPO END

-- ALTERAÇÃO LUIZ (07/03/2016 - marcar qualquer produto recorrente)
UPDATE VAGAS_DW.OPORTUNIDADES SET PRODUTO_RECORRENTE = CASE WHEN RECORRENTE = 1 THEN
															CASE WHEN REVISAO_COM_VALOR_ANTERIOR = 1 THEN
																  CASE WHEN VALOR_REAL > 0 THEN PRODUTO_GRUPO + '-REV-POS'
																	   WHEN VALOR_REAL < 0 THEN PRODUTO_GRUPO + '-REV-NEG'
																	   ELSE PRODUTO_GRUPO + '-REV' END 
																  ELSE PRODUTO_GRUPO + '-NOV' END
														ELSE PRODUTO_GRUPO END


-- var   Contrib 
UPDATE VAGAS_DW.OPORTUNIDADES SET CONTRIB = CASE WHEN RECORRENTE = 1 THEN 12 ELSE 1 END *
												 PESO_GRUPO * VALOR_REAL

-- var Cliente
UPDATE VAGAS_DW.OPORTUNIDADES SET CLIENTE = CASE WHEN ContaPAI IS NULL OR ContaPAI = '' THEN Conta 
												 ELSE ContaPAI END

-- var  ValRankCli 
UPDATE 	VAGAS_DW.OPORTUNIDADES SET VALOR_RANKING_CLIENTE = CASE WHEN RECORRENTE = 1 THEN VALOR_REAL
																ELSE CASE WHEN DATAFECHAMENTO >= DATEADD(DAY,-365,GETDATE()) 
																		  THEN VALOR_REAL / 12
																		  ELSE 0 END
																		  END
-- var  MesAnoFech 
UPDATE VAGAS_DW.OPORTUNIDADES SET MESANO_FECHAMENTO = (DataFechamento - DAY(DataFechamento) + 1) 

-- var Dias																
UPDATE VAGAS_DW.OPORTUNIDADES SET DIAS_MEDIA = CASE WHEN DATEDIFF(DAY,DataCriacao,DataFechamento) < 0 THEN 0 ELSE DATEDIFF(DAY,DataCriacao,DataFechamento) END 
										
-- var Grupo
UPDATE VAGAS_DW.OPORTUNIDADES SET GRUPO_VENDEDOR = B.GRUPO_VENDEDOR
FROM VAGAS_DW.OPORTUNIDADES A
INNER JOIN VAGAS_DW.GRUPO_VENDEDORES B ON B.VENDEDOR = A.PROPRIETARIO

-- Agrupamento do FIT e REDES para possibilitar análises em conjunto
UPDATE VAGAS_DW.OPORTUNIDADES SET CONTEM_FIT = CASE WHEN TAB_FIT.PRODUTO_GRUPO = 'FIT' OR A.PRODUTO_GRUPO = 'FIT' THEN 1 ELSE 0 END ,
	   CONTEM_REDES = CASE WHEN TAB_REDES.PRODUTO_GRUPO = 'VREDES' OR A.PRODUTO_GRUPO = 'VREDES' THEN 1 ELSE 0 END 
FROM VAGAS_DW.OPORTUNIDADES A
OUTER APPLY ( SELECT TOP 1 * FROM VAGAS_DW.OPORTUNIDADES
			  WHERE OportunidadeID = A.OportunidadeID
			  AND PRODUTO_GRUPO = 'VREDES'
			  AND PRODUTO_GRUPO <> A.PRODUTO_GRUPO ) TAB_REDES
OUTER APPLY ( SELECT TOP 1 * FROM VAGAS_DW.OPORTUNIDADES
			  WHERE OportunidadeID = A.OportunidadeID
			  AND PRODUTO_GRUPO = 'FIT'
			  AND PRODUTO_GRUPO <> A.PRODUTO_GRUPO ) TAB_FIT
WHERE A.RECORRENTE = 1
--AND A.Fase = 'fechado_e_ganho' 
--AND A.PRODUTO_GRUPO IN ('VREDES','FIT')

-- ajuste de inconsistencia em Out/15 (aguardar Marina com carga das rescisões que faltaram para remover este trecho_
UPDATE VAGAS_DW.OPORTUNIDADES SET MESANO_FECHAMENTO = '20151001',DATAFECHAMENTO = '20151001', VALOR_REAL = -6000,PRODUTO_RECORRENTE = 'FIT-REV',VALOR_NEGAT = -6000,OPORTUNIDADECATEGORIA = 'parceiro',FECHADO_GANHO = 1
FROM VAGAS_DW.OPORTUNIDADES 
WHERE Conta = 'Ficticia'

-- Alteração solicitada pela Mari (22/04/2016) para criação de campo "AgrupamentoOportunidade" 
UPDATE VAGAS_DW.OPORTUNIDADES SET GRUPO_OPORTUNIDADE = CASE 
			WHEN OPORTUNIDADECATEGORIA = 'rescisao' THEN 'Rescisões'  
			WHEN OPORTUNIDADECATEGORIA = 'cliente_potencial' THEN 'Novos'
			WHEN OPORTUNIDADECATEGORIA = 'produtos_complementares' 
				 OR PRODUTO_RECORRENTE IN ('FIT-REV-POS','PROD COMP-NOV','VET-NOV') THEN 'Rev Positiva'
			WHEN OPORTUNIDADECATEGORIA = 'renovacao' THEN 'Renovações'
			WHEN OPORTUNIDADECATEGORIA = 'retencao' 
				 OR PRODUTO_RECORRENTE IN ('FIT-REV-NEG') THEN 'Rev Negativa'
			END
FROM VAGAS_DW.OPORTUNIDADES 
WHERE RECORRENTE = 1 

-- Atualização no caso que estão com o ID_VAGAS = ""
UPDATE VAGAS_DW.OPORTUNIDADES SET ID_VAGAS = CONTA
FROM VAGAS_DW.OPORTUNIDADES
WHERE RTRIM(LTRIM(ID_VAGAS)) = '' 

-- ATUALIZAR DATA DE FECHAMENTO DAS OPORTUNIDADES DE RENOVAÇÃO QUE FORAM INCLUÍDAS NO MÊS ERRADO
UPDATE VAGAS_DW.OPORTUNIDADES SET DATAFECHAMENTO = CONVERT(SMALLDATETIME,RIGHT([MÊS],4) + SUBSTRING([MÊS],4,2) + LEFT([MÊS],2)) 
FROM VAGAS_DW.OPORTUNIDADES A
INNER JOIN VAGAS_DW.TMP_CONTRATOS_DATA_FECHAMENTO_20160701 B ON B.CNPJ = A.CNPJ
WHERE A.OPORTUNIDADECATEGORIA = 'renovacao'
AND DATAFECHAMENTO = ( SELECT MAX(DATAFECHAMENTO) FROM VAGAS_DW.OPORTUNIDADES 
						WHERE CONTA = A.CONTA
						AND OPORTUNIDADECATEGORIA = 'renovacao'
						AND Fase = 'fechado_e_ganho' )
AND MONTH(CONVERT(SMALLDATETIME,RIGHT([MÊS],4) + SUBSTRING([MÊS],4,2) + LEFT([MÊS],2))) <> MONTH(DATAFECHAMENTO )
AND NOT EXISTS ( SELECT 1 FROM VAGAS_DW.OPORTUNIDADES 
				 WHERE CONTA = A.CONTA
				 AND OPORTUNIDADECATEGORIA = 'revisao_de_perfil'
				 AND DATAFECHAMENTO > A.DATAFECHAMENTO
				 AND Fase = 'fechado_e_ganho' )
AND A.Categoria = 'cliente_fit'
AND A.Fase = 'fechado_e_ganho'

-- adicionado em 17/06/2016 (para relatório de renovações de contratos)
UPDATE VAGAS_DW.OPORTUNIDADES SET IGPM_MES = B.INDICE_ACUM_12_MESES_IGPM
FROM VAGAS_DW.OPORTUNIDADES A
INNER JOIN VAGAS_DW.INDICADORES_ECONOMICOS_MENSAL B ON DATEADD(MONTH,-1,A.DATAFECHAMENTO) >= B.DATA 
													AND DATEADD(MONTH,-1,A.DATAFECHAMENTO) < DATEADD(MONTH,1,B.DATA)
WHERE OPORTUNIDADECATEGORIA = 'renovacao' 
AND FECHADO_GANHO = 1 
AND IGPM_MES IS NULL

-- PROCESSO DE "CONGELAMENTO" PARA IDENTIFICARMOS INCONSISTÊNCIAS QUE POSSAM OCORRER NO PE
-- GRAVAMOS ATÉ O DIA 06 DE CADA MÊS
DECLARE @DATA_REFERENCIA SMALLDATETIME
SET @DATA_REFERENCIA = CONVERT(SMALLDATETIME, CONVERT(VARCHAR,GETDATE(),112))

IF DAY(@DATA_REFERENCIA) < 7
BEGIN
	-- LIMPAMOS OS DADOS PARA MANTER O ULTIMO
	DELETE VAGAS_DW.OPORTUNIDADES_HISTORICO 
	FROM VAGAS_DW.OPORTUNIDADES_HISTORICO 
	WHERE MONTH(DATA_REFERENCIA) = MONTH(@DATA_REFERENCIA)
	AND YEAR(DATA_REFERENCIA) = YEAR(@DATA_REFERENCIA)

	INSERT INTO VAGAS_DW.OPORTUNIDADES_HISTORICO (Conta,Categoria,Negocio,Perfil,ContaPAI,Oportunidade,Fase,OportunidadeCategoria,
PropostaValor,DataCriacao,DataFechamento,Proprietario,Proposta,Produto,ValorProduto,Desconto,Quantidade,ValorProdutoFINAL,
OportunidadeValor,PropostaPrincipal,DIAS_MEDIA,FIT,FECHADO_GANHO,REVISAO_FIT,ULTIMO_VALOR,PRODUTO_GRUPO,PESO_GRUPO,
VALOR_REAL,CONTRIB,REVISAO_COM_VALOR_ANTERIOR,VALOR_POSIT,VALOR_NEGAT,GRUPO_VENDEDOR,PRODUTO_RECORRENCIA,
RECORRENTE,PRODUTO_RECORRENTE,PROPOSTA_ID,VALOR_RANKING_CLIENTE,MESANO_FECHAMENTO,CLIENTE,OportunidadeID,
PropostaID,ID_HSYS,REVISAO,LeadCampanha,ID_VAGAS,CONTAID,ContaValorPrincipal,ContaPropostaAprov,
ContaProprietario,ContaValorPropAprov,FATURA_ERP,CNPJ,TIPO_CONTA,CriadorOportunidade,CONTEM_REDES,CONTEM_FIT,
GRUPO_OPORTUNIDADE,ContaUsuarioAlteracao,DataAlteracaoConta,IGPM_MES,MOTIVO_PERDA,MOTIVO_PERDA_COMPLEMENTO,
Campanha,POSSUI_CONTA_MEMBRO,DATA_REFERENCIA)
	SELECT Conta,Categoria,Negocio,Perfil,ContaPAI,Oportunidade,Fase,OportunidadeCategoria,PropostaValor,DataCriacao,DataFechamento,
Proprietario,Proposta,Produto,ValorProduto,Desconto,Quantidade,ValorProdutoFINAL,OportunidadeValor,PropostaPrincipal,DIAS_MEDIA,
FIT,FECHADO_GANHO,REVISAO_FIT,ULTIMO_VALOR,PRODUTO_GRUPO,PESO_GRUPO,VALOR_REAL,CONTRIB,REVISAO_COM_VALOR_ANTERIOR,VALOR_POSIT,
VALOR_NEGAT,GRUPO_VENDEDOR,PRODUTO_RECORRENCIA,RECORRENTE,PRODUTO_RECORRENTE,PROPOSTA_ID,VALOR_RANKING_CLIENTE,MESANO_FECHAMENTO,
CLIENTE,OportunidadeID,PropostaID,ID_HSYS,REVISAO,LeadCampanha,ID_VAGAS,CONTAID,ContaValorPrincipal,ContaPropostaAprov,ContaProprietario,
ContaValorPropAprov,FATURA_ERP,CNPJ,TIPO_CONTA,CriadorOportunidade,CONTEM_REDES,CONTEM_FIT,GRUPO_OPORTUNIDADE,ContaUsuarioAlteracao,
DataAlteracaoConta,IGPM_MES,MOTIVO_PERDA,MOTIVO_PERDA_COMPLEMENTO,Campanha,POSSUI_CONTA_MEMBRO,
@DATA_REFERENCIA AS DATA_REFERENCIA FROM VAGAS_DW.OPORTUNIDADES
END
