USE VAGAS_DW
GO

IF EXISTS ( SELECT * FROM SYS.OBJECTS WHERE NAME = 'SPR_OLAP_Carga_CASOS' AND SCHEMA_NAME(SCHEMA_ID) = 'VAGAS_DW')
DROP PROCEDURE VAGAS_DW.SPR_OLAP_Carga_CASOS
GO

-- =============================================
-- Author: Luiz Fernando Braz
-- Create date: 19/05/2016
-- Description: Procedure para carga das tabelas temporárias (BD Stage) para alimentação do DW
-- =============================================

CREATE PROCEDURE VAGAS_DW.SPR_OLAP_Carga_CASOS 
AS
SET NOCOUNT ON

DELETE VAGAS_DW.CASOS
FROM VAGAS_DW.CASOS A
WHERE EXISTS ( SELECT 1 FROM VAGAS_DW.TMP_CASOS
				WHERE ID_CASO = A.ID_CASO )

SELECT ID_CASO,NUMERO_CASO,CONTA,FILA_ATENDIMENTO,STATUS,PRIORIDADE,CRITICIDADE,ORIGEM,TIPO,SUB_TIPO,DATA_INICIO_ATENDIMENTO,
		    DATA_FECHAMENTO,DATA_INCLUSAO,DATA_MODIFICACAO,USUARIO_RESPONSAVEL,ORIGEM_SUPORTE,DATA_PRM_ACAO,
	   CASE WHEN DATEPART(WEEKDAY,DATA_INCLUSAO_NORMALIZADA) = 7 -- SÁBADO
			THEN DATEADD(HOUR,8,CONVERT(SMALLDATETIME,CONVERT(VARCHAR,DATEADD(DAY,2,DATA_INCLUSAO_NORMALIZADA),112)))
			WHEN DATEPART(WEEKDAY,DATA_INCLUSAO_NORMALIZADA) = 1 -- DOMINGO
			THEN DATEADD(HOUR,8,CONVERT(SMALLDATETIME,CONVERT(VARCHAR,DATEADD(DAY,1,DATA_INCLUSAO_NORMALIZADA),112)))
			ELSE DATA_INCLUSAO_NORMALIZADA END AS DATA_INCLUSAO_NORMALIZADA
INTO #TMP_DATA_NORMALIZADA 
FROM 
	(

	-- TRATAR CHAMADOS ABERTOS FORA DO HORÁRIO DE EXPEDIENTE (08:00 ÀS 19:00)
	SELECT ID_CASO,NUMERO_CASO,CONTA,FILA_ATENDIMENTO,STATUS,PRIORIDADE,CRITICIDADE,ORIGEM,TIPO,SUB_TIPO,DATA_INICIO_ATENDIMENTO,
		    DATA_FECHAMENTO,DATA_INCLUSAO,DATA_MODIFICACAO,USUARIO_RESPONSAVEL,ORIGEM_SUPORTE,DATA_PRM_ACAO,
			CASE WHEN DATEPART(HOUR,DATA_INCLUSAO) >= 19 
							THEN DATEADD(HOUR,8,DATEADD(DAY,1,CONVERT(SMALLDATETIME,CONVERT(VARCHAR,DATA_INCLUSAO,112))))
							WHEN DATEPART(HOUR,DATA_INCLUSAO) < 8 
							THEN DATEADD(HOUR,8,CONVERT(SMALLDATETIME,CONVERT(VARCHAR,DATA_INCLUSAO,112)))
							ELSE DATA_INCLUSAO END AS DATA_INCLUSAO_NORMALIZADA
	FROM VAGAS_DW.TMP_CASOS
	
	) TAB
ORDER BY 1

-- TRATAR FERIADOS NACIONAIS + SP 
UPDATE #TMP_DATA_NORMALIZADA SET DATA_INCLUSAO_NORMALIZADA = CASE
				-- se o próx. dia for sábado adiantar 3 dias (seg.) 
				WHEN DATEPART(WEEKDAY,DATEADD(DAY,1,DATA_INCLUSAO_NORMALIZADA)) = 7 THEN DATEADD(DAY,3,DATA_INCLUSAO_NORMALIZADA)
				-- se o próx. dia for domingo adiantar 2 dias 
				WHEN DATEPART(WEEKDAY,DATEADD(DAY,1,DATA_INCLUSAO_NORMALIZADA)) = 1 THEN DATEADD(DAY,2,DATA_INCLUSAO_NORMALIZADA)
				ELSE DATEADD(DAY,1,DATA_INCLUSAO_NORMALIZADA) END
FROM #TMP_DATA_NORMALIZADA A
WHERE EXISTS ( SELECT 1
				FROM VAGAS_DW.FERIADOS_NACIONAIS -- CONTÉM OS FERIADOS BRA + SP ATE 2019
				WHERE DATA = CONVERT(SMALLDATETIME,CONVERT(VARCHAR,A.DATA_INCLUSAO_NORMALIZADA,112)) )



----------------------- CALCULAR TEMPO MÉDIO DE RESPOSTA (TMR)
-----------------------------------------------------------------------------------------

DECLARE	@DATA_REFERENCIA_INICIAL SMALLDATETIME ,
		@DATA_REFERENCIA_FINAL SMALLDATETIME ,
		@QTD_HORAS_UTEIS TINYINT = 10 ,
		@EXTREMIDADE_INFERIOR TINYINT = 8 , -- HORÁRIO INÍCIO EXPEDIENTE
		@EXTREMIDADE_SUPERIOR TINYINT = 18  -- HORÁRIO FINAL EXPEDIENTE

	SELECT	@DATA_REFERENCIA_INICIAL = (MIN(CONVERT(SMALLDATETIME, CONVERT(VARCHAR, DATA_INCLUSAO, 112)))) ,
			@DATA_REFERENCIA_FINAL = (MAX(CONVERT(SMALLDATETIME, CONVERT(VARCHAR, DATA_INCLUSAO, 112))))
	FROM	#TMP_DATA_NORMALIZADA ;

	WITH CTE_DATAS AS (
		SELECT	@DATA_REFERENCIA_INICIAL AS DATA_REFERENCIA
		UNION ALL
		SELECT	DATEADD(DAY, 1, DATA_REFERENCIA) AS DATA_REFERENCIA
		FROM	CTE_DATAS
		WHERE	DATA_REFERENCIA < @DATA_REFERENCIA_FINAL 
	)



	-- EXTRAÇÃO DAS QUANTIDADES
	SELECT	A.NUMERO_CASO ,
			A.DATA_INCLUSAO ,
			A.DATA_INCLUSAO_NORMALIZADA ,
			ISNULL(A.DATA_FECHAMENTO, A.DATA_MODIFICACAO) AS DATA_FECHADO ,
 
			DATEDIFF(DAY, A.DATA_INCLUSAO_NORMALIZADA, DATEADD(DAY, 1, ISNULL(A.DATA_FECHAMENTO, A.DATA_MODIFICACAO))) AS QTD_DIAS ,
			( SELECT COUNT(*) FROM CTE_DATAS
			  WHERE DATA_REFERENCIA >= A.DATA_INCLUSAO_NORMALIZADA
					AND DATA_REFERENCIA < ISNULL(A.DATA_FECHAMENTO, A.DATA_MODIFICACAO)
					AND ( DATEPART(WEEKDAY, DATA_REFERENCIA) IN (1,7)) -- Dias da DATA_REFERENCIA estejam entre domingo e sábado (dias de final de semana)
						  OR EXISTS ( SELECT 1
									  FROM	VAGAS_DW.FERIADOS_NACIONAIS
									  WHERE	DATA = CONVERT(SMALLDATETIME, CONVERT(VARCHAR, A.DATA_INCLUSAO_NORMALIZADA, 112))) -- ou a data seja um final de semana
			) AS QTD_DIAS_FDS ,

			-- FÓRMULA TMR
			( DATEDIFF(DAY, A.DATA_INCLUSAO_NORMALIZADA, DATEADD(DAY, 1, ISNULL(A.DATA_FECHAMENTO, A.DATA_MODIFICACAO))) * 10) -- CALCULAR HORAS CORRIDAS DE TRABALHO

			-

			 ( ( SELECT COUNT(*)
				 FROM	CTE_DATAS
				 WHERE	DATA_REFERENCIA >= A.DATA_INCLUSAO_NORMALIZADA
						AND DATA_REFERENCIA < ISNULL(A.DATA_FECHAMENTO, A.DATA_MODIFICACAO)
						AND (DATEPART(WEEKDAY, DATA_REFERENCIA) IN (1, 7)
							 OR EXISTS (SELECT 1
										FROM	VAGAS_DW.FERIADOS_NACIONAIS
										WHERE	DATA = CONVERT(SMALLDATETIME, CONVERT(VARCHAR, A.DATA_INCLUSAO_NORMALIZADA, 112))))
			 ) * @QTD_HORAS_UTEIS)

			 - 

			 (  @QTD_HORAS_UTEIS - (@EXTREMIDADE_SUPERIOR - DATEPART(HOUR,A.DATA_INCLUSAO_NORMALIZADA)) ) -- CALCULAR HORAS DE DESCONTO DO INICIO EXPEDIENTE
			-

			(  @QTD_HORAS_UTEIS - ((DATEPART(HOUR,ISNULL(A.DATA_FECHAMENTO, A.DATA_MODIFICACAO))) - @EXTREMIDADE_INFERIOR) ) -- CALCULAR HORAS DE DESCONTO DO INICIO EXPEDIENTE
			AS TMR,


			-- BRAZ (20160801): Criação do novo campo TME (sem o desconto de finais de semana, feriados ou horário de atendimento)
		    
			-- Diferença de hrs entre DATA_INCLUSAO E DATA_FECHAMENTO
			DATEDIFF(HOUR,A.DATA_INCLUSAO,ISNULL(A.DATA_FECHAMENTO, A.DATA_MODIFICACAO)) AS TME			


	INTO	#TMR_CASOS
	FROM	#TMP_DATA_NORMALIZADA AS A
	WHERE	A.FILA_ATENDIMENTO = 'suporte_empresas'
			AND A.STATUS = 'fechado'
	ORDER BY A.NUMERO_CASO ASC 
	OPTION (MAXRECURSION 32767);
-- (354 row(s) affected)


SELECT	NUMERO_CASO ,
		TMR ,
		DATA_INCLUSAO ,
		DATA_FECHADO ,
		TME
FROM	#TMR_CASOS
ORDER BY NUMERO_CASO ASC ;


-- Inserir novos casos 
INSERT INTO VAGAS_DW.CASOS (ID_CASO,NUMERO_CASO,CONTA,FILA_ATENDIMENTO,[STATUS],PRIORIDADE,CRITICIDADE,ORIGEM,TIPO,SUB_TIPO,DATA_INICIO_ATENDIMENTO,DATA_FECHAMENTO,
DATA_INCLUSAO,DATA_MODIFICACAO,USUARIO_RESPONSAVEL,ORIGEM_SUPORTE,DATA_PRM_ACAO,DATA_INCLUSAO_NORMALIZADA)
SELECT	*
FROM #TMP_DATA_NORMALIZADA


DROP TABLE #TMR_CASOS ;