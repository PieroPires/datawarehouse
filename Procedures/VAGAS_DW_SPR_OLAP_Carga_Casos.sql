USE VAGAS_DW
GO

IF EXISTS ( SELECT * FROM SYS.OBJECTS WHERE NAME = 'SPR_OLAP_Carga_CASOS' AND SCHEMA_NAME(SCHEMA_ID) = 'VAGAS_DW')
DROP PROCEDURE VAGAS_DW.SPR_OLAP_Carga_CASOS
GO

-- =============================================
-- Author: Luiz Fernando Braz
-- Create date: 19/05/2016
-- Description: Procedure para carga das tabelas temporárias (BD Stage) para alimentação do DW
-- =============================================

CREATE PROCEDURE VAGAS_DW.SPR_OLAP_Carga_CASOS 
AS
SET NOCOUNT ON

DELETE VAGAS_DW.CASOS
FROM VAGAS_DW.CASOS A
WHERE EXISTS ( SELECT 1 FROM VAGAS_DW.TMP_CASOS
				WHERE ID_CASO = A.ID_CASO )

SELECT ID_CASO,NUMERO_CASO,CONTA,FILA_ATENDIMENTO,STATUS,PRIORIDADE,CRITICIDADE,ORIGEM,TIPO,SUB_TIPO,DATA_INICIO_ATENDIMENTO,
		    DATA_FECHAMENTO,DATA_INCLUSAO,DATA_MODIFICACAO,USUARIO_RESPONSAVEL,ORIGEM_SUPORTE,DATA_PRM_ACAO,
	   CASE WHEN DATEPART(WEEKDAY,DATA_INCLUSAO_NORMALIZADA) = 7 -- SÁBADO
			THEN DATEADD(HOUR,8,CONVERT(SMALLDATETIME,CONVERT(VARCHAR,DATEADD(DAY,2,DATA_INCLUSAO_NORMALIZADA),112)))
			WHEN DATEPART(WEEKDAY,DATA_INCLUSAO_NORMALIZADA) = 1 -- DOMINGO
			THEN DATEADD(HOUR,8,CONVERT(SMALLDATETIME,CONVERT(VARCHAR,DATEADD(DAY,1,DATA_INCLUSAO_NORMALIZADA),112)))
			ELSE DATA_INCLUSAO_NORMALIZADA END AS DATA_INCLUSAO_NORMALIZADA
INTO #TMP_DATA_NORMALIZADA 
FROM 
	(

	-- TRATAR CHAMADOS ABERTOS FORA DO HORÁRIO DE EXPEDIENTE (08:00 ÀS 19:00)
	SELECT ID_CASO,NUMERO_CASO,CONTA,FILA_ATENDIMENTO,STATUS,PRIORIDADE,CRITICIDADE,ORIGEM,TIPO,SUB_TIPO,DATA_INICIO_ATENDIMENTO,
		    DATA_FECHAMENTO,DATA_INCLUSAO,DATA_MODIFICACAO,USUARIO_RESPONSAVEL,ORIGEM_SUPORTE,DATA_PRM_ACAO,
			CASE WHEN DATEPART(HOUR,DATA_INCLUSAO) >= 19 
							THEN DATEADD(HOUR,8,DATEADD(DAY,1,CONVERT(SMALLDATETIME,CONVERT(VARCHAR,DATA_INCLUSAO,112))))
							WHEN DATEPART(HOUR,DATA_INCLUSAO) < 8 
							THEN DATEADD(HOUR,8,CONVERT(SMALLDATETIME,CONVERT(VARCHAR,DATA_INCLUSAO,112)))
							ELSE DATA_INCLUSAO END AS DATA_INCLUSAO_NORMALIZADA
	FROM VAGAS_DW.TMP_CASOS
	
	) TAB
ORDER BY 1

-- TRATAR FERIADOS NACIONAIS + SP 
UPDATE #TMP_DATA_NORMALIZADA SET DATA_INCLUSAO_NORMALIZADA = CASE
				-- se o próx. dia for sábado adiantar 3 dias (seg.) 
				WHEN DATEPART(WEEKDAY,DATEADD(DAY,1,DATA_INCLUSAO_NORMALIZADA)) = 7 THEN DATEADD(DAY,3,DATA_INCLUSAO_NORMALIZADA)
				-- se o próx. dia for domingo adiantar 2 dias 
				WHEN DATEPART(WEEKDAY,DATEADD(DAY,1,DATA_INCLUSAO_NORMALIZADA)) = 1 THEN DATEADD(DAY,2,DATA_INCLUSAO_NORMALIZADA)
				ELSE DATEADD(DAY,1,DATA_INCLUSAO_NORMALIZADA) END
FROM #TMP_DATA_NORMALIZADA A
WHERE EXISTS ( SELECT 1
				FROM VAGAS_DW.FERIADOS_NACIONAIS -- CONTÉM OS FERIADOS BRA + SP ATE 2019
				WHERE DATA = CONVERT(SMALLDATETIME,CONVERT(VARCHAR,A.DATA_INCLUSAO_NORMALIZADA,112)) )



-- Inserir novos contratos 
INSERT INTO VAGAS_DW.CASOS 
SELECT *
FROM #TMP_DATA_NORMALIZADA
